#cython: boundscheck=False
#cython: wraparound=False
#cython: cdivision=True
#cython: nonecheck=False
#cython: infer_types=False
r"""
Quad4R - Quadrilateral element with reduced integration (:mod:`pyfe3d.quad4r`)
==============================================================================

.. currentmodule:: pyfe3d.quad4r

"""
from libc.math cimport fabs

import numpy as np
cimport numpy as np

from .shellprop cimport ShellProp

ctypedef np.int64_t cINT
INT = np.int64
ctypedef np.double_t cDOUBLE
DOUBLE = np.float64
cdef cINT DOF = 6
cdef cINT NUM_NODES = 4

cdef class Quad4RData:
    r"""
    Used to allocate memory for the sparse matrices.

    Attributes
    ----------
    KC0_SPARSE_SIZE : int
        ``KC0_SPARSE_SIZE = 576``

    KG_SPARSE_SIZE : int
        ``KG_SPARSE_SIZE = 144``

    M_SPARSE_SIZE : int
        ``M_SPARSE_SIZE = 480``

    """
    cdef public cINT KC0_SPARSE_SIZE
    cdef public cINT KG_SPARSE_SIZE
    cdef public cINT M_SPARSE_SIZE
    def __cinit__(Quad4RData self):
        self.KC0_SPARSE_SIZE = 576
        self.KG_SPARSE_SIZE = 144
        self.M_SPARSE_SIZE = 480

cdef class Quad4RProbe:
    r"""
    Probe used for local coordinates, local displacements, local stresses etc

    Attributes
    ----------
    xe : array-like
        Array of size ``NUM_NODES*DOF//2=12`` containing the nodal coordinates
        in the element coordinate system, in the following order `{x_e}_1,
        {y_e}_1, {z_e}_1, `{x_e}_2, {y_e}_2, {z_e}_2`, `{x_e}_3, {y_e}_3,
        {z_e}_3`, `{x_e}_4, {y_e}_4, {z_e}_4`.
    ue : array-like
        Array of size ``NUM_NODES*DOF=24`` containing the element displacements
        in the following order `{u_e}_1, {v_e}_1, {w_e}_1, {{r_x}_e}_1,
        {{r_y}_e}_1, {{r_z}_e}_1`, `{u_e}_2, {v_e}_2, {w_e}_2, {{r_x}_e}_2,
        {{r_y}_e}_2, {{r_z}_e}_2`, `{u_e}_3, {v_e}_3, {w_e}_3, {{r_x}_e}_3,
        {{r_y}_e}_3, {{r_z}_e}_3`, `{u_e}_4, {v_e}_4, {w_e}_4, {{r_x}_e}_4,
        {{r_y}_e}_4, {{r_z}_e}_4`.

    """
    cdef public cDOUBLE[:] xe
    cdef public cDOUBLE[:] ue
    def __cinit__(Quad4RProbe self):
        self.xe = np.zeros(NUM_NODES*DOF//2, dtype=DOUBLE)
        self.ue = np.zeros(NUM_NODES*DOF, dtype=DOUBLE)

cdef class Quad4R:
    r"""
    Nodal connectivity for the plate element similar to Nastran's CQUAD4::

         ^ y
         |
        4 ________ 3
         |       |
         |       |   --> x
         |       |
         |_______|
        1         2

    The element coordinate system is determined identically what is explained
    in Nastran's quick reference guide for the CQUAD4 element, as illustrated
    below.

    .. image:: ../figures/nastran_cquad4.svg

    Attributes
    ----------
    eid : int
        Element identification number.
    area : double
        Element area.
    r11, r12, r13, r21, r22, r23, r31, r32, r33 : double
        Rotation matrix to the global coordinate system.
    c1, c2, c3, c4 : int
        Position of each node in the global stiffness matrix.
    n1, n2, n3, n4 : int
        Node identification number.
    init_k_KC0, init_k_KG, init_k_M : int
        Position in the arrays storing the sparse data for the structural
        matrices.
    probe : :class:`.Quad4RProbe` object
        Pointer to the probe.

    """
    cdef public cINT eid
    cdef public cINT n1, n2, n3, n4
    cdef public cINT c1, c2, c3, c4
    cdef public cINT init_k_KC0, init_k_KG, init_k_M
    cdef public double area
    cdef public double alphat # drilling penalty factor for stiffness matrix, see Eq. 2.20 in F.M. Adam, A.E. Mohamed, A.E. Hassaballa, Degenerated Four Nodes Shell Element with Drilling Degree of Freedom, IOSR J. Eng. 3 (2013) 10–20. www.iosrjen.org (accessed April 20, 2020).
    cdef public double r11, r12, r13, r21, r22, r23, r31, r32, r33
    cdef public Quad4RProbe probe


    def __cinit__(Quad4R self, Quad4RProbe p):
        self.probe = p
        self.eid = -1
        self.n1 = -1
        self.n2 = -1
        self.n3 = -1
        self.n4 = -1
        self.c1 = -1
        self.c2 = -1
        self.c3 = -1
        self.c4 = -1
        self.init_k_KC0 = 0
        #self.init_k_KCNL = 0
        self.init_k_KG = 0
        self.init_k_M = 0
        self.area = 0
        self.alphat = 1. # based on recommended value of reference F.M. Adam, A.E. Mohamed, A.E. Hassaballa
        self.r11 = self.r12 = self.r13 = 0.
        self.r21 = self.r22 = self.r23 = 0.
        self.r31 = self.r32 = self.r33 = 0.


    cpdef void update_rotation_matrix(Quad4R self, np.ndarray[cDOUBLE, ndim=1] x):
        r"""Update the rotation matrix of the element

        Attributes ``r11,r12,r13,r21,r22,r23,r31,r32,r33`` are updated,
        corresponding to the rotation matrix from local to global coordinates.

        The element coordinate system is determined, identifying the `ijk`
        components of each axis: `{x_e}_i, {x_e}_j, {x_e}_k`; `{y_e}_i,
        {y_e}_j, {y_e}_k`; `{z_e}_i, {z_e}_j, {z_e}_k`.

        The rotation matrix terms are calculated after solving 9 equations.

        Parameters
        ----------
        x : array-like
            Array with global nodal coordinates, for a total of `M` nodes in
            the model, this array will be arranged as: `x_1, y_1, z_1, x_2,
            y_2, z_2, ..., x_M, y_M, z_M`.

        """
        cdef double xi, xj, xk, yi, yj, yk, zi, zj, zk, tmp
        cdef double x1i, x1j, x1k, x2i, x2j, x2k, x3i, x3j, x3k, x4i, x4j, x4k
        cdef double v13i, v13j, v13k, v42i, v42j, v42k

        with nogil:
            x1i = x[self.c1//2 + 0]
            x1j = x[self.c1//2 + 1]
            x1k = x[self.c1//2 + 2]
            x2i = x[self.c2//2 + 0]
            x2j = x[self.c2//2 + 1]
            x2k = x[self.c2//2 + 2]
            x3i = x[self.c3//2 + 0]
            x3j = x[self.c3//2 + 1]
            x3k = x[self.c3//2 + 2]
            x4i = x[self.c4//2 + 0]
            x4j = x[self.c4//2 + 1]
            x4k = x[self.c4//2 + 2]

            v13i = x3i - x1i
            v13j = x3j - x1j
            v13k = x3k - x1k
            v42i = x2i - x4i
            v42j = x2j - x4j
            v42k = x2k - x4k

            xi = (v13i + v42i)/2.
            xj = (v13j + v42j)/2.
            xk = (v13k + v42k)/2.
            tmp = (xi**2 + xj**2 + xk**2)**0.5
            xi /= tmp
            xj /= tmp
            xk /= tmp

            zi = v42j*v13k - v42k*v13j
            zj = -v42i*v13k + v42k*v13i
            zk = v42i*v13j - v42j*v13i
            tmp = (zi**2 + zj**2 + zk**2)**0.5
            zi /= tmp
            zj /= tmp
            zk /= tmp

            yi = -xj*zk + xk*zj
            yj = xi*zk - xk*zi
            yk = -xi*zj + xj*zi
            tmp = (yi**2 + yj**2 + yk**2)**0.5
            yi /= tmp
            yj /= tmp
            yk /= tmp

            tmp = xi*yj*zk - xi*yk*zj - xj*yi*zk + xj*yk*zi + xk*yi*zj - xk*yj*zi
            self.r11 = (yj*zk - yk*zj)/tmp
            self.r12 = (-xj*zk + xk*zj)/tmp
            self.r13 = (xj*yk - xk*yj)/tmp
            self.r21 = (-yi*zk + yk*zi)/tmp
            self.r22 = (xi*zk - xk*zi)/tmp
            self.r23 = (-xi*yk + xk*yi)/tmp
            self.r31 = (yi*zj - yj*zi)/tmp
            self.r32 = (-xi*zj + xj*zi)/tmp
            self.r33 = (xi*yj - xj*yi)/tmp


    cpdef void update_probe_ue(Quad4R self, np.ndarray[cDOUBLE, ndim=1] u):
        r"""Update the local displacement vector of the probe of the element

        .. note:: The ``probe`` attribute object :class:`.Quad4RProbe` is
                  updated, not the element object.

        Parameters
        ----------
        u : array-like
            Array with global displacements, for a total of `M` nodes in
            the model, this array will be arranged as: `u_1, v_1, w_1, {r_x}_1,
            {r_y}_1, {r_z}_1, u_2, v_2, w_2, {r_x}_2, {r_y}_2, {r_z}_2, ...,
            u_M, v_M, w_M, {r_x}_M, {r_y}_M, {r_z}_M`.

        """
        cdef int i, j
        cdef cINT c[4]
        cdef double s1[3]
        cdef double s2[3]
        cdef double s3[3]

        with nogil:
            # positions in the global stiffness matrix
            c[0] = self.c1
            c[1] = self.c2
            c[2] = self.c3
            c[3] = self.c4

            # global to local transformation of displacements
            s1[0] = self.r11
            s1[1] = self.r21
            s1[2] = self.r31
            s2[0] = self.r12
            s2[1] = self.r22
            s2[2] = self.r32
            s3[0] = self.r13
            s3[1] = self.r23
            s3[2] = self.r33

            for j in range(NUM_NODES):
                for i in range(DOF):
                    self.probe.ue[j*DOF + i] = 0

            for j in range(NUM_NODES):
                for i in range(DOF//2):
                    #transforming translations
                    self.probe.ue[j*DOF + 0] += s1[i]*u[c[j] + 0 + i]
                    self.probe.ue[j*DOF + 1] += s2[i]*u[c[j] + 0 + i]
                    self.probe.ue[j*DOF + 2] += s3[i]*u[c[j] + 0 + i]
                    #transforming rotations
                    self.probe.ue[j*DOF + 3] += s1[i]*u[c[j] + 3 + i]
                    self.probe.ue[j*DOF + 4] += s2[i]*u[c[j] + 3 + i]
                    self.probe.ue[j*DOF + 5] += s3[i]*u[c[j] + 3 + i]


    cpdef void update_probe_xe(Quad4R self, np.ndarray[cDOUBLE, ndim=1] x):
        r"""Update the 3D coordinates of the probe of the element

        .. note:: The ``probe`` attribute object :class:`.Quad4RProbe` is
                  updated, not the element object.

        Parameters
        ----------
        x : array-like
            Array with global nodal coordinates, for a total of `M` nodes in
            the model, this array will be arranged as: `x_1, y_1, z_1, x_2,
            y_2, z_2, ..., x_M, y_M, z_M`.

        """
        cdef int i, j
        cdef cINT c[4]
        cdef double s1[3]
        cdef double s2[3]
        cdef double s3[3]

        with nogil:
            # positions in the global stiffness matrix
            c[0] = self.c1
            c[1] = self.c2
            c[2] = self.c3
            c[3] = self.c4

            # global to local transformation of displacements
            s1[0] = self.r11
            s1[1] = self.r21
            s1[2] = self.r31
            s2[0] = self.r12
            s2[1] = self.r22
            s2[2] = self.r32
            s3[0] = self.r13
            s3[1] = self.r23
            s3[2] = self.r33

            for j in range(NUM_NODES):
                for i in range(DOF//2):
                    self.probe.xe[j*DOF//2 + i] = 0

            for j in range(NUM_NODES):
                for i in range(DOF//2):
                    self.probe.xe[j*DOF//2 + 0] += s1[i]*x[c[j]//2 + i]
                    self.probe.xe[j*DOF//2 + 1] += s2[i]*x[c[j]//2 + i]
                    self.probe.xe[j*DOF//2 + 2] += s3[i]*x[c[j]//2 + i]

        self.update_area()


    cpdef void update_area(Quad4R self):
        r"""Update element area

        """
        cdef double x1, x2, x3, x4, y1, y2, y3, y4
        with nogil:
            #NOTE ignoring z in local coordinates
            x1 = self.probe.xe[0]
            y1 = self.probe.xe[1]
            #z1 = self.probe.xe[2]
            x2 = self.probe.xe[3]
            y2 = self.probe.xe[4]
            #z2 = self.probe.xe[5]
            x3 = self.probe.xe[6]
            y3 = self.probe.xe[7]
            #z3 = self.probe.xe[8]
            x4 = self.probe.xe[9]
            y4 = self.probe.xe[10]
            #z4 = self.probe.xe[11]
            self.area = 1/2.*fabs((x1*y2 + x2*y3 + x3*y4 + x4*y1) - (x2*y1 + x3*y2 + x4*y3 + x1*y4))


    cpdef void update_KC0(Quad4R self,
            np.ndarray[cINT, ndim=1] KC0r,
            np.ndarray[cINT, ndim=1] KC0c,
            np.ndarray[cDOUBLE, ndim=1] KC0v,
            ShellProp prop,
            int update_KC0v_only=0
            ):
        r"""Update sparse vectors for linear constitutive stiffness matrix KC0

        Reduced integration is used with a single point in the centroid
        (`\xi=\eta=0`) and weight `w_{ij}=4`, preventing shear locking.
        Hourglass control is used according to Brockman 1987:

            Brockman, R. A., 1987, “Dynamics of the Bilinear Mindlin Plate
            Element,” Int. J. Numer. Methods Eng., 24(12), pp. 2343–2356.
            https://onlinelibrary.wiley.com/doi/pdf/10.1002/nme.1620241208

        Drilling stiffness is used according to Adam et al. 2013:

            Adam, F. M., Mohamed, A. E., and Hassaballa, A. E., 2013,
            “Degenerated Four Nodes Shell Element with Drilling Degree of
            Freedom,” IOSR J. Eng., 3(8), pp. 10–20.


        Properties
        ----------
        KC0r : np.array
            Array to store row positions of sparse values
        KC0c : np.array
            Array to store column positions of sparse values
        KC0v : np.array
            Array to store sparse values
        prop : :class:`ShellProp` object
            Shell property object from where the stiffness and mass attributes
            are read from.
        update_KC0v_only : int
            The default `0` means that only `KC0v` is updated. Any other value will
            lead to `KC0r` and `KC0c` also being updated.

        """
        cdef cINT c1, c2, c3, c4, k
        cdef double x1, x2, x3, x4, y1, y2, y3, y4, wij, detJ
        cdef double A11, A12, A16, A22, A26, A66
        cdef double B11, B12, B16, B22, B26, B66
        cdef double D11, D12, D16, D22, D26, D66
        cdef double E44, E45, E55
        cdef double E1eq, E2eq
        cdef double alphat
        cdef double Eu, Ev, Erx, Ery, Ew, h
        cdef double r11, r12, r13, r21, r22, r23, r31, r32, r33
        cdef double j11, j12, j21, j22, N1x, N2x, N3x, N4x, N1y, N2y, N3y, N4y
        cdef double N1, N2, N3, N4
        cdef double N1xy, N2xy, N3xy, N4xy, gamma1, gamma2, gamma3, gamma4

        with nogil:
            A11 = prop.A11
            A12 = prop.A12
            A16 = prop.A16
            A22 = prop.A22
            A26 = prop.A26
            A66 = prop.A66
            B11 = prop.B11
            B12 = prop.B12
            B16 = prop.B16
            B22 = prop.B22
            B26 = prop.B26
            B66 = prop.B66
            D11 = prop.D11
            D12 = prop.D12
            D16 = prop.D16
            D22 = prop.D22
            D26 = prop.D26
            D66 = prop.D66
            E44 = prop.E44*prop.scf_k23
            E45 = prop.E45*0.5*(prop.scf_k13 + prop.scf_k23)
            E55 = prop.E55*prop.scf_k13

            h = prop.h

            E1eq = prop.e1
            E2eq = prop.e2

            #NOTE ignoring z in local coordinates
            x1 = self.probe.xe[0]
            y1 = self.probe.xe[1]
            #z1 = self.probe.xe[2]
            x2 = self.probe.xe[3]
            y2 = self.probe.xe[4]
            #z2 = self.probe.xe[5]
            x3 = self.probe.xe[6]
            y3 = self.probe.xe[7]
            #z3 = self.probe.xe[8]
            x4 = self.probe.xe[9]
            y4 = self.probe.xe[10]
            #z4 = self.probe.xe[11]

            #Local to global transformation
            r11 = self.r11
            r12 = self.r12
            r13 = self.r13
            r21 = self.r21
            r22 = self.r22
            r23 = self.r23
            r31 = self.r31
            r32 = self.r32
            r33 = self.r33

            if update_KC0v_only == 0:
                # positions in the global stiffness matrix
                c1 = self.c1
                c2 = self.c2
                c3 = self.c3
                c4 = self.c4

                k = self.init_k_KC0
                KC0r[k] = 0+c1
                KC0c[k] = 0+c1
                k += 1
                KC0r[k] = 0+c1
                KC0c[k] = 1+c1
                k += 1
                KC0r[k] = 0+c1
                KC0c[k] = 2+c1
                k += 1
                KC0r[k] = 0+c1
                KC0c[k] = 3+c1
                k += 1
                KC0r[k] = 0+c1
                KC0c[k] = 4+c1
                k += 1
                KC0r[k] = 0+c1
                KC0c[k] = 5+c1
                k += 1
                KC0r[k] = 0+c1
                KC0c[k] = 0+c2
                k += 1
                KC0r[k] = 0+c1
                KC0c[k] = 1+c2
                k += 1
                KC0r[k] = 0+c1
                KC0c[k] = 2+c2
                k += 1
                KC0r[k] = 0+c1
                KC0c[k] = 3+c2
                k += 1
                KC0r[k] = 0+c1
                KC0c[k] = 4+c2
                k += 1
                KC0r[k] = 0+c1
                KC0c[k] = 5+c2
                k += 1
                KC0r[k] = 0+c1
                KC0c[k] = 0+c3
                k += 1
                KC0r[k] = 0+c1
                KC0c[k] = 1+c3
                k += 1
                KC0r[k] = 0+c1
                KC0c[k] = 2+c3
                k += 1
                KC0r[k] = 0+c1
                KC0c[k] = 3+c3
                k += 1
                KC0r[k] = 0+c1
                KC0c[k] = 4+c3
                k += 1
                KC0r[k] = 0+c1
                KC0c[k] = 5+c3
                k += 1
                KC0r[k] = 0+c1
                KC0c[k] = 0+c4
                k += 1
                KC0r[k] = 0+c1
                KC0c[k] = 1+c4
                k += 1
                KC0r[k] = 0+c1
                KC0c[k] = 2+c4
                k += 1
                KC0r[k] = 0+c1
                KC0c[k] = 3+c4
                k += 1
                KC0r[k] = 0+c1
                KC0c[k] = 4+c4
                k += 1
                KC0r[k] = 0+c1
                KC0c[k] = 5+c4
                k += 1
                KC0r[k] = 1+c1
                KC0c[k] = 0+c1
                k += 1
                KC0r[k] = 1+c1
                KC0c[k] = 1+c1
                k += 1
                KC0r[k] = 1+c1
                KC0c[k] = 2+c1
                k += 1
                KC0r[k] = 1+c1
                KC0c[k] = 3+c1
                k += 1
                KC0r[k] = 1+c1
                KC0c[k] = 4+c1
                k += 1
                KC0r[k] = 1+c1
                KC0c[k] = 5+c1
                k += 1
                KC0r[k] = 1+c1
                KC0c[k] = 0+c2
                k += 1
                KC0r[k] = 1+c1
                KC0c[k] = 1+c2
                k += 1
                KC0r[k] = 1+c1
                KC0c[k] = 2+c2
                k += 1
                KC0r[k] = 1+c1
                KC0c[k] = 3+c2
                k += 1
                KC0r[k] = 1+c1
                KC0c[k] = 4+c2
                k += 1
                KC0r[k] = 1+c1
                KC0c[k] = 5+c2
                k += 1
                KC0r[k] = 1+c1
                KC0c[k] = 0+c3
                k += 1
                KC0r[k] = 1+c1
                KC0c[k] = 1+c3
                k += 1
                KC0r[k] = 1+c1
                KC0c[k] = 2+c3
                k += 1
                KC0r[k] = 1+c1
                KC0c[k] = 3+c3
                k += 1
                KC0r[k] = 1+c1
                KC0c[k] = 4+c3
                k += 1
                KC0r[k] = 1+c1
                KC0c[k] = 5+c3
                k += 1
                KC0r[k] = 1+c1
                KC0c[k] = 0+c4
                k += 1
                KC0r[k] = 1+c1
                KC0c[k] = 1+c4
                k += 1
                KC0r[k] = 1+c1
                KC0c[k] = 2+c4
                k += 1
                KC0r[k] = 1+c1
                KC0c[k] = 3+c4
                k += 1
                KC0r[k] = 1+c1
                KC0c[k] = 4+c4
                k += 1
                KC0r[k] = 1+c1
                KC0c[k] = 5+c4
                k += 1
                KC0r[k] = 2+c1
                KC0c[k] = 0+c1
                k += 1
                KC0r[k] = 2+c1
                KC0c[k] = 1+c1
                k += 1
                KC0r[k] = 2+c1
                KC0c[k] = 2+c1
                k += 1
                KC0r[k] = 2+c1
                KC0c[k] = 3+c1
                k += 1
                KC0r[k] = 2+c1
                KC0c[k] = 4+c1
                k += 1
                KC0r[k] = 2+c1
                KC0c[k] = 5+c1
                k += 1
                KC0r[k] = 2+c1
                KC0c[k] = 0+c2
                k += 1
                KC0r[k] = 2+c1
                KC0c[k] = 1+c2
                k += 1
                KC0r[k] = 2+c1
                KC0c[k] = 2+c2
                k += 1
                KC0r[k] = 2+c1
                KC0c[k] = 3+c2
                k += 1
                KC0r[k] = 2+c1
                KC0c[k] = 4+c2
                k += 1
                KC0r[k] = 2+c1
                KC0c[k] = 5+c2
                k += 1
                KC0r[k] = 2+c1
                KC0c[k] = 0+c3
                k += 1
                KC0r[k] = 2+c1
                KC0c[k] = 1+c3
                k += 1
                KC0r[k] = 2+c1
                KC0c[k] = 2+c3
                k += 1
                KC0r[k] = 2+c1
                KC0c[k] = 3+c3
                k += 1
                KC0r[k] = 2+c1
                KC0c[k] = 4+c3
                k += 1
                KC0r[k] = 2+c1
                KC0c[k] = 5+c3
                k += 1
                KC0r[k] = 2+c1
                KC0c[k] = 0+c4
                k += 1
                KC0r[k] = 2+c1
                KC0c[k] = 1+c4
                k += 1
                KC0r[k] = 2+c1
                KC0c[k] = 2+c4
                k += 1
                KC0r[k] = 2+c1
                KC0c[k] = 3+c4
                k += 1
                KC0r[k] = 2+c1
                KC0c[k] = 4+c4
                k += 1
                KC0r[k] = 2+c1
                KC0c[k] = 5+c4
                k += 1
                KC0r[k] = 3+c1
                KC0c[k] = 0+c1
                k += 1
                KC0r[k] = 3+c1
                KC0c[k] = 1+c1
                k += 1
                KC0r[k] = 3+c1
                KC0c[k] = 2+c1
                k += 1
                KC0r[k] = 3+c1
                KC0c[k] = 3+c1
                k += 1
                KC0r[k] = 3+c1
                KC0c[k] = 4+c1
                k += 1
                KC0r[k] = 3+c1
                KC0c[k] = 5+c1
                k += 1
                KC0r[k] = 3+c1
                KC0c[k] = 0+c2
                k += 1
                KC0r[k] = 3+c1
                KC0c[k] = 1+c2
                k += 1
                KC0r[k] = 3+c1
                KC0c[k] = 2+c2
                k += 1
                KC0r[k] = 3+c1
                KC0c[k] = 3+c2
                k += 1
                KC0r[k] = 3+c1
                KC0c[k] = 4+c2
                k += 1
                KC0r[k] = 3+c1
                KC0c[k] = 5+c2
                k += 1
                KC0r[k] = 3+c1
                KC0c[k] = 0+c3
                k += 1
                KC0r[k] = 3+c1
                KC0c[k] = 1+c3
                k += 1
                KC0r[k] = 3+c1
                KC0c[k] = 2+c3
                k += 1
                KC0r[k] = 3+c1
                KC0c[k] = 3+c3
                k += 1
                KC0r[k] = 3+c1
                KC0c[k] = 4+c3
                k += 1
                KC0r[k] = 3+c1
                KC0c[k] = 5+c3
                k += 1
                KC0r[k] = 3+c1
                KC0c[k] = 0+c4
                k += 1
                KC0r[k] = 3+c1
                KC0c[k] = 1+c4
                k += 1
                KC0r[k] = 3+c1
                KC0c[k] = 2+c4
                k += 1
                KC0r[k] = 3+c1
                KC0c[k] = 3+c4
                k += 1
                KC0r[k] = 3+c1
                KC0c[k] = 4+c4
                k += 1
                KC0r[k] = 3+c1
                KC0c[k] = 5+c4
                k += 1
                KC0r[k] = 4+c1
                KC0c[k] = 0+c1
                k += 1
                KC0r[k] = 4+c1
                KC0c[k] = 1+c1
                k += 1
                KC0r[k] = 4+c1
                KC0c[k] = 2+c1
                k += 1
                KC0r[k] = 4+c1
                KC0c[k] = 3+c1
                k += 1
                KC0r[k] = 4+c1
                KC0c[k] = 4+c1
                k += 1
                KC0r[k] = 4+c1
                KC0c[k] = 5+c1
                k += 1
                KC0r[k] = 4+c1
                KC0c[k] = 0+c2
                k += 1
                KC0r[k] = 4+c1
                KC0c[k] = 1+c2
                k += 1
                KC0r[k] = 4+c1
                KC0c[k] = 2+c2
                k += 1
                KC0r[k] = 4+c1
                KC0c[k] = 3+c2
                k += 1
                KC0r[k] = 4+c1
                KC0c[k] = 4+c2
                k += 1
                KC0r[k] = 4+c1
                KC0c[k] = 5+c2
                k += 1
                KC0r[k] = 4+c1
                KC0c[k] = 0+c3
                k += 1
                KC0r[k] = 4+c1
                KC0c[k] = 1+c3
                k += 1
                KC0r[k] = 4+c1
                KC0c[k] = 2+c3
                k += 1
                KC0r[k] = 4+c1
                KC0c[k] = 3+c3
                k += 1
                KC0r[k] = 4+c1
                KC0c[k] = 4+c3
                k += 1
                KC0r[k] = 4+c1
                KC0c[k] = 5+c3
                k += 1
                KC0r[k] = 4+c1
                KC0c[k] = 0+c4
                k += 1
                KC0r[k] = 4+c1
                KC0c[k] = 1+c4
                k += 1
                KC0r[k] = 4+c1
                KC0c[k] = 2+c4
                k += 1
                KC0r[k] = 4+c1
                KC0c[k] = 3+c4
                k += 1
                KC0r[k] = 4+c1
                KC0c[k] = 4+c4
                k += 1
                KC0r[k] = 4+c1
                KC0c[k] = 5+c4
                k += 1
                KC0r[k] = 5+c1
                KC0c[k] = 0+c1
                k += 1
                KC0r[k] = 5+c1
                KC0c[k] = 1+c1
                k += 1
                KC0r[k] = 5+c1
                KC0c[k] = 2+c1
                k += 1
                KC0r[k] = 5+c1
                KC0c[k] = 3+c1
                k += 1
                KC0r[k] = 5+c1
                KC0c[k] = 4+c1
                k += 1
                KC0r[k] = 5+c1
                KC0c[k] = 5+c1
                k += 1
                KC0r[k] = 5+c1
                KC0c[k] = 0+c2
                k += 1
                KC0r[k] = 5+c1
                KC0c[k] = 1+c2
                k += 1
                KC0r[k] = 5+c1
                KC0c[k] = 2+c2
                k += 1
                KC0r[k] = 5+c1
                KC0c[k] = 3+c2
                k += 1
                KC0r[k] = 5+c1
                KC0c[k] = 4+c2
                k += 1
                KC0r[k] = 5+c1
                KC0c[k] = 5+c2
                k += 1
                KC0r[k] = 5+c1
                KC0c[k] = 0+c3
                k += 1
                KC0r[k] = 5+c1
                KC0c[k] = 1+c3
                k += 1
                KC0r[k] = 5+c1
                KC0c[k] = 2+c3
                k += 1
                KC0r[k] = 5+c1
                KC0c[k] = 3+c3
                k += 1
                KC0r[k] = 5+c1
                KC0c[k] = 4+c3
                k += 1
                KC0r[k] = 5+c1
                KC0c[k] = 5+c3
                k += 1
                KC0r[k] = 5+c1
                KC0c[k] = 0+c4
                k += 1
                KC0r[k] = 5+c1
                KC0c[k] = 1+c4
                k += 1
                KC0r[k] = 5+c1
                KC0c[k] = 2+c4
                k += 1
                KC0r[k] = 5+c1
                KC0c[k] = 3+c4
                k += 1
                KC0r[k] = 5+c1
                KC0c[k] = 4+c4
                k += 1
                KC0r[k] = 5+c1
                KC0c[k] = 5+c4
                k += 1
                KC0r[k] = 0+c2
                KC0c[k] = 0+c1
                k += 1
                KC0r[k] = 0+c2
                KC0c[k] = 1+c1
                k += 1
                KC0r[k] = 0+c2
                KC0c[k] = 2+c1
                k += 1
                KC0r[k] = 0+c2
                KC0c[k] = 3+c1
                k += 1
                KC0r[k] = 0+c2
                KC0c[k] = 4+c1
                k += 1
                KC0r[k] = 0+c2
                KC0c[k] = 5+c1
                k += 1
                KC0r[k] = 0+c2
                KC0c[k] = 0+c2
                k += 1
                KC0r[k] = 0+c2
                KC0c[k] = 1+c2
                k += 1
                KC0r[k] = 0+c2
                KC0c[k] = 2+c2
                k += 1
                KC0r[k] = 0+c2
                KC0c[k] = 3+c2
                k += 1
                KC0r[k] = 0+c2
                KC0c[k] = 4+c2
                k += 1
                KC0r[k] = 0+c2
                KC0c[k] = 5+c2
                k += 1
                KC0r[k] = 0+c2
                KC0c[k] = 0+c3
                k += 1
                KC0r[k] = 0+c2
                KC0c[k] = 1+c3
                k += 1
                KC0r[k] = 0+c2
                KC0c[k] = 2+c3
                k += 1
                KC0r[k] = 0+c2
                KC0c[k] = 3+c3
                k += 1
                KC0r[k] = 0+c2
                KC0c[k] = 4+c3
                k += 1
                KC0r[k] = 0+c2
                KC0c[k] = 5+c3
                k += 1
                KC0r[k] = 0+c2
                KC0c[k] = 0+c4
                k += 1
                KC0r[k] = 0+c2
                KC0c[k] = 1+c4
                k += 1
                KC0r[k] = 0+c2
                KC0c[k] = 2+c4
                k += 1
                KC0r[k] = 0+c2
                KC0c[k] = 3+c4
                k += 1
                KC0r[k] = 0+c2
                KC0c[k] = 4+c4
                k += 1
                KC0r[k] = 0+c2
                KC0c[k] = 5+c4
                k += 1
                KC0r[k] = 1+c2
                KC0c[k] = 0+c1
                k += 1
                KC0r[k] = 1+c2
                KC0c[k] = 1+c1
                k += 1
                KC0r[k] = 1+c2
                KC0c[k] = 2+c1
                k += 1
                KC0r[k] = 1+c2
                KC0c[k] = 3+c1
                k += 1
                KC0r[k] = 1+c2
                KC0c[k] = 4+c1
                k += 1
                KC0r[k] = 1+c2
                KC0c[k] = 5+c1
                k += 1
                KC0r[k] = 1+c2
                KC0c[k] = 0+c2
                k += 1
                KC0r[k] = 1+c2
                KC0c[k] = 1+c2
                k += 1
                KC0r[k] = 1+c2
                KC0c[k] = 2+c2
                k += 1
                KC0r[k] = 1+c2
                KC0c[k] = 3+c2
                k += 1
                KC0r[k] = 1+c2
                KC0c[k] = 4+c2
                k += 1
                KC0r[k] = 1+c2
                KC0c[k] = 5+c2
                k += 1
                KC0r[k] = 1+c2
                KC0c[k] = 0+c3
                k += 1
                KC0r[k] = 1+c2
                KC0c[k] = 1+c3
                k += 1
                KC0r[k] = 1+c2
                KC0c[k] = 2+c3
                k += 1
                KC0r[k] = 1+c2
                KC0c[k] = 3+c3
                k += 1
                KC0r[k] = 1+c2
                KC0c[k] = 4+c3
                k += 1
                KC0r[k] = 1+c2
                KC0c[k] = 5+c3
                k += 1
                KC0r[k] = 1+c2
                KC0c[k] = 0+c4
                k += 1
                KC0r[k] = 1+c2
                KC0c[k] = 1+c4
                k += 1
                KC0r[k] = 1+c2
                KC0c[k] = 2+c4
                k += 1
                KC0r[k] = 1+c2
                KC0c[k] = 3+c4
                k += 1
                KC0r[k] = 1+c2
                KC0c[k] = 4+c4
                k += 1
                KC0r[k] = 1+c2
                KC0c[k] = 5+c4
                k += 1
                KC0r[k] = 2+c2
                KC0c[k] = 0+c1
                k += 1
                KC0r[k] = 2+c2
                KC0c[k] = 1+c1
                k += 1
                KC0r[k] = 2+c2
                KC0c[k] = 2+c1
                k += 1
                KC0r[k] = 2+c2
                KC0c[k] = 3+c1
                k += 1
                KC0r[k] = 2+c2
                KC0c[k] = 4+c1
                k += 1
                KC0r[k] = 2+c2
                KC0c[k] = 5+c1
                k += 1
                KC0r[k] = 2+c2
                KC0c[k] = 0+c2
                k += 1
                KC0r[k] = 2+c2
                KC0c[k] = 1+c2
                k += 1
                KC0r[k] = 2+c2
                KC0c[k] = 2+c2
                k += 1
                KC0r[k] = 2+c2
                KC0c[k] = 3+c2
                k += 1
                KC0r[k] = 2+c2
                KC0c[k] = 4+c2
                k += 1
                KC0r[k] = 2+c2
                KC0c[k] = 5+c2
                k += 1
                KC0r[k] = 2+c2
                KC0c[k] = 0+c3
                k += 1
                KC0r[k] = 2+c2
                KC0c[k] = 1+c3
                k += 1
                KC0r[k] = 2+c2
                KC0c[k] = 2+c3
                k += 1
                KC0r[k] = 2+c2
                KC0c[k] = 3+c3
                k += 1
                KC0r[k] = 2+c2
                KC0c[k] = 4+c3
                k += 1
                KC0r[k] = 2+c2
                KC0c[k] = 5+c3
                k += 1
                KC0r[k] = 2+c2
                KC0c[k] = 0+c4
                k += 1
                KC0r[k] = 2+c2
                KC0c[k] = 1+c4
                k += 1
                KC0r[k] = 2+c2
                KC0c[k] = 2+c4
                k += 1
                KC0r[k] = 2+c2
                KC0c[k] = 3+c4
                k += 1
                KC0r[k] = 2+c2
                KC0c[k] = 4+c4
                k += 1
                KC0r[k] = 2+c2
                KC0c[k] = 5+c4
                k += 1
                KC0r[k] = 3+c2
                KC0c[k] = 0+c1
                k += 1
                KC0r[k] = 3+c2
                KC0c[k] = 1+c1
                k += 1
                KC0r[k] = 3+c2
                KC0c[k] = 2+c1
                k += 1
                KC0r[k] = 3+c2
                KC0c[k] = 3+c1
                k += 1
                KC0r[k] = 3+c2
                KC0c[k] = 4+c1
                k += 1
                KC0r[k] = 3+c2
                KC0c[k] = 5+c1
                k += 1
                KC0r[k] = 3+c2
                KC0c[k] = 0+c2
                k += 1
                KC0r[k] = 3+c2
                KC0c[k] = 1+c2
                k += 1
                KC0r[k] = 3+c2
                KC0c[k] = 2+c2
                k += 1
                KC0r[k] = 3+c2
                KC0c[k] = 3+c2
                k += 1
                KC0r[k] = 3+c2
                KC0c[k] = 4+c2
                k += 1
                KC0r[k] = 3+c2
                KC0c[k] = 5+c2
                k += 1
                KC0r[k] = 3+c2
                KC0c[k] = 0+c3
                k += 1
                KC0r[k] = 3+c2
                KC0c[k] = 1+c3
                k += 1
                KC0r[k] = 3+c2
                KC0c[k] = 2+c3
                k += 1
                KC0r[k] = 3+c2
                KC0c[k] = 3+c3
                k += 1
                KC0r[k] = 3+c2
                KC0c[k] = 4+c3
                k += 1
                KC0r[k] = 3+c2
                KC0c[k] = 5+c3
                k += 1
                KC0r[k] = 3+c2
                KC0c[k] = 0+c4
                k += 1
                KC0r[k] = 3+c2
                KC0c[k] = 1+c4
                k += 1
                KC0r[k] = 3+c2
                KC0c[k] = 2+c4
                k += 1
                KC0r[k] = 3+c2
                KC0c[k] = 3+c4
                k += 1
                KC0r[k] = 3+c2
                KC0c[k] = 4+c4
                k += 1
                KC0r[k] = 3+c2
                KC0c[k] = 5+c4
                k += 1
                KC0r[k] = 4+c2
                KC0c[k] = 0+c1
                k += 1
                KC0r[k] = 4+c2
                KC0c[k] = 1+c1
                k += 1
                KC0r[k] = 4+c2
                KC0c[k] = 2+c1
                k += 1
                KC0r[k] = 4+c2
                KC0c[k] = 3+c1
                k += 1
                KC0r[k] = 4+c2
                KC0c[k] = 4+c1
                k += 1
                KC0r[k] = 4+c2
                KC0c[k] = 5+c1
                k += 1
                KC0r[k] = 4+c2
                KC0c[k] = 0+c2
                k += 1
                KC0r[k] = 4+c2
                KC0c[k] = 1+c2
                k += 1
                KC0r[k] = 4+c2
                KC0c[k] = 2+c2
                k += 1
                KC0r[k] = 4+c2
                KC0c[k] = 3+c2
                k += 1
                KC0r[k] = 4+c2
                KC0c[k] = 4+c2
                k += 1
                KC0r[k] = 4+c2
                KC0c[k] = 5+c2
                k += 1
                KC0r[k] = 4+c2
                KC0c[k] = 0+c3
                k += 1
                KC0r[k] = 4+c2
                KC0c[k] = 1+c3
                k += 1
                KC0r[k] = 4+c2
                KC0c[k] = 2+c3
                k += 1
                KC0r[k] = 4+c2
                KC0c[k] = 3+c3
                k += 1
                KC0r[k] = 4+c2
                KC0c[k] = 4+c3
                k += 1
                KC0r[k] = 4+c2
                KC0c[k] = 5+c3
                k += 1
                KC0r[k] = 4+c2
                KC0c[k] = 0+c4
                k += 1
                KC0r[k] = 4+c2
                KC0c[k] = 1+c4
                k += 1
                KC0r[k] = 4+c2
                KC0c[k] = 2+c4
                k += 1
                KC0r[k] = 4+c2
                KC0c[k] = 3+c4
                k += 1
                KC0r[k] = 4+c2
                KC0c[k] = 4+c4
                k += 1
                KC0r[k] = 4+c2
                KC0c[k] = 5+c4
                k += 1
                KC0r[k] = 5+c2
                KC0c[k] = 0+c1
                k += 1
                KC0r[k] = 5+c2
                KC0c[k] = 1+c1
                k += 1
                KC0r[k] = 5+c2
                KC0c[k] = 2+c1
                k += 1
                KC0r[k] = 5+c2
                KC0c[k] = 3+c1
                k += 1
                KC0r[k] = 5+c2
                KC0c[k] = 4+c1
                k += 1
                KC0r[k] = 5+c2
                KC0c[k] = 5+c1
                k += 1
                KC0r[k] = 5+c2
                KC0c[k] = 0+c2
                k += 1
                KC0r[k] = 5+c2
                KC0c[k] = 1+c2
                k += 1
                KC0r[k] = 5+c2
                KC0c[k] = 2+c2
                k += 1
                KC0r[k] = 5+c2
                KC0c[k] = 3+c2
                k += 1
                KC0r[k] = 5+c2
                KC0c[k] = 4+c2
                k += 1
                KC0r[k] = 5+c2
                KC0c[k] = 5+c2
                k += 1
                KC0r[k] = 5+c2
                KC0c[k] = 0+c3
                k += 1
                KC0r[k] = 5+c2
                KC0c[k] = 1+c3
                k += 1
                KC0r[k] = 5+c2
                KC0c[k] = 2+c3
                k += 1
                KC0r[k] = 5+c2
                KC0c[k] = 3+c3
                k += 1
                KC0r[k] = 5+c2
                KC0c[k] = 4+c3
                k += 1
                KC0r[k] = 5+c2
                KC0c[k] = 5+c3
                k += 1
                KC0r[k] = 5+c2
                KC0c[k] = 0+c4
                k += 1
                KC0r[k] = 5+c2
                KC0c[k] = 1+c4
                k += 1
                KC0r[k] = 5+c2
                KC0c[k] = 2+c4
                k += 1
                KC0r[k] = 5+c2
                KC0c[k] = 3+c4
                k += 1
                KC0r[k] = 5+c2
                KC0c[k] = 4+c4
                k += 1
                KC0r[k] = 5+c2
                KC0c[k] = 5+c4
                k += 1
                KC0r[k] = 0+c3
                KC0c[k] = 0+c1
                k += 1
                KC0r[k] = 0+c3
                KC0c[k] = 1+c1
                k += 1
                KC0r[k] = 0+c3
                KC0c[k] = 2+c1
                k += 1
                KC0r[k] = 0+c3
                KC0c[k] = 3+c1
                k += 1
                KC0r[k] = 0+c3
                KC0c[k] = 4+c1
                k += 1
                KC0r[k] = 0+c3
                KC0c[k] = 5+c1
                k += 1
                KC0r[k] = 0+c3
                KC0c[k] = 0+c2
                k += 1
                KC0r[k] = 0+c3
                KC0c[k] = 1+c2
                k += 1
                KC0r[k] = 0+c3
                KC0c[k] = 2+c2
                k += 1
                KC0r[k] = 0+c3
                KC0c[k] = 3+c2
                k += 1
                KC0r[k] = 0+c3
                KC0c[k] = 4+c2
                k += 1
                KC0r[k] = 0+c3
                KC0c[k] = 5+c2
                k += 1
                KC0r[k] = 0+c3
                KC0c[k] = 0+c3
                k += 1
                KC0r[k] = 0+c3
                KC0c[k] = 1+c3
                k += 1
                KC0r[k] = 0+c3
                KC0c[k] = 2+c3
                k += 1
                KC0r[k] = 0+c3
                KC0c[k] = 3+c3
                k += 1
                KC0r[k] = 0+c3
                KC0c[k] = 4+c3
                k += 1
                KC0r[k] = 0+c3
                KC0c[k] = 5+c3
                k += 1
                KC0r[k] = 0+c3
                KC0c[k] = 0+c4
                k += 1
                KC0r[k] = 0+c3
                KC0c[k] = 1+c4
                k += 1
                KC0r[k] = 0+c3
                KC0c[k] = 2+c4
                k += 1
                KC0r[k] = 0+c3
                KC0c[k] = 3+c4
                k += 1
                KC0r[k] = 0+c3
                KC0c[k] = 4+c4
                k += 1
                KC0r[k] = 0+c3
                KC0c[k] = 5+c4
                k += 1
                KC0r[k] = 1+c3
                KC0c[k] = 0+c1
                k += 1
                KC0r[k] = 1+c3
                KC0c[k] = 1+c1
                k += 1
                KC0r[k] = 1+c3
                KC0c[k] = 2+c1
                k += 1
                KC0r[k] = 1+c3
                KC0c[k] = 3+c1
                k += 1
                KC0r[k] = 1+c3
                KC0c[k] = 4+c1
                k += 1
                KC0r[k] = 1+c3
                KC0c[k] = 5+c1
                k += 1
                KC0r[k] = 1+c3
                KC0c[k] = 0+c2
                k += 1
                KC0r[k] = 1+c3
                KC0c[k] = 1+c2
                k += 1
                KC0r[k] = 1+c3
                KC0c[k] = 2+c2
                k += 1
                KC0r[k] = 1+c3
                KC0c[k] = 3+c2
                k += 1
                KC0r[k] = 1+c3
                KC0c[k] = 4+c2
                k += 1
                KC0r[k] = 1+c3
                KC0c[k] = 5+c2
                k += 1
                KC0r[k] = 1+c3
                KC0c[k] = 0+c3
                k += 1
                KC0r[k] = 1+c3
                KC0c[k] = 1+c3
                k += 1
                KC0r[k] = 1+c3
                KC0c[k] = 2+c3
                k += 1
                KC0r[k] = 1+c3
                KC0c[k] = 3+c3
                k += 1
                KC0r[k] = 1+c3
                KC0c[k] = 4+c3
                k += 1
                KC0r[k] = 1+c3
                KC0c[k] = 5+c3
                k += 1
                KC0r[k] = 1+c3
                KC0c[k] = 0+c4
                k += 1
                KC0r[k] = 1+c3
                KC0c[k] = 1+c4
                k += 1
                KC0r[k] = 1+c3
                KC0c[k] = 2+c4
                k += 1
                KC0r[k] = 1+c3
                KC0c[k] = 3+c4
                k += 1
                KC0r[k] = 1+c3
                KC0c[k] = 4+c4
                k += 1
                KC0r[k] = 1+c3
                KC0c[k] = 5+c4
                k += 1
                KC0r[k] = 2+c3
                KC0c[k] = 0+c1
                k += 1
                KC0r[k] = 2+c3
                KC0c[k] = 1+c1
                k += 1
                KC0r[k] = 2+c3
                KC0c[k] = 2+c1
                k += 1
                KC0r[k] = 2+c3
                KC0c[k] = 3+c1
                k += 1
                KC0r[k] = 2+c3
                KC0c[k] = 4+c1
                k += 1
                KC0r[k] = 2+c3
                KC0c[k] = 5+c1
                k += 1
                KC0r[k] = 2+c3
                KC0c[k] = 0+c2
                k += 1
                KC0r[k] = 2+c3
                KC0c[k] = 1+c2
                k += 1
                KC0r[k] = 2+c3
                KC0c[k] = 2+c2
                k += 1
                KC0r[k] = 2+c3
                KC0c[k] = 3+c2
                k += 1
                KC0r[k] = 2+c3
                KC0c[k] = 4+c2
                k += 1
                KC0r[k] = 2+c3
                KC0c[k] = 5+c2
                k += 1
                KC0r[k] = 2+c3
                KC0c[k] = 0+c3
                k += 1
                KC0r[k] = 2+c3
                KC0c[k] = 1+c3
                k += 1
                KC0r[k] = 2+c3
                KC0c[k] = 2+c3
                k += 1
                KC0r[k] = 2+c3
                KC0c[k] = 3+c3
                k += 1
                KC0r[k] = 2+c3
                KC0c[k] = 4+c3
                k += 1
                KC0r[k] = 2+c3
                KC0c[k] = 5+c3
                k += 1
                KC0r[k] = 2+c3
                KC0c[k] = 0+c4
                k += 1
                KC0r[k] = 2+c3
                KC0c[k] = 1+c4
                k += 1
                KC0r[k] = 2+c3
                KC0c[k] = 2+c4
                k += 1
                KC0r[k] = 2+c3
                KC0c[k] = 3+c4
                k += 1
                KC0r[k] = 2+c3
                KC0c[k] = 4+c4
                k += 1
                KC0r[k] = 2+c3
                KC0c[k] = 5+c4
                k += 1
                KC0r[k] = 3+c3
                KC0c[k] = 0+c1
                k += 1
                KC0r[k] = 3+c3
                KC0c[k] = 1+c1
                k += 1
                KC0r[k] = 3+c3
                KC0c[k] = 2+c1
                k += 1
                KC0r[k] = 3+c3
                KC0c[k] = 3+c1
                k += 1
                KC0r[k] = 3+c3
                KC0c[k] = 4+c1
                k += 1
                KC0r[k] = 3+c3
                KC0c[k] = 5+c1
                k += 1
                KC0r[k] = 3+c3
                KC0c[k] = 0+c2
                k += 1
                KC0r[k] = 3+c3
                KC0c[k] = 1+c2
                k += 1
                KC0r[k] = 3+c3
                KC0c[k] = 2+c2
                k += 1
                KC0r[k] = 3+c3
                KC0c[k] = 3+c2
                k += 1
                KC0r[k] = 3+c3
                KC0c[k] = 4+c2
                k += 1
                KC0r[k] = 3+c3
                KC0c[k] = 5+c2
                k += 1
                KC0r[k] = 3+c3
                KC0c[k] = 0+c3
                k += 1
                KC0r[k] = 3+c3
                KC0c[k] = 1+c3
                k += 1
                KC0r[k] = 3+c3
                KC0c[k] = 2+c3
                k += 1
                KC0r[k] = 3+c3
                KC0c[k] = 3+c3
                k += 1
                KC0r[k] = 3+c3
                KC0c[k] = 4+c3
                k += 1
                KC0r[k] = 3+c3
                KC0c[k] = 5+c3
                k += 1
                KC0r[k] = 3+c3
                KC0c[k] = 0+c4
                k += 1
                KC0r[k] = 3+c3
                KC0c[k] = 1+c4
                k += 1
                KC0r[k] = 3+c3
                KC0c[k] = 2+c4
                k += 1
                KC0r[k] = 3+c3
                KC0c[k] = 3+c4
                k += 1
                KC0r[k] = 3+c3
                KC0c[k] = 4+c4
                k += 1
                KC0r[k] = 3+c3
                KC0c[k] = 5+c4
                k += 1
                KC0r[k] = 4+c3
                KC0c[k] = 0+c1
                k += 1
                KC0r[k] = 4+c3
                KC0c[k] = 1+c1
                k += 1
                KC0r[k] = 4+c3
                KC0c[k] = 2+c1
                k += 1
                KC0r[k] = 4+c3
                KC0c[k] = 3+c1
                k += 1
                KC0r[k] = 4+c3
                KC0c[k] = 4+c1
                k += 1
                KC0r[k] = 4+c3
                KC0c[k] = 5+c1
                k += 1
                KC0r[k] = 4+c3
                KC0c[k] = 0+c2
                k += 1
                KC0r[k] = 4+c3
                KC0c[k] = 1+c2
                k += 1
                KC0r[k] = 4+c3
                KC0c[k] = 2+c2
                k += 1
                KC0r[k] = 4+c3
                KC0c[k] = 3+c2
                k += 1
                KC0r[k] = 4+c3
                KC0c[k] = 4+c2
                k += 1
                KC0r[k] = 4+c3
                KC0c[k] = 5+c2
                k += 1
                KC0r[k] = 4+c3
                KC0c[k] = 0+c3
                k += 1
                KC0r[k] = 4+c3
                KC0c[k] = 1+c3
                k += 1
                KC0r[k] = 4+c3
                KC0c[k] = 2+c3
                k += 1
                KC0r[k] = 4+c3
                KC0c[k] = 3+c3
                k += 1
                KC0r[k] = 4+c3
                KC0c[k] = 4+c3
                k += 1
                KC0r[k] = 4+c3
                KC0c[k] = 5+c3
                k += 1
                KC0r[k] = 4+c3
                KC0c[k] = 0+c4
                k += 1
                KC0r[k] = 4+c3
                KC0c[k] = 1+c4
                k += 1
                KC0r[k] = 4+c3
                KC0c[k] = 2+c4
                k += 1
                KC0r[k] = 4+c3
                KC0c[k] = 3+c4
                k += 1
                KC0r[k] = 4+c3
                KC0c[k] = 4+c4
                k += 1
                KC0r[k] = 4+c3
                KC0c[k] = 5+c4
                k += 1
                KC0r[k] = 5+c3
                KC0c[k] = 0+c1
                k += 1
                KC0r[k] = 5+c3
                KC0c[k] = 1+c1
                k += 1
                KC0r[k] = 5+c3
                KC0c[k] = 2+c1
                k += 1
                KC0r[k] = 5+c3
                KC0c[k] = 3+c1
                k += 1
                KC0r[k] = 5+c3
                KC0c[k] = 4+c1
                k += 1
                KC0r[k] = 5+c3
                KC0c[k] = 5+c1
                k += 1
                KC0r[k] = 5+c3
                KC0c[k] = 0+c2
                k += 1
                KC0r[k] = 5+c3
                KC0c[k] = 1+c2
                k += 1
                KC0r[k] = 5+c3
                KC0c[k] = 2+c2
                k += 1
                KC0r[k] = 5+c3
                KC0c[k] = 3+c2
                k += 1
                KC0r[k] = 5+c3
                KC0c[k] = 4+c2
                k += 1
                KC0r[k] = 5+c3
                KC0c[k] = 5+c2
                k += 1
                KC0r[k] = 5+c3
                KC0c[k] = 0+c3
                k += 1
                KC0r[k] = 5+c3
                KC0c[k] = 1+c3
                k += 1
                KC0r[k] = 5+c3
                KC0c[k] = 2+c3
                k += 1
                KC0r[k] = 5+c3
                KC0c[k] = 3+c3
                k += 1
                KC0r[k] = 5+c3
                KC0c[k] = 4+c3
                k += 1
                KC0r[k] = 5+c3
                KC0c[k] = 5+c3
                k += 1
                KC0r[k] = 5+c3
                KC0c[k] = 0+c4
                k += 1
                KC0r[k] = 5+c3
                KC0c[k] = 1+c4
                k += 1
                KC0r[k] = 5+c3
                KC0c[k] = 2+c4
                k += 1
                KC0r[k] = 5+c3
                KC0c[k] = 3+c4
                k += 1
                KC0r[k] = 5+c3
                KC0c[k] = 4+c4
                k += 1
                KC0r[k] = 5+c3
                KC0c[k] = 5+c4
                k += 1
                KC0r[k] = 0+c4
                KC0c[k] = 0+c1
                k += 1
                KC0r[k] = 0+c4
                KC0c[k] = 1+c1
                k += 1
                KC0r[k] = 0+c4
                KC0c[k] = 2+c1
                k += 1
                KC0r[k] = 0+c4
                KC0c[k] = 3+c1
                k += 1
                KC0r[k] = 0+c4
                KC0c[k] = 4+c1
                k += 1
                KC0r[k] = 0+c4
                KC0c[k] = 5+c1
                k += 1
                KC0r[k] = 0+c4
                KC0c[k] = 0+c2
                k += 1
                KC0r[k] = 0+c4
                KC0c[k] = 1+c2
                k += 1
                KC0r[k] = 0+c4
                KC0c[k] = 2+c2
                k += 1
                KC0r[k] = 0+c4
                KC0c[k] = 3+c2
                k += 1
                KC0r[k] = 0+c4
                KC0c[k] = 4+c2
                k += 1
                KC0r[k] = 0+c4
                KC0c[k] = 5+c2
                k += 1
                KC0r[k] = 0+c4
                KC0c[k] = 0+c3
                k += 1
                KC0r[k] = 0+c4
                KC0c[k] = 1+c3
                k += 1
                KC0r[k] = 0+c4
                KC0c[k] = 2+c3
                k += 1
                KC0r[k] = 0+c4
                KC0c[k] = 3+c3
                k += 1
                KC0r[k] = 0+c4
                KC0c[k] = 4+c3
                k += 1
                KC0r[k] = 0+c4
                KC0c[k] = 5+c3
                k += 1
                KC0r[k] = 0+c4
                KC0c[k] = 0+c4
                k += 1
                KC0r[k] = 0+c4
                KC0c[k] = 1+c4
                k += 1
                KC0r[k] = 0+c4
                KC0c[k] = 2+c4
                k += 1
                KC0r[k] = 0+c4
                KC0c[k] = 3+c4
                k += 1
                KC0r[k] = 0+c4
                KC0c[k] = 4+c4
                k += 1
                KC0r[k] = 0+c4
                KC0c[k] = 5+c4
                k += 1
                KC0r[k] = 1+c4
                KC0c[k] = 0+c1
                k += 1
                KC0r[k] = 1+c4
                KC0c[k] = 1+c1
                k += 1
                KC0r[k] = 1+c4
                KC0c[k] = 2+c1
                k += 1
                KC0r[k] = 1+c4
                KC0c[k] = 3+c1
                k += 1
                KC0r[k] = 1+c4
                KC0c[k] = 4+c1
                k += 1
                KC0r[k] = 1+c4
                KC0c[k] = 5+c1
                k += 1
                KC0r[k] = 1+c4
                KC0c[k] = 0+c2
                k += 1
                KC0r[k] = 1+c4
                KC0c[k] = 1+c2
                k += 1
                KC0r[k] = 1+c4
                KC0c[k] = 2+c2
                k += 1
                KC0r[k] = 1+c4
                KC0c[k] = 3+c2
                k += 1
                KC0r[k] = 1+c4
                KC0c[k] = 4+c2
                k += 1
                KC0r[k] = 1+c4
                KC0c[k] = 5+c2
                k += 1
                KC0r[k] = 1+c4
                KC0c[k] = 0+c3
                k += 1
                KC0r[k] = 1+c4
                KC0c[k] = 1+c3
                k += 1
                KC0r[k] = 1+c4
                KC0c[k] = 2+c3
                k += 1
                KC0r[k] = 1+c4
                KC0c[k] = 3+c3
                k += 1
                KC0r[k] = 1+c4
                KC0c[k] = 4+c3
                k += 1
                KC0r[k] = 1+c4
                KC0c[k] = 5+c3
                k += 1
                KC0r[k] = 1+c4
                KC0c[k] = 0+c4
                k += 1
                KC0r[k] = 1+c4
                KC0c[k] = 1+c4
                k += 1
                KC0r[k] = 1+c4
                KC0c[k] = 2+c4
                k += 1
                KC0r[k] = 1+c4
                KC0c[k] = 3+c4
                k += 1
                KC0r[k] = 1+c4
                KC0c[k] = 4+c4
                k += 1
                KC0r[k] = 1+c4
                KC0c[k] = 5+c4
                k += 1
                KC0r[k] = 2+c4
                KC0c[k] = 0+c1
                k += 1
                KC0r[k] = 2+c4
                KC0c[k] = 1+c1
                k += 1
                KC0r[k] = 2+c4
                KC0c[k] = 2+c1
                k += 1
                KC0r[k] = 2+c4
                KC0c[k] = 3+c1
                k += 1
                KC0r[k] = 2+c4
                KC0c[k] = 4+c1
                k += 1
                KC0r[k] = 2+c4
                KC0c[k] = 5+c1
                k += 1
                KC0r[k] = 2+c4
                KC0c[k] = 0+c2
                k += 1
                KC0r[k] = 2+c4
                KC0c[k] = 1+c2
                k += 1
                KC0r[k] = 2+c4
                KC0c[k] = 2+c2
                k += 1
                KC0r[k] = 2+c4
                KC0c[k] = 3+c2
                k += 1
                KC0r[k] = 2+c4
                KC0c[k] = 4+c2
                k += 1
                KC0r[k] = 2+c4
                KC0c[k] = 5+c2
                k += 1
                KC0r[k] = 2+c4
                KC0c[k] = 0+c3
                k += 1
                KC0r[k] = 2+c4
                KC0c[k] = 1+c3
                k += 1
                KC0r[k] = 2+c4
                KC0c[k] = 2+c3
                k += 1
                KC0r[k] = 2+c4
                KC0c[k] = 3+c3
                k += 1
                KC0r[k] = 2+c4
                KC0c[k] = 4+c3
                k += 1
                KC0r[k] = 2+c4
                KC0c[k] = 5+c3
                k += 1
                KC0r[k] = 2+c4
                KC0c[k] = 0+c4
                k += 1
                KC0r[k] = 2+c4
                KC0c[k] = 1+c4
                k += 1
                KC0r[k] = 2+c4
                KC0c[k] = 2+c4
                k += 1
                KC0r[k] = 2+c4
                KC0c[k] = 3+c4
                k += 1
                KC0r[k] = 2+c4
                KC0c[k] = 4+c4
                k += 1
                KC0r[k] = 2+c4
                KC0c[k] = 5+c4
                k += 1
                KC0r[k] = 3+c4
                KC0c[k] = 0+c1
                k += 1
                KC0r[k] = 3+c4
                KC0c[k] = 1+c1
                k += 1
                KC0r[k] = 3+c4
                KC0c[k] = 2+c1
                k += 1
                KC0r[k] = 3+c4
                KC0c[k] = 3+c1
                k += 1
                KC0r[k] = 3+c4
                KC0c[k] = 4+c1
                k += 1
                KC0r[k] = 3+c4
                KC0c[k] = 5+c1
                k += 1
                KC0r[k] = 3+c4
                KC0c[k] = 0+c2
                k += 1
                KC0r[k] = 3+c4
                KC0c[k] = 1+c2
                k += 1
                KC0r[k] = 3+c4
                KC0c[k] = 2+c2
                k += 1
                KC0r[k] = 3+c4
                KC0c[k] = 3+c2
                k += 1
                KC0r[k] = 3+c4
                KC0c[k] = 4+c2
                k += 1
                KC0r[k] = 3+c4
                KC0c[k] = 5+c2
                k += 1
                KC0r[k] = 3+c4
                KC0c[k] = 0+c3
                k += 1
                KC0r[k] = 3+c4
                KC0c[k] = 1+c3
                k += 1
                KC0r[k] = 3+c4
                KC0c[k] = 2+c3
                k += 1
                KC0r[k] = 3+c4
                KC0c[k] = 3+c3
                k += 1
                KC0r[k] = 3+c4
                KC0c[k] = 4+c3
                k += 1
                KC0r[k] = 3+c4
                KC0c[k] = 5+c3
                k += 1
                KC0r[k] = 3+c4
                KC0c[k] = 0+c4
                k += 1
                KC0r[k] = 3+c4
                KC0c[k] = 1+c4
                k += 1
                KC0r[k] = 3+c4
                KC0c[k] = 2+c4
                k += 1
                KC0r[k] = 3+c4
                KC0c[k] = 3+c4
                k += 1
                KC0r[k] = 3+c4
                KC0c[k] = 4+c4
                k += 1
                KC0r[k] = 3+c4
                KC0c[k] = 5+c4
                k += 1
                KC0r[k] = 4+c4
                KC0c[k] = 0+c1
                k += 1
                KC0r[k] = 4+c4
                KC0c[k] = 1+c1
                k += 1
                KC0r[k] = 4+c4
                KC0c[k] = 2+c1
                k += 1
                KC0r[k] = 4+c4
                KC0c[k] = 3+c1
                k += 1
                KC0r[k] = 4+c4
                KC0c[k] = 4+c1
                k += 1
                KC0r[k] = 4+c4
                KC0c[k] = 5+c1
                k += 1
                KC0r[k] = 4+c4
                KC0c[k] = 0+c2
                k += 1
                KC0r[k] = 4+c4
                KC0c[k] = 1+c2
                k += 1
                KC0r[k] = 4+c4
                KC0c[k] = 2+c2
                k += 1
                KC0r[k] = 4+c4
                KC0c[k] = 3+c2
                k += 1
                KC0r[k] = 4+c4
                KC0c[k] = 4+c2
                k += 1
                KC0r[k] = 4+c4
                KC0c[k] = 5+c2
                k += 1
                KC0r[k] = 4+c4
                KC0c[k] = 0+c3
                k += 1
                KC0r[k] = 4+c4
                KC0c[k] = 1+c3
                k += 1
                KC0r[k] = 4+c4
                KC0c[k] = 2+c3
                k += 1
                KC0r[k] = 4+c4
                KC0c[k] = 3+c3
                k += 1
                KC0r[k] = 4+c4
                KC0c[k] = 4+c3
                k += 1
                KC0r[k] = 4+c4
                KC0c[k] = 5+c3
                k += 1
                KC0r[k] = 4+c4
                KC0c[k] = 0+c4
                k += 1
                KC0r[k] = 4+c4
                KC0c[k] = 1+c4
                k += 1
                KC0r[k] = 4+c4
                KC0c[k] = 2+c4
                k += 1
                KC0r[k] = 4+c4
                KC0c[k] = 3+c4
                k += 1
                KC0r[k] = 4+c4
                KC0c[k] = 4+c4
                k += 1
                KC0r[k] = 4+c4
                KC0c[k] = 5+c4
                k += 1
                KC0r[k] = 5+c4
                KC0c[k] = 0+c1
                k += 1
                KC0r[k] = 5+c4
                KC0c[k] = 1+c1
                k += 1
                KC0r[k] = 5+c4
                KC0c[k] = 2+c1
                k += 1
                KC0r[k] = 5+c4
                KC0c[k] = 3+c1
                k += 1
                KC0r[k] = 5+c4
                KC0c[k] = 4+c1
                k += 1
                KC0r[k] = 5+c4
                KC0c[k] = 5+c1
                k += 1
                KC0r[k] = 5+c4
                KC0c[k] = 0+c2
                k += 1
                KC0r[k] = 5+c4
                KC0c[k] = 1+c2
                k += 1
                KC0r[k] = 5+c4
                KC0c[k] = 2+c2
                k += 1
                KC0r[k] = 5+c4
                KC0c[k] = 3+c2
                k += 1
                KC0r[k] = 5+c4
                KC0c[k] = 4+c2
                k += 1
                KC0r[k] = 5+c4
                KC0c[k] = 5+c2
                k += 1
                KC0r[k] = 5+c4
                KC0c[k] = 0+c3
                k += 1
                KC0r[k] = 5+c4
                KC0c[k] = 1+c3
                k += 1
                KC0r[k] = 5+c4
                KC0c[k] = 2+c3
                k += 1
                KC0r[k] = 5+c4
                KC0c[k] = 3+c3
                k += 1
                KC0r[k] = 5+c4
                KC0c[k] = 4+c3
                k += 1
                KC0r[k] = 5+c4
                KC0c[k] = 5+c3
                k += 1
                KC0r[k] = 5+c4
                KC0c[k] = 0+c4
                k += 1
                KC0r[k] = 5+c4
                KC0c[k] = 1+c4
                k += 1
                KC0r[k] = 5+c4
                KC0c[k] = 2+c4
                k += 1
                KC0r[k] = 5+c4
                KC0c[k] = 3+c4
                k += 1
                KC0r[k] = 5+c4
                KC0c[k] = 4+c4
                k += 1
                KC0r[k] = 5+c4
                KC0c[k] = 5+c4

            #NOTE reduced integration to remove shear locking
            wij = 4.

            alphat = self.alphat

            Eu = 0.1*E1eq*h/(1.0 + 1.0/self.area)
            Ev = 0.1*E2eq*h/(1.0 + 1.0/self.area)
            Erx = 0.1*E2eq*h**3/(1.0 + 1.0/self.area)
            Ery = 0.1*E1eq*h**3/(1.0 + 1.0/self.area)
            Ew = 0.5*(Erx + Ery)

            #NOTE using only one integration point at xi=0, eta=0 to avoid shear locking
            detJ = 0.125*x1*y2 - 0.125*x1*y4 - 0.125*x2*y1 + 0.125*x2*y3 - 0.125*x3*y2 + 0.125*x3*y4 + 0.125*x4*y1 - 0.125*x4*y3

            j11 = 2.0*(-y1 - y2 + y3 + y4)/(x1*y2 - x1*y4 - x2*y1 + x2*y3 - x3*y2 + x3*y4 + x4*y1 - x4*y3)
            j12 = 2.0*(y1 - y2 - y3 + y4)/(x1*y2 - x1*y4 - x2*y1 + x2*y3 - x3*y2 + x3*y4 + x4*y1 - x4*y3)
            j21 = 2.0*(x1 + x2 - x3 - x4)/(x1*y2 - x1*y4 - x2*y1 + x2*y3 - x3*y2 + x3*y4 + x4*y1 - x4*y3)
            j22 = 2.0*(-x1 + x2 + x3 - x4)/(x1*y2 - x1*y4 - x2*y1 + x2*y3 - x3*y2 + x3*y4 + x4*y1 - x4*y3)

            N1 = 0.25
            N2 = 0.25
            N3 = 0.25
            N4 = 0.25

            N1x = -0.25*j11 - 0.25*j12
            N2x = 0.25*j11 - 0.25*j12
            N3x = 0.25*j11 + 0.25*j12
            N4x = -0.25*j11 + 0.25*j12
            N1y = -0.25*j21 - 0.25*j22
            N2y = 0.25*j21 - 0.25*j22
            N3y = 0.25*j21 + 0.25*j22
            N4y = -0.25*j21 + 0.25*j22

            N1xy = 0.25*j11*j22 + 0.25*j12*j21
            N2xy = -0.25*j11*j22 - 0.25*j12*j21
            N3xy = 0.25*j11*j22 + 0.25*j12*j21
            N4xy = -0.25*j11*j22 - 0.25*j12*j21

            gamma1 = N1xy
            gamma2 = N2xy
            gamma3 = N3xy
            gamma4 = N4xy

            k = self.init_k_KC0
            KC0v[k] += detJ*r13**2*wij*(Ew*gamma1**2 + N1x*(E45*N1y + E55*N1x) + N1y*(E44*N1y + E45*N1x)) + r11*(detJ*r11*wij*(0.25*A66*N1y**2*alphat/h + Eu*gamma1**2 + N1x*(A11*N1x + A16*N1y) + N1y*(A16*N1x + A66*N1y)) + detJ*r12*wij*(-0.25*A66*N1x*N1y*alphat/h + N1x*(A12*N1y + A16*N1x) + N1y*(A26*N1y + A66*N1x))) + r12*(detJ*r11*wij*(-0.25*A66*N1x*N1y*alphat/h + N1x*(A16*N1x + A66*N1y) + N1y*(A12*N1x + A26*N1y)) + detJ*r12*wij*(0.25*A66*N1x**2*alphat/h + Ev*gamma1**2 + N1x*(A26*N1y + A66*N1x) + N1y*(A22*N1y + A26*N1x)))
            k += 1
            KC0v[k] += detJ*r13*r23*wij*(Ew*gamma1**2 + N1x*(E45*N1y + E55*N1x) + N1y*(E44*N1y + E45*N1x)) + r21*(detJ*r11*wij*(0.25*A66*N1y**2*alphat/h + Eu*gamma1**2 + N1x*(A11*N1x + A16*N1y) + N1y*(A16*N1x + A66*N1y)) + detJ*r12*wij*(-0.25*A66*N1x*N1y*alphat/h + N1x*(A12*N1y + A16*N1x) + N1y*(A26*N1y + A66*N1x))) + r22*(detJ*r11*wij*(-0.25*A66*N1x*N1y*alphat/h + N1x*(A16*N1x + A66*N1y) + N1y*(A12*N1x + A26*N1y)) + detJ*r12*wij*(0.25*A66*N1x**2*alphat/h + Ev*gamma1**2 + N1x*(A26*N1y + A66*N1x) + N1y*(A22*N1y + A26*N1x)))
            k += 1
            KC0v[k] += detJ*r13*r33*wij*(Ew*gamma1**2 + N1x*(E45*N1y + E55*N1x) + N1y*(E44*N1y + E45*N1x)) + r31*(detJ*r11*wij*(0.25*A66*N1y**2*alphat/h + Eu*gamma1**2 + N1x*(A11*N1x + A16*N1y) + N1y*(A16*N1x + A66*N1y)) + detJ*r12*wij*(-0.25*A66*N1x*N1y*alphat/h + N1x*(A12*N1y + A16*N1x) + N1y*(A26*N1y + A66*N1x))) + r32*(detJ*r11*wij*(-0.25*A66*N1x*N1y*alphat/h + N1x*(A16*N1x + A66*N1y) + N1y*(A12*N1x + A26*N1y)) + detJ*r12*wij*(0.25*A66*N1x**2*alphat/h + Ev*gamma1**2 + N1x*(A26*N1y + A66*N1x) + N1y*(A22*N1y + A26*N1x)))
            k += 1
            KC0v[k] += r11*(-N1*detJ*r13*wij*(E44*N1y + E45*N1x) + detJ*r11*wij*(-N1x*(B16*N1x + B66*N1y) - N1y*(B12*N1x + B26*N1y)) + detJ*r12*wij*(-N1x*(B26*N1y + B66*N1x) - N1y*(B22*N1y + B26*N1x))) + r12*(N1*detJ*r13*wij*(E45*N1y + E55*N1x) + detJ*r11*wij*(N1x*(B11*N1x + B16*N1y) + N1y*(B16*N1x + B66*N1y)) + detJ*r12*wij*(N1x*(B12*N1y + B16*N1x) + N1y*(B26*N1y + B66*N1x))) + r13*(-0.5*A66*N1*N1x*alphat*detJ*r12*wij/h + 0.5*A66*N1*N1y*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += r21*(-N1*detJ*r13*wij*(E44*N1y + E45*N1x) + detJ*r11*wij*(-N1x*(B16*N1x + B66*N1y) - N1y*(B12*N1x + B26*N1y)) + detJ*r12*wij*(-N1x*(B26*N1y + B66*N1x) - N1y*(B22*N1y + B26*N1x))) + r22*(N1*detJ*r13*wij*(E45*N1y + E55*N1x) + detJ*r11*wij*(N1x*(B11*N1x + B16*N1y) + N1y*(B16*N1x + B66*N1y)) + detJ*r12*wij*(N1x*(B12*N1y + B16*N1x) + N1y*(B26*N1y + B66*N1x))) + r23*(-0.5*A66*N1*N1x*alphat*detJ*r12*wij/h + 0.5*A66*N1*N1y*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += r31*(-N1*detJ*r13*wij*(E44*N1y + E45*N1x) + detJ*r11*wij*(-N1x*(B16*N1x + B66*N1y) - N1y*(B12*N1x + B26*N1y)) + detJ*r12*wij*(-N1x*(B26*N1y + B66*N1x) - N1y*(B22*N1y + B26*N1x))) + r32*(N1*detJ*r13*wij*(E45*N1y + E55*N1x) + detJ*r11*wij*(N1x*(B11*N1x + B16*N1y) + N1y*(B16*N1x + B66*N1y)) + detJ*r12*wij*(N1x*(B12*N1y + B16*N1x) + N1y*(B26*N1y + B66*N1x))) + r33*(-0.5*A66*N1*N1x*alphat*detJ*r12*wij/h + 0.5*A66*N1*N1y*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += detJ*r13**2*wij*(Ew*gamma1*gamma2 + N2x*(E45*N1y + E55*N1x) + N2y*(E44*N1y + E45*N1x)) + r11*(detJ*r11*wij*(0.25*A66*N1y*N2y*alphat/h + Eu*gamma1*gamma2 + N2x*(A11*N1x + A16*N1y) + N2y*(A16*N1x + A66*N1y)) + detJ*r12*wij*(-0.25*A66*N1x*N2y*alphat/h + N2x*(A12*N1y + A16*N1x) + N2y*(A26*N1y + A66*N1x))) + r12*(detJ*r11*wij*(-0.25*A66*N1y*N2x*alphat/h + N2x*(A16*N1x + A66*N1y) + N2y*(A12*N1x + A26*N1y)) + detJ*r12*wij*(0.25*A66*N1x*N2x*alphat/h + Ev*gamma1*gamma2 + N2x*(A26*N1y + A66*N1x) + N2y*(A22*N1y + A26*N1x)))
            k += 1
            KC0v[k] += detJ*r13*r23*wij*(Ew*gamma1*gamma2 + N2x*(E45*N1y + E55*N1x) + N2y*(E44*N1y + E45*N1x)) + r21*(detJ*r11*wij*(0.25*A66*N1y*N2y*alphat/h + Eu*gamma1*gamma2 + N2x*(A11*N1x + A16*N1y) + N2y*(A16*N1x + A66*N1y)) + detJ*r12*wij*(-0.25*A66*N1x*N2y*alphat/h + N2x*(A12*N1y + A16*N1x) + N2y*(A26*N1y + A66*N1x))) + r22*(detJ*r11*wij*(-0.25*A66*N1y*N2x*alphat/h + N2x*(A16*N1x + A66*N1y) + N2y*(A12*N1x + A26*N1y)) + detJ*r12*wij*(0.25*A66*N1x*N2x*alphat/h + Ev*gamma1*gamma2 + N2x*(A26*N1y + A66*N1x) + N2y*(A22*N1y + A26*N1x)))
            k += 1
            KC0v[k] += detJ*r13*r33*wij*(Ew*gamma1*gamma2 + N2x*(E45*N1y + E55*N1x) + N2y*(E44*N1y + E45*N1x)) + r31*(detJ*r11*wij*(0.25*A66*N1y*N2y*alphat/h + Eu*gamma1*gamma2 + N2x*(A11*N1x + A16*N1y) + N2y*(A16*N1x + A66*N1y)) + detJ*r12*wij*(-0.25*A66*N1x*N2y*alphat/h + N2x*(A12*N1y + A16*N1x) + N2y*(A26*N1y + A66*N1x))) + r32*(detJ*r11*wij*(-0.25*A66*N1y*N2x*alphat/h + N2x*(A16*N1x + A66*N1y) + N2y*(A12*N1x + A26*N1y)) + detJ*r12*wij*(0.25*A66*N1x*N2x*alphat/h + Ev*gamma1*gamma2 + N2x*(A26*N1y + A66*N1x) + N2y*(A22*N1y + A26*N1x)))
            k += 1
            KC0v[k] += r11*(-N2*detJ*r13*wij*(E44*N1y + E45*N1x) + detJ*r11*wij*(-N2x*(B16*N1x + B66*N1y) - N2y*(B12*N1x + B26*N1y)) + detJ*r12*wij*(-N2x*(B26*N1y + B66*N1x) - N2y*(B22*N1y + B26*N1x))) + r12*(N2*detJ*r13*wij*(E45*N1y + E55*N1x) + detJ*r11*wij*(N2x*(B11*N1x + B16*N1y) + N2y*(B16*N1x + B66*N1y)) + detJ*r12*wij*(N2x*(B12*N1y + B16*N1x) + N2y*(B26*N1y + B66*N1x))) + r13*(-0.5*A66*N1x*N2*alphat*detJ*r12*wij/h + 0.5*A66*N1y*N2*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += r21*(-N2*detJ*r13*wij*(E44*N1y + E45*N1x) + detJ*r11*wij*(-N2x*(B16*N1x + B66*N1y) - N2y*(B12*N1x + B26*N1y)) + detJ*r12*wij*(-N2x*(B26*N1y + B66*N1x) - N2y*(B22*N1y + B26*N1x))) + r22*(N2*detJ*r13*wij*(E45*N1y + E55*N1x) + detJ*r11*wij*(N2x*(B11*N1x + B16*N1y) + N2y*(B16*N1x + B66*N1y)) + detJ*r12*wij*(N2x*(B12*N1y + B16*N1x) + N2y*(B26*N1y + B66*N1x))) + r23*(-0.5*A66*N1x*N2*alphat*detJ*r12*wij/h + 0.5*A66*N1y*N2*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += r31*(-N2*detJ*r13*wij*(E44*N1y + E45*N1x) + detJ*r11*wij*(-N2x*(B16*N1x + B66*N1y) - N2y*(B12*N1x + B26*N1y)) + detJ*r12*wij*(-N2x*(B26*N1y + B66*N1x) - N2y*(B22*N1y + B26*N1x))) + r32*(N2*detJ*r13*wij*(E45*N1y + E55*N1x) + detJ*r11*wij*(N2x*(B11*N1x + B16*N1y) + N2y*(B16*N1x + B66*N1y)) + detJ*r12*wij*(N2x*(B12*N1y + B16*N1x) + N2y*(B26*N1y + B66*N1x))) + r33*(-0.5*A66*N1x*N2*alphat*detJ*r12*wij/h + 0.5*A66*N1y*N2*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += detJ*r13**2*wij*(Ew*gamma1*gamma3 + N3x*(E45*N1y + E55*N1x) + N3y*(E44*N1y + E45*N1x)) + r11*(detJ*r11*wij*(0.25*A66*N1y*N3y*alphat/h + Eu*gamma1*gamma3 + N3x*(A11*N1x + A16*N1y) + N3y*(A16*N1x + A66*N1y)) + detJ*r12*wij*(-0.25*A66*N1x*N3y*alphat/h + N3x*(A12*N1y + A16*N1x) + N3y*(A26*N1y + A66*N1x))) + r12*(detJ*r11*wij*(-0.25*A66*N1y*N3x*alphat/h + N3x*(A16*N1x + A66*N1y) + N3y*(A12*N1x + A26*N1y)) + detJ*r12*wij*(0.25*A66*N1x*N3x*alphat/h + Ev*gamma1*gamma3 + N3x*(A26*N1y + A66*N1x) + N3y*(A22*N1y + A26*N1x)))
            k += 1
            KC0v[k] += detJ*r13*r23*wij*(Ew*gamma1*gamma3 + N3x*(E45*N1y + E55*N1x) + N3y*(E44*N1y + E45*N1x)) + r21*(detJ*r11*wij*(0.25*A66*N1y*N3y*alphat/h + Eu*gamma1*gamma3 + N3x*(A11*N1x + A16*N1y) + N3y*(A16*N1x + A66*N1y)) + detJ*r12*wij*(-0.25*A66*N1x*N3y*alphat/h + N3x*(A12*N1y + A16*N1x) + N3y*(A26*N1y + A66*N1x))) + r22*(detJ*r11*wij*(-0.25*A66*N1y*N3x*alphat/h + N3x*(A16*N1x + A66*N1y) + N3y*(A12*N1x + A26*N1y)) + detJ*r12*wij*(0.25*A66*N1x*N3x*alphat/h + Ev*gamma1*gamma3 + N3x*(A26*N1y + A66*N1x) + N3y*(A22*N1y + A26*N1x)))
            k += 1
            KC0v[k] += detJ*r13*r33*wij*(Ew*gamma1*gamma3 + N3x*(E45*N1y + E55*N1x) + N3y*(E44*N1y + E45*N1x)) + r31*(detJ*r11*wij*(0.25*A66*N1y*N3y*alphat/h + Eu*gamma1*gamma3 + N3x*(A11*N1x + A16*N1y) + N3y*(A16*N1x + A66*N1y)) + detJ*r12*wij*(-0.25*A66*N1x*N3y*alphat/h + N3x*(A12*N1y + A16*N1x) + N3y*(A26*N1y + A66*N1x))) + r32*(detJ*r11*wij*(-0.25*A66*N1y*N3x*alphat/h + N3x*(A16*N1x + A66*N1y) + N3y*(A12*N1x + A26*N1y)) + detJ*r12*wij*(0.25*A66*N1x*N3x*alphat/h + Ev*gamma1*gamma3 + N3x*(A26*N1y + A66*N1x) + N3y*(A22*N1y + A26*N1x)))
            k += 1
            KC0v[k] += r11*(-N3*detJ*r13*wij*(E44*N1y + E45*N1x) + detJ*r11*wij*(-N3x*(B16*N1x + B66*N1y) - N3y*(B12*N1x + B26*N1y)) + detJ*r12*wij*(-N3x*(B26*N1y + B66*N1x) - N3y*(B22*N1y + B26*N1x))) + r12*(N3*detJ*r13*wij*(E45*N1y + E55*N1x) + detJ*r11*wij*(N3x*(B11*N1x + B16*N1y) + N3y*(B16*N1x + B66*N1y)) + detJ*r12*wij*(N3x*(B12*N1y + B16*N1x) + N3y*(B26*N1y + B66*N1x))) + r13*(-0.5*A66*N1x*N3*alphat*detJ*r12*wij/h + 0.5*A66*N1y*N3*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += r21*(-N3*detJ*r13*wij*(E44*N1y + E45*N1x) + detJ*r11*wij*(-N3x*(B16*N1x + B66*N1y) - N3y*(B12*N1x + B26*N1y)) + detJ*r12*wij*(-N3x*(B26*N1y + B66*N1x) - N3y*(B22*N1y + B26*N1x))) + r22*(N3*detJ*r13*wij*(E45*N1y + E55*N1x) + detJ*r11*wij*(N3x*(B11*N1x + B16*N1y) + N3y*(B16*N1x + B66*N1y)) + detJ*r12*wij*(N3x*(B12*N1y + B16*N1x) + N3y*(B26*N1y + B66*N1x))) + r23*(-0.5*A66*N1x*N3*alphat*detJ*r12*wij/h + 0.5*A66*N1y*N3*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += r31*(-N3*detJ*r13*wij*(E44*N1y + E45*N1x) + detJ*r11*wij*(-N3x*(B16*N1x + B66*N1y) - N3y*(B12*N1x + B26*N1y)) + detJ*r12*wij*(-N3x*(B26*N1y + B66*N1x) - N3y*(B22*N1y + B26*N1x))) + r32*(N3*detJ*r13*wij*(E45*N1y + E55*N1x) + detJ*r11*wij*(N3x*(B11*N1x + B16*N1y) + N3y*(B16*N1x + B66*N1y)) + detJ*r12*wij*(N3x*(B12*N1y + B16*N1x) + N3y*(B26*N1y + B66*N1x))) + r33*(-0.5*A66*N1x*N3*alphat*detJ*r12*wij/h + 0.5*A66*N1y*N3*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += detJ*r13**2*wij*(Ew*gamma1*gamma4 + N4x*(E45*N1y + E55*N1x) + N4y*(E44*N1y + E45*N1x)) + r11*(detJ*r11*wij*(0.25*A66*N1y*N4y*alphat/h + Eu*gamma1*gamma4 + N4x*(A11*N1x + A16*N1y) + N4y*(A16*N1x + A66*N1y)) + detJ*r12*wij*(-0.25*A66*N1x*N4y*alphat/h + N4x*(A12*N1y + A16*N1x) + N4y*(A26*N1y + A66*N1x))) + r12*(detJ*r11*wij*(-0.25*A66*N1y*N4x*alphat/h + N4x*(A16*N1x + A66*N1y) + N4y*(A12*N1x + A26*N1y)) + detJ*r12*wij*(0.25*A66*N1x*N4x*alphat/h + Ev*gamma1*gamma4 + N4x*(A26*N1y + A66*N1x) + N4y*(A22*N1y + A26*N1x)))
            k += 1
            KC0v[k] += detJ*r13*r23*wij*(Ew*gamma1*gamma4 + N4x*(E45*N1y + E55*N1x) + N4y*(E44*N1y + E45*N1x)) + r21*(detJ*r11*wij*(0.25*A66*N1y*N4y*alphat/h + Eu*gamma1*gamma4 + N4x*(A11*N1x + A16*N1y) + N4y*(A16*N1x + A66*N1y)) + detJ*r12*wij*(-0.25*A66*N1x*N4y*alphat/h + N4x*(A12*N1y + A16*N1x) + N4y*(A26*N1y + A66*N1x))) + r22*(detJ*r11*wij*(-0.25*A66*N1y*N4x*alphat/h + N4x*(A16*N1x + A66*N1y) + N4y*(A12*N1x + A26*N1y)) + detJ*r12*wij*(0.25*A66*N1x*N4x*alphat/h + Ev*gamma1*gamma4 + N4x*(A26*N1y + A66*N1x) + N4y*(A22*N1y + A26*N1x)))
            k += 1
            KC0v[k] += detJ*r13*r33*wij*(Ew*gamma1*gamma4 + N4x*(E45*N1y + E55*N1x) + N4y*(E44*N1y + E45*N1x)) + r31*(detJ*r11*wij*(0.25*A66*N1y*N4y*alphat/h + Eu*gamma1*gamma4 + N4x*(A11*N1x + A16*N1y) + N4y*(A16*N1x + A66*N1y)) + detJ*r12*wij*(-0.25*A66*N1x*N4y*alphat/h + N4x*(A12*N1y + A16*N1x) + N4y*(A26*N1y + A66*N1x))) + r32*(detJ*r11*wij*(-0.25*A66*N1y*N4x*alphat/h + N4x*(A16*N1x + A66*N1y) + N4y*(A12*N1x + A26*N1y)) + detJ*r12*wij*(0.25*A66*N1x*N4x*alphat/h + Ev*gamma1*gamma4 + N4x*(A26*N1y + A66*N1x) + N4y*(A22*N1y + A26*N1x)))
            k += 1
            KC0v[k] += r11*(-N4*detJ*r13*wij*(E44*N1y + E45*N1x) + detJ*r11*wij*(-N4x*(B16*N1x + B66*N1y) - N4y*(B12*N1x + B26*N1y)) + detJ*r12*wij*(-N4x*(B26*N1y + B66*N1x) - N4y*(B22*N1y + B26*N1x))) + r12*(N4*detJ*r13*wij*(E45*N1y + E55*N1x) + detJ*r11*wij*(N4x*(B11*N1x + B16*N1y) + N4y*(B16*N1x + B66*N1y)) + detJ*r12*wij*(N4x*(B12*N1y + B16*N1x) + N4y*(B26*N1y + B66*N1x))) + r13*(-0.5*A66*N1x*N4*alphat*detJ*r12*wij/h + 0.5*A66*N1y*N4*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += r21*(-N4*detJ*r13*wij*(E44*N1y + E45*N1x) + detJ*r11*wij*(-N4x*(B16*N1x + B66*N1y) - N4y*(B12*N1x + B26*N1y)) + detJ*r12*wij*(-N4x*(B26*N1y + B66*N1x) - N4y*(B22*N1y + B26*N1x))) + r22*(N4*detJ*r13*wij*(E45*N1y + E55*N1x) + detJ*r11*wij*(N4x*(B11*N1x + B16*N1y) + N4y*(B16*N1x + B66*N1y)) + detJ*r12*wij*(N4x*(B12*N1y + B16*N1x) + N4y*(B26*N1y + B66*N1x))) + r23*(-0.5*A66*N1x*N4*alphat*detJ*r12*wij/h + 0.5*A66*N1y*N4*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += r31*(-N4*detJ*r13*wij*(E44*N1y + E45*N1x) + detJ*r11*wij*(-N4x*(B16*N1x + B66*N1y) - N4y*(B12*N1x + B26*N1y)) + detJ*r12*wij*(-N4x*(B26*N1y + B66*N1x) - N4y*(B22*N1y + B26*N1x))) + r32*(N4*detJ*r13*wij*(E45*N1y + E55*N1x) + detJ*r11*wij*(N4x*(B11*N1x + B16*N1y) + N4y*(B16*N1x + B66*N1y)) + detJ*r12*wij*(N4x*(B12*N1y + B16*N1x) + N4y*(B26*N1y + B66*N1x))) + r33*(-0.5*A66*N1x*N4*alphat*detJ*r12*wij/h + 0.5*A66*N1y*N4*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += detJ*r13*r23*wij*(Ew*gamma1**2 + N1x*(E45*N1y + E55*N1x) + N1y*(E44*N1y + E45*N1x)) + r11*(detJ*r21*wij*(0.25*A66*N1y**2*alphat/h + Eu*gamma1**2 + N1x*(A11*N1x + A16*N1y) + N1y*(A16*N1x + A66*N1y)) + detJ*r22*wij*(-0.25*A66*N1x*N1y*alphat/h + N1x*(A12*N1y + A16*N1x) + N1y*(A26*N1y + A66*N1x))) + r12*(detJ*r21*wij*(-0.25*A66*N1x*N1y*alphat/h + N1x*(A16*N1x + A66*N1y) + N1y*(A12*N1x + A26*N1y)) + detJ*r22*wij*(0.25*A66*N1x**2*alphat/h + Ev*gamma1**2 + N1x*(A26*N1y + A66*N1x) + N1y*(A22*N1y + A26*N1x)))
            k += 1
            KC0v[k] += detJ*r23**2*wij*(Ew*gamma1**2 + N1x*(E45*N1y + E55*N1x) + N1y*(E44*N1y + E45*N1x)) + r21*(detJ*r21*wij*(0.25*A66*N1y**2*alphat/h + Eu*gamma1**2 + N1x*(A11*N1x + A16*N1y) + N1y*(A16*N1x + A66*N1y)) + detJ*r22*wij*(-0.25*A66*N1x*N1y*alphat/h + N1x*(A12*N1y + A16*N1x) + N1y*(A26*N1y + A66*N1x))) + r22*(detJ*r21*wij*(-0.25*A66*N1x*N1y*alphat/h + N1x*(A16*N1x + A66*N1y) + N1y*(A12*N1x + A26*N1y)) + detJ*r22*wij*(0.25*A66*N1x**2*alphat/h + Ev*gamma1**2 + N1x*(A26*N1y + A66*N1x) + N1y*(A22*N1y + A26*N1x)))
            k += 1
            KC0v[k] += detJ*r23*r33*wij*(Ew*gamma1**2 + N1x*(E45*N1y + E55*N1x) + N1y*(E44*N1y + E45*N1x)) + r31*(detJ*r21*wij*(0.25*A66*N1y**2*alphat/h + Eu*gamma1**2 + N1x*(A11*N1x + A16*N1y) + N1y*(A16*N1x + A66*N1y)) + detJ*r22*wij*(-0.25*A66*N1x*N1y*alphat/h + N1x*(A12*N1y + A16*N1x) + N1y*(A26*N1y + A66*N1x))) + r32*(detJ*r21*wij*(-0.25*A66*N1x*N1y*alphat/h + N1x*(A16*N1x + A66*N1y) + N1y*(A12*N1x + A26*N1y)) + detJ*r22*wij*(0.25*A66*N1x**2*alphat/h + Ev*gamma1**2 + N1x*(A26*N1y + A66*N1x) + N1y*(A22*N1y + A26*N1x)))
            k += 1
            KC0v[k] += r11*(-N1*detJ*r23*wij*(E44*N1y + E45*N1x) + detJ*r21*wij*(-N1x*(B16*N1x + B66*N1y) - N1y*(B12*N1x + B26*N1y)) + detJ*r22*wij*(-N1x*(B26*N1y + B66*N1x) - N1y*(B22*N1y + B26*N1x))) + r12*(N1*detJ*r23*wij*(E45*N1y + E55*N1x) + detJ*r21*wij*(N1x*(B11*N1x + B16*N1y) + N1y*(B16*N1x + B66*N1y)) + detJ*r22*wij*(N1x*(B12*N1y + B16*N1x) + N1y*(B26*N1y + B66*N1x))) + r13*(-0.5*A66*N1*N1x*alphat*detJ*r22*wij/h + 0.5*A66*N1*N1y*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += r21*(-N1*detJ*r23*wij*(E44*N1y + E45*N1x) + detJ*r21*wij*(-N1x*(B16*N1x + B66*N1y) - N1y*(B12*N1x + B26*N1y)) + detJ*r22*wij*(-N1x*(B26*N1y + B66*N1x) - N1y*(B22*N1y + B26*N1x))) + r22*(N1*detJ*r23*wij*(E45*N1y + E55*N1x) + detJ*r21*wij*(N1x*(B11*N1x + B16*N1y) + N1y*(B16*N1x + B66*N1y)) + detJ*r22*wij*(N1x*(B12*N1y + B16*N1x) + N1y*(B26*N1y + B66*N1x))) + r23*(-0.5*A66*N1*N1x*alphat*detJ*r22*wij/h + 0.5*A66*N1*N1y*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += r31*(-N1*detJ*r23*wij*(E44*N1y + E45*N1x) + detJ*r21*wij*(-N1x*(B16*N1x + B66*N1y) - N1y*(B12*N1x + B26*N1y)) + detJ*r22*wij*(-N1x*(B26*N1y + B66*N1x) - N1y*(B22*N1y + B26*N1x))) + r32*(N1*detJ*r23*wij*(E45*N1y + E55*N1x) + detJ*r21*wij*(N1x*(B11*N1x + B16*N1y) + N1y*(B16*N1x + B66*N1y)) + detJ*r22*wij*(N1x*(B12*N1y + B16*N1x) + N1y*(B26*N1y + B66*N1x))) + r33*(-0.5*A66*N1*N1x*alphat*detJ*r22*wij/h + 0.5*A66*N1*N1y*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += detJ*r13*r23*wij*(Ew*gamma1*gamma2 + N2x*(E45*N1y + E55*N1x) + N2y*(E44*N1y + E45*N1x)) + r11*(detJ*r21*wij*(0.25*A66*N1y*N2y*alphat/h + Eu*gamma1*gamma2 + N2x*(A11*N1x + A16*N1y) + N2y*(A16*N1x + A66*N1y)) + detJ*r22*wij*(-0.25*A66*N1x*N2y*alphat/h + N2x*(A12*N1y + A16*N1x) + N2y*(A26*N1y + A66*N1x))) + r12*(detJ*r21*wij*(-0.25*A66*N1y*N2x*alphat/h + N2x*(A16*N1x + A66*N1y) + N2y*(A12*N1x + A26*N1y)) + detJ*r22*wij*(0.25*A66*N1x*N2x*alphat/h + Ev*gamma1*gamma2 + N2x*(A26*N1y + A66*N1x) + N2y*(A22*N1y + A26*N1x)))
            k += 1
            KC0v[k] += detJ*r23**2*wij*(Ew*gamma1*gamma2 + N2x*(E45*N1y + E55*N1x) + N2y*(E44*N1y + E45*N1x)) + r21*(detJ*r21*wij*(0.25*A66*N1y*N2y*alphat/h + Eu*gamma1*gamma2 + N2x*(A11*N1x + A16*N1y) + N2y*(A16*N1x + A66*N1y)) + detJ*r22*wij*(-0.25*A66*N1x*N2y*alphat/h + N2x*(A12*N1y + A16*N1x) + N2y*(A26*N1y + A66*N1x))) + r22*(detJ*r21*wij*(-0.25*A66*N1y*N2x*alphat/h + N2x*(A16*N1x + A66*N1y) + N2y*(A12*N1x + A26*N1y)) + detJ*r22*wij*(0.25*A66*N1x*N2x*alphat/h + Ev*gamma1*gamma2 + N2x*(A26*N1y + A66*N1x) + N2y*(A22*N1y + A26*N1x)))
            k += 1
            KC0v[k] += detJ*r23*r33*wij*(Ew*gamma1*gamma2 + N2x*(E45*N1y + E55*N1x) + N2y*(E44*N1y + E45*N1x)) + r31*(detJ*r21*wij*(0.25*A66*N1y*N2y*alphat/h + Eu*gamma1*gamma2 + N2x*(A11*N1x + A16*N1y) + N2y*(A16*N1x + A66*N1y)) + detJ*r22*wij*(-0.25*A66*N1x*N2y*alphat/h + N2x*(A12*N1y + A16*N1x) + N2y*(A26*N1y + A66*N1x))) + r32*(detJ*r21*wij*(-0.25*A66*N1y*N2x*alphat/h + N2x*(A16*N1x + A66*N1y) + N2y*(A12*N1x + A26*N1y)) + detJ*r22*wij*(0.25*A66*N1x*N2x*alphat/h + Ev*gamma1*gamma2 + N2x*(A26*N1y + A66*N1x) + N2y*(A22*N1y + A26*N1x)))
            k += 1
            KC0v[k] += r11*(-N2*detJ*r23*wij*(E44*N1y + E45*N1x) + detJ*r21*wij*(-N2x*(B16*N1x + B66*N1y) - N2y*(B12*N1x + B26*N1y)) + detJ*r22*wij*(-N2x*(B26*N1y + B66*N1x) - N2y*(B22*N1y + B26*N1x))) + r12*(N2*detJ*r23*wij*(E45*N1y + E55*N1x) + detJ*r21*wij*(N2x*(B11*N1x + B16*N1y) + N2y*(B16*N1x + B66*N1y)) + detJ*r22*wij*(N2x*(B12*N1y + B16*N1x) + N2y*(B26*N1y + B66*N1x))) + r13*(-0.5*A66*N1x*N2*alphat*detJ*r22*wij/h + 0.5*A66*N1y*N2*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += r21*(-N2*detJ*r23*wij*(E44*N1y + E45*N1x) + detJ*r21*wij*(-N2x*(B16*N1x + B66*N1y) - N2y*(B12*N1x + B26*N1y)) + detJ*r22*wij*(-N2x*(B26*N1y + B66*N1x) - N2y*(B22*N1y + B26*N1x))) + r22*(N2*detJ*r23*wij*(E45*N1y + E55*N1x) + detJ*r21*wij*(N2x*(B11*N1x + B16*N1y) + N2y*(B16*N1x + B66*N1y)) + detJ*r22*wij*(N2x*(B12*N1y + B16*N1x) + N2y*(B26*N1y + B66*N1x))) + r23*(-0.5*A66*N1x*N2*alphat*detJ*r22*wij/h + 0.5*A66*N1y*N2*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += r31*(-N2*detJ*r23*wij*(E44*N1y + E45*N1x) + detJ*r21*wij*(-N2x*(B16*N1x + B66*N1y) - N2y*(B12*N1x + B26*N1y)) + detJ*r22*wij*(-N2x*(B26*N1y + B66*N1x) - N2y*(B22*N1y + B26*N1x))) + r32*(N2*detJ*r23*wij*(E45*N1y + E55*N1x) + detJ*r21*wij*(N2x*(B11*N1x + B16*N1y) + N2y*(B16*N1x + B66*N1y)) + detJ*r22*wij*(N2x*(B12*N1y + B16*N1x) + N2y*(B26*N1y + B66*N1x))) + r33*(-0.5*A66*N1x*N2*alphat*detJ*r22*wij/h + 0.5*A66*N1y*N2*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += detJ*r13*r23*wij*(Ew*gamma1*gamma3 + N3x*(E45*N1y + E55*N1x) + N3y*(E44*N1y + E45*N1x)) + r11*(detJ*r21*wij*(0.25*A66*N1y*N3y*alphat/h + Eu*gamma1*gamma3 + N3x*(A11*N1x + A16*N1y) + N3y*(A16*N1x + A66*N1y)) + detJ*r22*wij*(-0.25*A66*N1x*N3y*alphat/h + N3x*(A12*N1y + A16*N1x) + N3y*(A26*N1y + A66*N1x))) + r12*(detJ*r21*wij*(-0.25*A66*N1y*N3x*alphat/h + N3x*(A16*N1x + A66*N1y) + N3y*(A12*N1x + A26*N1y)) + detJ*r22*wij*(0.25*A66*N1x*N3x*alphat/h + Ev*gamma1*gamma3 + N3x*(A26*N1y + A66*N1x) + N3y*(A22*N1y + A26*N1x)))
            k += 1
            KC0v[k] += detJ*r23**2*wij*(Ew*gamma1*gamma3 + N3x*(E45*N1y + E55*N1x) + N3y*(E44*N1y + E45*N1x)) + r21*(detJ*r21*wij*(0.25*A66*N1y*N3y*alphat/h + Eu*gamma1*gamma3 + N3x*(A11*N1x + A16*N1y) + N3y*(A16*N1x + A66*N1y)) + detJ*r22*wij*(-0.25*A66*N1x*N3y*alphat/h + N3x*(A12*N1y + A16*N1x) + N3y*(A26*N1y + A66*N1x))) + r22*(detJ*r21*wij*(-0.25*A66*N1y*N3x*alphat/h + N3x*(A16*N1x + A66*N1y) + N3y*(A12*N1x + A26*N1y)) + detJ*r22*wij*(0.25*A66*N1x*N3x*alphat/h + Ev*gamma1*gamma3 + N3x*(A26*N1y + A66*N1x) + N3y*(A22*N1y + A26*N1x)))
            k += 1
            KC0v[k] += detJ*r23*r33*wij*(Ew*gamma1*gamma3 + N3x*(E45*N1y + E55*N1x) + N3y*(E44*N1y + E45*N1x)) + r31*(detJ*r21*wij*(0.25*A66*N1y*N3y*alphat/h + Eu*gamma1*gamma3 + N3x*(A11*N1x + A16*N1y) + N3y*(A16*N1x + A66*N1y)) + detJ*r22*wij*(-0.25*A66*N1x*N3y*alphat/h + N3x*(A12*N1y + A16*N1x) + N3y*(A26*N1y + A66*N1x))) + r32*(detJ*r21*wij*(-0.25*A66*N1y*N3x*alphat/h + N3x*(A16*N1x + A66*N1y) + N3y*(A12*N1x + A26*N1y)) + detJ*r22*wij*(0.25*A66*N1x*N3x*alphat/h + Ev*gamma1*gamma3 + N3x*(A26*N1y + A66*N1x) + N3y*(A22*N1y + A26*N1x)))
            k += 1
            KC0v[k] += r11*(-N3*detJ*r23*wij*(E44*N1y + E45*N1x) + detJ*r21*wij*(-N3x*(B16*N1x + B66*N1y) - N3y*(B12*N1x + B26*N1y)) + detJ*r22*wij*(-N3x*(B26*N1y + B66*N1x) - N3y*(B22*N1y + B26*N1x))) + r12*(N3*detJ*r23*wij*(E45*N1y + E55*N1x) + detJ*r21*wij*(N3x*(B11*N1x + B16*N1y) + N3y*(B16*N1x + B66*N1y)) + detJ*r22*wij*(N3x*(B12*N1y + B16*N1x) + N3y*(B26*N1y + B66*N1x))) + r13*(-0.5*A66*N1x*N3*alphat*detJ*r22*wij/h + 0.5*A66*N1y*N3*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += r21*(-N3*detJ*r23*wij*(E44*N1y + E45*N1x) + detJ*r21*wij*(-N3x*(B16*N1x + B66*N1y) - N3y*(B12*N1x + B26*N1y)) + detJ*r22*wij*(-N3x*(B26*N1y + B66*N1x) - N3y*(B22*N1y + B26*N1x))) + r22*(N3*detJ*r23*wij*(E45*N1y + E55*N1x) + detJ*r21*wij*(N3x*(B11*N1x + B16*N1y) + N3y*(B16*N1x + B66*N1y)) + detJ*r22*wij*(N3x*(B12*N1y + B16*N1x) + N3y*(B26*N1y + B66*N1x))) + r23*(-0.5*A66*N1x*N3*alphat*detJ*r22*wij/h + 0.5*A66*N1y*N3*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += r31*(-N3*detJ*r23*wij*(E44*N1y + E45*N1x) + detJ*r21*wij*(-N3x*(B16*N1x + B66*N1y) - N3y*(B12*N1x + B26*N1y)) + detJ*r22*wij*(-N3x*(B26*N1y + B66*N1x) - N3y*(B22*N1y + B26*N1x))) + r32*(N3*detJ*r23*wij*(E45*N1y + E55*N1x) + detJ*r21*wij*(N3x*(B11*N1x + B16*N1y) + N3y*(B16*N1x + B66*N1y)) + detJ*r22*wij*(N3x*(B12*N1y + B16*N1x) + N3y*(B26*N1y + B66*N1x))) + r33*(-0.5*A66*N1x*N3*alphat*detJ*r22*wij/h + 0.5*A66*N1y*N3*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += detJ*r13*r23*wij*(Ew*gamma1*gamma4 + N4x*(E45*N1y + E55*N1x) + N4y*(E44*N1y + E45*N1x)) + r11*(detJ*r21*wij*(0.25*A66*N1y*N4y*alphat/h + Eu*gamma1*gamma4 + N4x*(A11*N1x + A16*N1y) + N4y*(A16*N1x + A66*N1y)) + detJ*r22*wij*(-0.25*A66*N1x*N4y*alphat/h + N4x*(A12*N1y + A16*N1x) + N4y*(A26*N1y + A66*N1x))) + r12*(detJ*r21*wij*(-0.25*A66*N1y*N4x*alphat/h + N4x*(A16*N1x + A66*N1y) + N4y*(A12*N1x + A26*N1y)) + detJ*r22*wij*(0.25*A66*N1x*N4x*alphat/h + Ev*gamma1*gamma4 + N4x*(A26*N1y + A66*N1x) + N4y*(A22*N1y + A26*N1x)))
            k += 1
            KC0v[k] += detJ*r23**2*wij*(Ew*gamma1*gamma4 + N4x*(E45*N1y + E55*N1x) + N4y*(E44*N1y + E45*N1x)) + r21*(detJ*r21*wij*(0.25*A66*N1y*N4y*alphat/h + Eu*gamma1*gamma4 + N4x*(A11*N1x + A16*N1y) + N4y*(A16*N1x + A66*N1y)) + detJ*r22*wij*(-0.25*A66*N1x*N4y*alphat/h + N4x*(A12*N1y + A16*N1x) + N4y*(A26*N1y + A66*N1x))) + r22*(detJ*r21*wij*(-0.25*A66*N1y*N4x*alphat/h + N4x*(A16*N1x + A66*N1y) + N4y*(A12*N1x + A26*N1y)) + detJ*r22*wij*(0.25*A66*N1x*N4x*alphat/h + Ev*gamma1*gamma4 + N4x*(A26*N1y + A66*N1x) + N4y*(A22*N1y + A26*N1x)))
            k += 1
            KC0v[k] += detJ*r23*r33*wij*(Ew*gamma1*gamma4 + N4x*(E45*N1y + E55*N1x) + N4y*(E44*N1y + E45*N1x)) + r31*(detJ*r21*wij*(0.25*A66*N1y*N4y*alphat/h + Eu*gamma1*gamma4 + N4x*(A11*N1x + A16*N1y) + N4y*(A16*N1x + A66*N1y)) + detJ*r22*wij*(-0.25*A66*N1x*N4y*alphat/h + N4x*(A12*N1y + A16*N1x) + N4y*(A26*N1y + A66*N1x))) + r32*(detJ*r21*wij*(-0.25*A66*N1y*N4x*alphat/h + N4x*(A16*N1x + A66*N1y) + N4y*(A12*N1x + A26*N1y)) + detJ*r22*wij*(0.25*A66*N1x*N4x*alphat/h + Ev*gamma1*gamma4 + N4x*(A26*N1y + A66*N1x) + N4y*(A22*N1y + A26*N1x)))
            k += 1
            KC0v[k] += r11*(-N4*detJ*r23*wij*(E44*N1y + E45*N1x) + detJ*r21*wij*(-N4x*(B16*N1x + B66*N1y) - N4y*(B12*N1x + B26*N1y)) + detJ*r22*wij*(-N4x*(B26*N1y + B66*N1x) - N4y*(B22*N1y + B26*N1x))) + r12*(N4*detJ*r23*wij*(E45*N1y + E55*N1x) + detJ*r21*wij*(N4x*(B11*N1x + B16*N1y) + N4y*(B16*N1x + B66*N1y)) + detJ*r22*wij*(N4x*(B12*N1y + B16*N1x) + N4y*(B26*N1y + B66*N1x))) + r13*(-0.5*A66*N1x*N4*alphat*detJ*r22*wij/h + 0.5*A66*N1y*N4*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += r21*(-N4*detJ*r23*wij*(E44*N1y + E45*N1x) + detJ*r21*wij*(-N4x*(B16*N1x + B66*N1y) - N4y*(B12*N1x + B26*N1y)) + detJ*r22*wij*(-N4x*(B26*N1y + B66*N1x) - N4y*(B22*N1y + B26*N1x))) + r22*(N4*detJ*r23*wij*(E45*N1y + E55*N1x) + detJ*r21*wij*(N4x*(B11*N1x + B16*N1y) + N4y*(B16*N1x + B66*N1y)) + detJ*r22*wij*(N4x*(B12*N1y + B16*N1x) + N4y*(B26*N1y + B66*N1x))) + r23*(-0.5*A66*N1x*N4*alphat*detJ*r22*wij/h + 0.5*A66*N1y*N4*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += r31*(-N4*detJ*r23*wij*(E44*N1y + E45*N1x) + detJ*r21*wij*(-N4x*(B16*N1x + B66*N1y) - N4y*(B12*N1x + B26*N1y)) + detJ*r22*wij*(-N4x*(B26*N1y + B66*N1x) - N4y*(B22*N1y + B26*N1x))) + r32*(N4*detJ*r23*wij*(E45*N1y + E55*N1x) + detJ*r21*wij*(N4x*(B11*N1x + B16*N1y) + N4y*(B16*N1x + B66*N1y)) + detJ*r22*wij*(N4x*(B12*N1y + B16*N1x) + N4y*(B26*N1y + B66*N1x))) + r33*(-0.5*A66*N1x*N4*alphat*detJ*r22*wij/h + 0.5*A66*N1y*N4*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += detJ*r13*r33*wij*(Ew*gamma1**2 + N1x*(E45*N1y + E55*N1x) + N1y*(E44*N1y + E45*N1x)) + r11*(detJ*r31*wij*(0.25*A66*N1y**2*alphat/h + Eu*gamma1**2 + N1x*(A11*N1x + A16*N1y) + N1y*(A16*N1x + A66*N1y)) + detJ*r32*wij*(-0.25*A66*N1x*N1y*alphat/h + N1x*(A12*N1y + A16*N1x) + N1y*(A26*N1y + A66*N1x))) + r12*(detJ*r31*wij*(-0.25*A66*N1x*N1y*alphat/h + N1x*(A16*N1x + A66*N1y) + N1y*(A12*N1x + A26*N1y)) + detJ*r32*wij*(0.25*A66*N1x**2*alphat/h + Ev*gamma1**2 + N1x*(A26*N1y + A66*N1x) + N1y*(A22*N1y + A26*N1x)))
            k += 1
            KC0v[k] += detJ*r23*r33*wij*(Ew*gamma1**2 + N1x*(E45*N1y + E55*N1x) + N1y*(E44*N1y + E45*N1x)) + r21*(detJ*r31*wij*(0.25*A66*N1y**2*alphat/h + Eu*gamma1**2 + N1x*(A11*N1x + A16*N1y) + N1y*(A16*N1x + A66*N1y)) + detJ*r32*wij*(-0.25*A66*N1x*N1y*alphat/h + N1x*(A12*N1y + A16*N1x) + N1y*(A26*N1y + A66*N1x))) + r22*(detJ*r31*wij*(-0.25*A66*N1x*N1y*alphat/h + N1x*(A16*N1x + A66*N1y) + N1y*(A12*N1x + A26*N1y)) + detJ*r32*wij*(0.25*A66*N1x**2*alphat/h + Ev*gamma1**2 + N1x*(A26*N1y + A66*N1x) + N1y*(A22*N1y + A26*N1x)))
            k += 1
            KC0v[k] += detJ*r33**2*wij*(Ew*gamma1**2 + N1x*(E45*N1y + E55*N1x) + N1y*(E44*N1y + E45*N1x)) + r31*(detJ*r31*wij*(0.25*A66*N1y**2*alphat/h + Eu*gamma1**2 + N1x*(A11*N1x + A16*N1y) + N1y*(A16*N1x + A66*N1y)) + detJ*r32*wij*(-0.25*A66*N1x*N1y*alphat/h + N1x*(A12*N1y + A16*N1x) + N1y*(A26*N1y + A66*N1x))) + r32*(detJ*r31*wij*(-0.25*A66*N1x*N1y*alphat/h + N1x*(A16*N1x + A66*N1y) + N1y*(A12*N1x + A26*N1y)) + detJ*r32*wij*(0.25*A66*N1x**2*alphat/h + Ev*gamma1**2 + N1x*(A26*N1y + A66*N1x) + N1y*(A22*N1y + A26*N1x)))
            k += 1
            KC0v[k] += r11*(-N1*detJ*r33*wij*(E44*N1y + E45*N1x) + detJ*r31*wij*(-N1x*(B16*N1x + B66*N1y) - N1y*(B12*N1x + B26*N1y)) + detJ*r32*wij*(-N1x*(B26*N1y + B66*N1x) - N1y*(B22*N1y + B26*N1x))) + r12*(N1*detJ*r33*wij*(E45*N1y + E55*N1x) + detJ*r31*wij*(N1x*(B11*N1x + B16*N1y) + N1y*(B16*N1x + B66*N1y)) + detJ*r32*wij*(N1x*(B12*N1y + B16*N1x) + N1y*(B26*N1y + B66*N1x))) + r13*(-0.5*A66*N1*N1x*alphat*detJ*r32*wij/h + 0.5*A66*N1*N1y*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += r21*(-N1*detJ*r33*wij*(E44*N1y + E45*N1x) + detJ*r31*wij*(-N1x*(B16*N1x + B66*N1y) - N1y*(B12*N1x + B26*N1y)) + detJ*r32*wij*(-N1x*(B26*N1y + B66*N1x) - N1y*(B22*N1y + B26*N1x))) + r22*(N1*detJ*r33*wij*(E45*N1y + E55*N1x) + detJ*r31*wij*(N1x*(B11*N1x + B16*N1y) + N1y*(B16*N1x + B66*N1y)) + detJ*r32*wij*(N1x*(B12*N1y + B16*N1x) + N1y*(B26*N1y + B66*N1x))) + r23*(-0.5*A66*N1*N1x*alphat*detJ*r32*wij/h + 0.5*A66*N1*N1y*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += r31*(-N1*detJ*r33*wij*(E44*N1y + E45*N1x) + detJ*r31*wij*(-N1x*(B16*N1x + B66*N1y) - N1y*(B12*N1x + B26*N1y)) + detJ*r32*wij*(-N1x*(B26*N1y + B66*N1x) - N1y*(B22*N1y + B26*N1x))) + r32*(N1*detJ*r33*wij*(E45*N1y + E55*N1x) + detJ*r31*wij*(N1x*(B11*N1x + B16*N1y) + N1y*(B16*N1x + B66*N1y)) + detJ*r32*wij*(N1x*(B12*N1y + B16*N1x) + N1y*(B26*N1y + B66*N1x))) + r33*(-0.5*A66*N1*N1x*alphat*detJ*r32*wij/h + 0.5*A66*N1*N1y*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += detJ*r13*r33*wij*(Ew*gamma1*gamma2 + N2x*(E45*N1y + E55*N1x) + N2y*(E44*N1y + E45*N1x)) + r11*(detJ*r31*wij*(0.25*A66*N1y*N2y*alphat/h + Eu*gamma1*gamma2 + N2x*(A11*N1x + A16*N1y) + N2y*(A16*N1x + A66*N1y)) + detJ*r32*wij*(-0.25*A66*N1x*N2y*alphat/h + N2x*(A12*N1y + A16*N1x) + N2y*(A26*N1y + A66*N1x))) + r12*(detJ*r31*wij*(-0.25*A66*N1y*N2x*alphat/h + N2x*(A16*N1x + A66*N1y) + N2y*(A12*N1x + A26*N1y)) + detJ*r32*wij*(0.25*A66*N1x*N2x*alphat/h + Ev*gamma1*gamma2 + N2x*(A26*N1y + A66*N1x) + N2y*(A22*N1y + A26*N1x)))
            k += 1
            KC0v[k] += detJ*r23*r33*wij*(Ew*gamma1*gamma2 + N2x*(E45*N1y + E55*N1x) + N2y*(E44*N1y + E45*N1x)) + r21*(detJ*r31*wij*(0.25*A66*N1y*N2y*alphat/h + Eu*gamma1*gamma2 + N2x*(A11*N1x + A16*N1y) + N2y*(A16*N1x + A66*N1y)) + detJ*r32*wij*(-0.25*A66*N1x*N2y*alphat/h + N2x*(A12*N1y + A16*N1x) + N2y*(A26*N1y + A66*N1x))) + r22*(detJ*r31*wij*(-0.25*A66*N1y*N2x*alphat/h + N2x*(A16*N1x + A66*N1y) + N2y*(A12*N1x + A26*N1y)) + detJ*r32*wij*(0.25*A66*N1x*N2x*alphat/h + Ev*gamma1*gamma2 + N2x*(A26*N1y + A66*N1x) + N2y*(A22*N1y + A26*N1x)))
            k += 1
            KC0v[k] += detJ*r33**2*wij*(Ew*gamma1*gamma2 + N2x*(E45*N1y + E55*N1x) + N2y*(E44*N1y + E45*N1x)) + r31*(detJ*r31*wij*(0.25*A66*N1y*N2y*alphat/h + Eu*gamma1*gamma2 + N2x*(A11*N1x + A16*N1y) + N2y*(A16*N1x + A66*N1y)) + detJ*r32*wij*(-0.25*A66*N1x*N2y*alphat/h + N2x*(A12*N1y + A16*N1x) + N2y*(A26*N1y + A66*N1x))) + r32*(detJ*r31*wij*(-0.25*A66*N1y*N2x*alphat/h + N2x*(A16*N1x + A66*N1y) + N2y*(A12*N1x + A26*N1y)) + detJ*r32*wij*(0.25*A66*N1x*N2x*alphat/h + Ev*gamma1*gamma2 + N2x*(A26*N1y + A66*N1x) + N2y*(A22*N1y + A26*N1x)))
            k += 1
            KC0v[k] += r11*(-N2*detJ*r33*wij*(E44*N1y + E45*N1x) + detJ*r31*wij*(-N2x*(B16*N1x + B66*N1y) - N2y*(B12*N1x + B26*N1y)) + detJ*r32*wij*(-N2x*(B26*N1y + B66*N1x) - N2y*(B22*N1y + B26*N1x))) + r12*(N2*detJ*r33*wij*(E45*N1y + E55*N1x) + detJ*r31*wij*(N2x*(B11*N1x + B16*N1y) + N2y*(B16*N1x + B66*N1y)) + detJ*r32*wij*(N2x*(B12*N1y + B16*N1x) + N2y*(B26*N1y + B66*N1x))) + r13*(-0.5*A66*N1x*N2*alphat*detJ*r32*wij/h + 0.5*A66*N1y*N2*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += r21*(-N2*detJ*r33*wij*(E44*N1y + E45*N1x) + detJ*r31*wij*(-N2x*(B16*N1x + B66*N1y) - N2y*(B12*N1x + B26*N1y)) + detJ*r32*wij*(-N2x*(B26*N1y + B66*N1x) - N2y*(B22*N1y + B26*N1x))) + r22*(N2*detJ*r33*wij*(E45*N1y + E55*N1x) + detJ*r31*wij*(N2x*(B11*N1x + B16*N1y) + N2y*(B16*N1x + B66*N1y)) + detJ*r32*wij*(N2x*(B12*N1y + B16*N1x) + N2y*(B26*N1y + B66*N1x))) + r23*(-0.5*A66*N1x*N2*alphat*detJ*r32*wij/h + 0.5*A66*N1y*N2*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += r31*(-N2*detJ*r33*wij*(E44*N1y + E45*N1x) + detJ*r31*wij*(-N2x*(B16*N1x + B66*N1y) - N2y*(B12*N1x + B26*N1y)) + detJ*r32*wij*(-N2x*(B26*N1y + B66*N1x) - N2y*(B22*N1y + B26*N1x))) + r32*(N2*detJ*r33*wij*(E45*N1y + E55*N1x) + detJ*r31*wij*(N2x*(B11*N1x + B16*N1y) + N2y*(B16*N1x + B66*N1y)) + detJ*r32*wij*(N2x*(B12*N1y + B16*N1x) + N2y*(B26*N1y + B66*N1x))) + r33*(-0.5*A66*N1x*N2*alphat*detJ*r32*wij/h + 0.5*A66*N1y*N2*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += detJ*r13*r33*wij*(Ew*gamma1*gamma3 + N3x*(E45*N1y + E55*N1x) + N3y*(E44*N1y + E45*N1x)) + r11*(detJ*r31*wij*(0.25*A66*N1y*N3y*alphat/h + Eu*gamma1*gamma3 + N3x*(A11*N1x + A16*N1y) + N3y*(A16*N1x + A66*N1y)) + detJ*r32*wij*(-0.25*A66*N1x*N3y*alphat/h + N3x*(A12*N1y + A16*N1x) + N3y*(A26*N1y + A66*N1x))) + r12*(detJ*r31*wij*(-0.25*A66*N1y*N3x*alphat/h + N3x*(A16*N1x + A66*N1y) + N3y*(A12*N1x + A26*N1y)) + detJ*r32*wij*(0.25*A66*N1x*N3x*alphat/h + Ev*gamma1*gamma3 + N3x*(A26*N1y + A66*N1x) + N3y*(A22*N1y + A26*N1x)))
            k += 1
            KC0v[k] += detJ*r23*r33*wij*(Ew*gamma1*gamma3 + N3x*(E45*N1y + E55*N1x) + N3y*(E44*N1y + E45*N1x)) + r21*(detJ*r31*wij*(0.25*A66*N1y*N3y*alphat/h + Eu*gamma1*gamma3 + N3x*(A11*N1x + A16*N1y) + N3y*(A16*N1x + A66*N1y)) + detJ*r32*wij*(-0.25*A66*N1x*N3y*alphat/h + N3x*(A12*N1y + A16*N1x) + N3y*(A26*N1y + A66*N1x))) + r22*(detJ*r31*wij*(-0.25*A66*N1y*N3x*alphat/h + N3x*(A16*N1x + A66*N1y) + N3y*(A12*N1x + A26*N1y)) + detJ*r32*wij*(0.25*A66*N1x*N3x*alphat/h + Ev*gamma1*gamma3 + N3x*(A26*N1y + A66*N1x) + N3y*(A22*N1y + A26*N1x)))
            k += 1
            KC0v[k] += detJ*r33**2*wij*(Ew*gamma1*gamma3 + N3x*(E45*N1y + E55*N1x) + N3y*(E44*N1y + E45*N1x)) + r31*(detJ*r31*wij*(0.25*A66*N1y*N3y*alphat/h + Eu*gamma1*gamma3 + N3x*(A11*N1x + A16*N1y) + N3y*(A16*N1x + A66*N1y)) + detJ*r32*wij*(-0.25*A66*N1x*N3y*alphat/h + N3x*(A12*N1y + A16*N1x) + N3y*(A26*N1y + A66*N1x))) + r32*(detJ*r31*wij*(-0.25*A66*N1y*N3x*alphat/h + N3x*(A16*N1x + A66*N1y) + N3y*(A12*N1x + A26*N1y)) + detJ*r32*wij*(0.25*A66*N1x*N3x*alphat/h + Ev*gamma1*gamma3 + N3x*(A26*N1y + A66*N1x) + N3y*(A22*N1y + A26*N1x)))
            k += 1
            KC0v[k] += r11*(-N3*detJ*r33*wij*(E44*N1y + E45*N1x) + detJ*r31*wij*(-N3x*(B16*N1x + B66*N1y) - N3y*(B12*N1x + B26*N1y)) + detJ*r32*wij*(-N3x*(B26*N1y + B66*N1x) - N3y*(B22*N1y + B26*N1x))) + r12*(N3*detJ*r33*wij*(E45*N1y + E55*N1x) + detJ*r31*wij*(N3x*(B11*N1x + B16*N1y) + N3y*(B16*N1x + B66*N1y)) + detJ*r32*wij*(N3x*(B12*N1y + B16*N1x) + N3y*(B26*N1y + B66*N1x))) + r13*(-0.5*A66*N1x*N3*alphat*detJ*r32*wij/h + 0.5*A66*N1y*N3*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += r21*(-N3*detJ*r33*wij*(E44*N1y + E45*N1x) + detJ*r31*wij*(-N3x*(B16*N1x + B66*N1y) - N3y*(B12*N1x + B26*N1y)) + detJ*r32*wij*(-N3x*(B26*N1y + B66*N1x) - N3y*(B22*N1y + B26*N1x))) + r22*(N3*detJ*r33*wij*(E45*N1y + E55*N1x) + detJ*r31*wij*(N3x*(B11*N1x + B16*N1y) + N3y*(B16*N1x + B66*N1y)) + detJ*r32*wij*(N3x*(B12*N1y + B16*N1x) + N3y*(B26*N1y + B66*N1x))) + r23*(-0.5*A66*N1x*N3*alphat*detJ*r32*wij/h + 0.5*A66*N1y*N3*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += r31*(-N3*detJ*r33*wij*(E44*N1y + E45*N1x) + detJ*r31*wij*(-N3x*(B16*N1x + B66*N1y) - N3y*(B12*N1x + B26*N1y)) + detJ*r32*wij*(-N3x*(B26*N1y + B66*N1x) - N3y*(B22*N1y + B26*N1x))) + r32*(N3*detJ*r33*wij*(E45*N1y + E55*N1x) + detJ*r31*wij*(N3x*(B11*N1x + B16*N1y) + N3y*(B16*N1x + B66*N1y)) + detJ*r32*wij*(N3x*(B12*N1y + B16*N1x) + N3y*(B26*N1y + B66*N1x))) + r33*(-0.5*A66*N1x*N3*alphat*detJ*r32*wij/h + 0.5*A66*N1y*N3*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += detJ*r13*r33*wij*(Ew*gamma1*gamma4 + N4x*(E45*N1y + E55*N1x) + N4y*(E44*N1y + E45*N1x)) + r11*(detJ*r31*wij*(0.25*A66*N1y*N4y*alphat/h + Eu*gamma1*gamma4 + N4x*(A11*N1x + A16*N1y) + N4y*(A16*N1x + A66*N1y)) + detJ*r32*wij*(-0.25*A66*N1x*N4y*alphat/h + N4x*(A12*N1y + A16*N1x) + N4y*(A26*N1y + A66*N1x))) + r12*(detJ*r31*wij*(-0.25*A66*N1y*N4x*alphat/h + N4x*(A16*N1x + A66*N1y) + N4y*(A12*N1x + A26*N1y)) + detJ*r32*wij*(0.25*A66*N1x*N4x*alphat/h + Ev*gamma1*gamma4 + N4x*(A26*N1y + A66*N1x) + N4y*(A22*N1y + A26*N1x)))
            k += 1
            KC0v[k] += detJ*r23*r33*wij*(Ew*gamma1*gamma4 + N4x*(E45*N1y + E55*N1x) + N4y*(E44*N1y + E45*N1x)) + r21*(detJ*r31*wij*(0.25*A66*N1y*N4y*alphat/h + Eu*gamma1*gamma4 + N4x*(A11*N1x + A16*N1y) + N4y*(A16*N1x + A66*N1y)) + detJ*r32*wij*(-0.25*A66*N1x*N4y*alphat/h + N4x*(A12*N1y + A16*N1x) + N4y*(A26*N1y + A66*N1x))) + r22*(detJ*r31*wij*(-0.25*A66*N1y*N4x*alphat/h + N4x*(A16*N1x + A66*N1y) + N4y*(A12*N1x + A26*N1y)) + detJ*r32*wij*(0.25*A66*N1x*N4x*alphat/h + Ev*gamma1*gamma4 + N4x*(A26*N1y + A66*N1x) + N4y*(A22*N1y + A26*N1x)))
            k += 1
            KC0v[k] += detJ*r33**2*wij*(Ew*gamma1*gamma4 + N4x*(E45*N1y + E55*N1x) + N4y*(E44*N1y + E45*N1x)) + r31*(detJ*r31*wij*(0.25*A66*N1y*N4y*alphat/h + Eu*gamma1*gamma4 + N4x*(A11*N1x + A16*N1y) + N4y*(A16*N1x + A66*N1y)) + detJ*r32*wij*(-0.25*A66*N1x*N4y*alphat/h + N4x*(A12*N1y + A16*N1x) + N4y*(A26*N1y + A66*N1x))) + r32*(detJ*r31*wij*(-0.25*A66*N1y*N4x*alphat/h + N4x*(A16*N1x + A66*N1y) + N4y*(A12*N1x + A26*N1y)) + detJ*r32*wij*(0.25*A66*N1x*N4x*alphat/h + Ev*gamma1*gamma4 + N4x*(A26*N1y + A66*N1x) + N4y*(A22*N1y + A26*N1x)))
            k += 1
            KC0v[k] += r11*(-N4*detJ*r33*wij*(E44*N1y + E45*N1x) + detJ*r31*wij*(-N4x*(B16*N1x + B66*N1y) - N4y*(B12*N1x + B26*N1y)) + detJ*r32*wij*(-N4x*(B26*N1y + B66*N1x) - N4y*(B22*N1y + B26*N1x))) + r12*(N4*detJ*r33*wij*(E45*N1y + E55*N1x) + detJ*r31*wij*(N4x*(B11*N1x + B16*N1y) + N4y*(B16*N1x + B66*N1y)) + detJ*r32*wij*(N4x*(B12*N1y + B16*N1x) + N4y*(B26*N1y + B66*N1x))) + r13*(-0.5*A66*N1x*N4*alphat*detJ*r32*wij/h + 0.5*A66*N1y*N4*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += r21*(-N4*detJ*r33*wij*(E44*N1y + E45*N1x) + detJ*r31*wij*(-N4x*(B16*N1x + B66*N1y) - N4y*(B12*N1x + B26*N1y)) + detJ*r32*wij*(-N4x*(B26*N1y + B66*N1x) - N4y*(B22*N1y + B26*N1x))) + r22*(N4*detJ*r33*wij*(E45*N1y + E55*N1x) + detJ*r31*wij*(N4x*(B11*N1x + B16*N1y) + N4y*(B16*N1x + B66*N1y)) + detJ*r32*wij*(N4x*(B12*N1y + B16*N1x) + N4y*(B26*N1y + B66*N1x))) + r23*(-0.5*A66*N1x*N4*alphat*detJ*r32*wij/h + 0.5*A66*N1y*N4*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += r31*(-N4*detJ*r33*wij*(E44*N1y + E45*N1x) + detJ*r31*wij*(-N4x*(B16*N1x + B66*N1y) - N4y*(B12*N1x + B26*N1y)) + detJ*r32*wij*(-N4x*(B26*N1y + B66*N1x) - N4y*(B22*N1y + B26*N1x))) + r32*(N4*detJ*r33*wij*(E45*N1y + E55*N1x) + detJ*r31*wij*(N4x*(B11*N1x + B16*N1y) + N4y*(B16*N1x + B66*N1y)) + detJ*r32*wij*(N4x*(B12*N1y + B16*N1x) + N4y*(B26*N1y + B66*N1x))) + r33*(-0.5*A66*N1x*N4*alphat*detJ*r32*wij/h + 0.5*A66*N1y*N4*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += r11*(0.5*A66*N1*N1y*alphat*detJ*r13*wij/h + detJ*r11*wij*(N1x*(-B12*N1y - B16*N1x) + N1y*(-B26*N1y - B66*N1x)) + detJ*r12*wij*(N1x*(B11*N1x + B16*N1y) + N1y*(B16*N1x + B66*N1y))) + r12*(-0.5*A66*N1*N1x*alphat*detJ*r13*wij/h + detJ*r11*wij*(N1x*(-B26*N1y - B66*N1x) + N1y*(-B22*N1y - B26*N1x)) + detJ*r12*wij*(N1x*(B16*N1x + B66*N1y) + N1y*(B12*N1x + B26*N1y))) + r13*(detJ*r11*wij*(-E44*N1*N1y - E45*N1*N1x) + detJ*r12*wij*(E45*N1*N1y + E55*N1*N1x))
            k += 1
            KC0v[k] += r21*(0.5*A66*N1*N1y*alphat*detJ*r13*wij/h + detJ*r11*wij*(N1x*(-B12*N1y - B16*N1x) + N1y*(-B26*N1y - B66*N1x)) + detJ*r12*wij*(N1x*(B11*N1x + B16*N1y) + N1y*(B16*N1x + B66*N1y))) + r22*(-0.5*A66*N1*N1x*alphat*detJ*r13*wij/h + detJ*r11*wij*(N1x*(-B26*N1y - B66*N1x) + N1y*(-B22*N1y - B26*N1x)) + detJ*r12*wij*(N1x*(B16*N1x + B66*N1y) + N1y*(B12*N1x + B26*N1y))) + r23*(detJ*r11*wij*(-E44*N1*N1y - E45*N1*N1x) + detJ*r12*wij*(E45*N1*N1y + E55*N1*N1x))
            k += 1
            KC0v[k] += r31*(0.5*A66*N1*N1y*alphat*detJ*r13*wij/h + detJ*r11*wij*(N1x*(-B12*N1y - B16*N1x) + N1y*(-B26*N1y - B66*N1x)) + detJ*r12*wij*(N1x*(B11*N1x + B16*N1y) + N1y*(B16*N1x + B66*N1y))) + r32*(-0.5*A66*N1*N1x*alphat*detJ*r13*wij/h + detJ*r11*wij*(N1x*(-B26*N1y - B66*N1x) + N1y*(-B22*N1y - B26*N1x)) + detJ*r12*wij*(N1x*(B16*N1x + B66*N1y) + N1y*(B12*N1x + B26*N1y))) + r33*(detJ*r11*wij*(-E44*N1*N1y - E45*N1*N1x) + detJ*r12*wij*(E45*N1*N1y + E55*N1*N1x))
            k += 1
            KC0v[k] += A66*N1**2*alphat*detJ*r13**2*wij/h + r11*(detJ*r11*wij*(E44*N1**2 + Erx*gamma1**2 - N1x*(-D26*N1y - D66*N1x) - N1y*(-D22*N1y - D26*N1x)) + detJ*r12*wij*(-E45*N1**2 - N1x*(D16*N1x + D66*N1y) - N1y*(D12*N1x + D26*N1y))) + r12*(detJ*r11*wij*(-E45*N1**2 + N1x*(-D12*N1y - D16*N1x) + N1y*(-D26*N1y - D66*N1x)) + detJ*r12*wij*(E55*N1**2 + Ery*gamma1**2 + N1x*(D11*N1x + D16*N1y) + N1y*(D16*N1x + D66*N1y)))
            k += 1
            KC0v[k] += A66*N1**2*alphat*detJ*r13*r23*wij/h + r21*(detJ*r11*wij*(E44*N1**2 + Erx*gamma1**2 - N1x*(-D26*N1y - D66*N1x) - N1y*(-D22*N1y - D26*N1x)) + detJ*r12*wij*(-E45*N1**2 - N1x*(D16*N1x + D66*N1y) - N1y*(D12*N1x + D26*N1y))) + r22*(detJ*r11*wij*(-E45*N1**2 + N1x*(-D12*N1y - D16*N1x) + N1y*(-D26*N1y - D66*N1x)) + detJ*r12*wij*(E55*N1**2 + Ery*gamma1**2 + N1x*(D11*N1x + D16*N1y) + N1y*(D16*N1x + D66*N1y)))
            k += 1
            KC0v[k] += A66*N1**2*alphat*detJ*r13*r33*wij/h + r31*(detJ*r11*wij*(E44*N1**2 + Erx*gamma1**2 - N1x*(-D26*N1y - D66*N1x) - N1y*(-D22*N1y - D26*N1x)) + detJ*r12*wij*(-E45*N1**2 - N1x*(D16*N1x + D66*N1y) - N1y*(D12*N1x + D26*N1y))) + r32*(detJ*r11*wij*(-E45*N1**2 + N1x*(-D12*N1y - D16*N1x) + N1y*(-D26*N1y - D66*N1x)) + detJ*r12*wij*(E55*N1**2 + Ery*gamma1**2 + N1x*(D11*N1x + D16*N1y) + N1y*(D16*N1x + D66*N1y)))
            k += 1
            KC0v[k] += r11*(0.5*A66*N1*N2y*alphat*detJ*r13*wij/h + detJ*r11*wij*(N2x*(-B12*N1y - B16*N1x) + N2y*(-B26*N1y - B66*N1x)) + detJ*r12*wij*(N2x*(B11*N1x + B16*N1y) + N2y*(B16*N1x + B66*N1y))) + r12*(-0.5*A66*N1*N2x*alphat*detJ*r13*wij/h + detJ*r11*wij*(N2x*(-B26*N1y - B66*N1x) + N2y*(-B22*N1y - B26*N1x)) + detJ*r12*wij*(N2x*(B16*N1x + B66*N1y) + N2y*(B12*N1x + B26*N1y))) + r13*(detJ*r11*wij*(-E44*N1*N2y - E45*N1*N2x) + detJ*r12*wij*(E45*N1*N2y + E55*N1*N2x))
            k += 1
            KC0v[k] += r21*(0.5*A66*N1*N2y*alphat*detJ*r13*wij/h + detJ*r11*wij*(N2x*(-B12*N1y - B16*N1x) + N2y*(-B26*N1y - B66*N1x)) + detJ*r12*wij*(N2x*(B11*N1x + B16*N1y) + N2y*(B16*N1x + B66*N1y))) + r22*(-0.5*A66*N1*N2x*alphat*detJ*r13*wij/h + detJ*r11*wij*(N2x*(-B26*N1y - B66*N1x) + N2y*(-B22*N1y - B26*N1x)) + detJ*r12*wij*(N2x*(B16*N1x + B66*N1y) + N2y*(B12*N1x + B26*N1y))) + r23*(detJ*r11*wij*(-E44*N1*N2y - E45*N1*N2x) + detJ*r12*wij*(E45*N1*N2y + E55*N1*N2x))
            k += 1
            KC0v[k] += r31*(0.5*A66*N1*N2y*alphat*detJ*r13*wij/h + detJ*r11*wij*(N2x*(-B12*N1y - B16*N1x) + N2y*(-B26*N1y - B66*N1x)) + detJ*r12*wij*(N2x*(B11*N1x + B16*N1y) + N2y*(B16*N1x + B66*N1y))) + r32*(-0.5*A66*N1*N2x*alphat*detJ*r13*wij/h + detJ*r11*wij*(N2x*(-B26*N1y - B66*N1x) + N2y*(-B22*N1y - B26*N1x)) + detJ*r12*wij*(N2x*(B16*N1x + B66*N1y) + N2y*(B12*N1x + B26*N1y))) + r33*(detJ*r11*wij*(-E44*N1*N2y - E45*N1*N2x) + detJ*r12*wij*(E45*N1*N2y + E55*N1*N2x))
            k += 1
            KC0v[k] += A66*N1*N2*alphat*detJ*r13**2*wij/h + r11*(detJ*r11*wij*(E44*N1*N2 + Erx*gamma1*gamma2 - N2x*(-D26*N1y - D66*N1x) - N2y*(-D22*N1y - D26*N1x)) + detJ*r12*wij*(-E45*N1*N2 - N2x*(D16*N1x + D66*N1y) - N2y*(D12*N1x + D26*N1y))) + r12*(detJ*r11*wij*(-E45*N1*N2 + N2x*(-D12*N1y - D16*N1x) + N2y*(-D26*N1y - D66*N1x)) + detJ*r12*wij*(E55*N1*N2 + Ery*gamma1*gamma2 + N2x*(D11*N1x + D16*N1y) + N2y*(D16*N1x + D66*N1y)))
            k += 1
            KC0v[k] += A66*N1*N2*alphat*detJ*r13*r23*wij/h + r21*(detJ*r11*wij*(E44*N1*N2 + Erx*gamma1*gamma2 - N2x*(-D26*N1y - D66*N1x) - N2y*(-D22*N1y - D26*N1x)) + detJ*r12*wij*(-E45*N1*N2 - N2x*(D16*N1x + D66*N1y) - N2y*(D12*N1x + D26*N1y))) + r22*(detJ*r11*wij*(-E45*N1*N2 + N2x*(-D12*N1y - D16*N1x) + N2y*(-D26*N1y - D66*N1x)) + detJ*r12*wij*(E55*N1*N2 + Ery*gamma1*gamma2 + N2x*(D11*N1x + D16*N1y) + N2y*(D16*N1x + D66*N1y)))
            k += 1
            KC0v[k] += A66*N1*N2*alphat*detJ*r13*r33*wij/h + r31*(detJ*r11*wij*(E44*N1*N2 + Erx*gamma1*gamma2 - N2x*(-D26*N1y - D66*N1x) - N2y*(-D22*N1y - D26*N1x)) + detJ*r12*wij*(-E45*N1*N2 - N2x*(D16*N1x + D66*N1y) - N2y*(D12*N1x + D26*N1y))) + r32*(detJ*r11*wij*(-E45*N1*N2 + N2x*(-D12*N1y - D16*N1x) + N2y*(-D26*N1y - D66*N1x)) + detJ*r12*wij*(E55*N1*N2 + Ery*gamma1*gamma2 + N2x*(D11*N1x + D16*N1y) + N2y*(D16*N1x + D66*N1y)))
            k += 1
            KC0v[k] += r11*(0.5*A66*N1*N3y*alphat*detJ*r13*wij/h + detJ*r11*wij*(N3x*(-B12*N1y - B16*N1x) + N3y*(-B26*N1y - B66*N1x)) + detJ*r12*wij*(N3x*(B11*N1x + B16*N1y) + N3y*(B16*N1x + B66*N1y))) + r12*(-0.5*A66*N1*N3x*alphat*detJ*r13*wij/h + detJ*r11*wij*(N3x*(-B26*N1y - B66*N1x) + N3y*(-B22*N1y - B26*N1x)) + detJ*r12*wij*(N3x*(B16*N1x + B66*N1y) + N3y*(B12*N1x + B26*N1y))) + r13*(detJ*r11*wij*(-E44*N1*N3y - E45*N1*N3x) + detJ*r12*wij*(E45*N1*N3y + E55*N1*N3x))
            k += 1
            KC0v[k] += r21*(0.5*A66*N1*N3y*alphat*detJ*r13*wij/h + detJ*r11*wij*(N3x*(-B12*N1y - B16*N1x) + N3y*(-B26*N1y - B66*N1x)) + detJ*r12*wij*(N3x*(B11*N1x + B16*N1y) + N3y*(B16*N1x + B66*N1y))) + r22*(-0.5*A66*N1*N3x*alphat*detJ*r13*wij/h + detJ*r11*wij*(N3x*(-B26*N1y - B66*N1x) + N3y*(-B22*N1y - B26*N1x)) + detJ*r12*wij*(N3x*(B16*N1x + B66*N1y) + N3y*(B12*N1x + B26*N1y))) + r23*(detJ*r11*wij*(-E44*N1*N3y - E45*N1*N3x) + detJ*r12*wij*(E45*N1*N3y + E55*N1*N3x))
            k += 1
            KC0v[k] += r31*(0.5*A66*N1*N3y*alphat*detJ*r13*wij/h + detJ*r11*wij*(N3x*(-B12*N1y - B16*N1x) + N3y*(-B26*N1y - B66*N1x)) + detJ*r12*wij*(N3x*(B11*N1x + B16*N1y) + N3y*(B16*N1x + B66*N1y))) + r32*(-0.5*A66*N1*N3x*alphat*detJ*r13*wij/h + detJ*r11*wij*(N3x*(-B26*N1y - B66*N1x) + N3y*(-B22*N1y - B26*N1x)) + detJ*r12*wij*(N3x*(B16*N1x + B66*N1y) + N3y*(B12*N1x + B26*N1y))) + r33*(detJ*r11*wij*(-E44*N1*N3y - E45*N1*N3x) + detJ*r12*wij*(E45*N1*N3y + E55*N1*N3x))
            k += 1
            KC0v[k] += A66*N1*N3*alphat*detJ*r13**2*wij/h + r11*(detJ*r11*wij*(E44*N1*N3 + Erx*gamma1*gamma3 - N3x*(-D26*N1y - D66*N1x) - N3y*(-D22*N1y - D26*N1x)) + detJ*r12*wij*(-E45*N1*N3 - N3x*(D16*N1x + D66*N1y) - N3y*(D12*N1x + D26*N1y))) + r12*(detJ*r11*wij*(-E45*N1*N3 + N3x*(-D12*N1y - D16*N1x) + N3y*(-D26*N1y - D66*N1x)) + detJ*r12*wij*(E55*N1*N3 + Ery*gamma1*gamma3 + N3x*(D11*N1x + D16*N1y) + N3y*(D16*N1x + D66*N1y)))
            k += 1
            KC0v[k] += A66*N1*N3*alphat*detJ*r13*r23*wij/h + r21*(detJ*r11*wij*(E44*N1*N3 + Erx*gamma1*gamma3 - N3x*(-D26*N1y - D66*N1x) - N3y*(-D22*N1y - D26*N1x)) + detJ*r12*wij*(-E45*N1*N3 - N3x*(D16*N1x + D66*N1y) - N3y*(D12*N1x + D26*N1y))) + r22*(detJ*r11*wij*(-E45*N1*N3 + N3x*(-D12*N1y - D16*N1x) + N3y*(-D26*N1y - D66*N1x)) + detJ*r12*wij*(E55*N1*N3 + Ery*gamma1*gamma3 + N3x*(D11*N1x + D16*N1y) + N3y*(D16*N1x + D66*N1y)))
            k += 1
            KC0v[k] += A66*N1*N3*alphat*detJ*r13*r33*wij/h + r31*(detJ*r11*wij*(E44*N1*N3 + Erx*gamma1*gamma3 - N3x*(-D26*N1y - D66*N1x) - N3y*(-D22*N1y - D26*N1x)) + detJ*r12*wij*(-E45*N1*N3 - N3x*(D16*N1x + D66*N1y) - N3y*(D12*N1x + D26*N1y))) + r32*(detJ*r11*wij*(-E45*N1*N3 + N3x*(-D12*N1y - D16*N1x) + N3y*(-D26*N1y - D66*N1x)) + detJ*r12*wij*(E55*N1*N3 + Ery*gamma1*gamma3 + N3x*(D11*N1x + D16*N1y) + N3y*(D16*N1x + D66*N1y)))
            k += 1
            KC0v[k] += r11*(0.5*A66*N1*N4y*alphat*detJ*r13*wij/h + detJ*r11*wij*(N4x*(-B12*N1y - B16*N1x) + N4y*(-B26*N1y - B66*N1x)) + detJ*r12*wij*(N4x*(B11*N1x + B16*N1y) + N4y*(B16*N1x + B66*N1y))) + r12*(-0.5*A66*N1*N4x*alphat*detJ*r13*wij/h + detJ*r11*wij*(N4x*(-B26*N1y - B66*N1x) + N4y*(-B22*N1y - B26*N1x)) + detJ*r12*wij*(N4x*(B16*N1x + B66*N1y) + N4y*(B12*N1x + B26*N1y))) + r13*(detJ*r11*wij*(-E44*N1*N4y - E45*N1*N4x) + detJ*r12*wij*(E45*N1*N4y + E55*N1*N4x))
            k += 1
            KC0v[k] += r21*(0.5*A66*N1*N4y*alphat*detJ*r13*wij/h + detJ*r11*wij*(N4x*(-B12*N1y - B16*N1x) + N4y*(-B26*N1y - B66*N1x)) + detJ*r12*wij*(N4x*(B11*N1x + B16*N1y) + N4y*(B16*N1x + B66*N1y))) + r22*(-0.5*A66*N1*N4x*alphat*detJ*r13*wij/h + detJ*r11*wij*(N4x*(-B26*N1y - B66*N1x) + N4y*(-B22*N1y - B26*N1x)) + detJ*r12*wij*(N4x*(B16*N1x + B66*N1y) + N4y*(B12*N1x + B26*N1y))) + r23*(detJ*r11*wij*(-E44*N1*N4y - E45*N1*N4x) + detJ*r12*wij*(E45*N1*N4y + E55*N1*N4x))
            k += 1
            KC0v[k] += r31*(0.5*A66*N1*N4y*alphat*detJ*r13*wij/h + detJ*r11*wij*(N4x*(-B12*N1y - B16*N1x) + N4y*(-B26*N1y - B66*N1x)) + detJ*r12*wij*(N4x*(B11*N1x + B16*N1y) + N4y*(B16*N1x + B66*N1y))) + r32*(-0.5*A66*N1*N4x*alphat*detJ*r13*wij/h + detJ*r11*wij*(N4x*(-B26*N1y - B66*N1x) + N4y*(-B22*N1y - B26*N1x)) + detJ*r12*wij*(N4x*(B16*N1x + B66*N1y) + N4y*(B12*N1x + B26*N1y))) + r33*(detJ*r11*wij*(-E44*N1*N4y - E45*N1*N4x) + detJ*r12*wij*(E45*N1*N4y + E55*N1*N4x))
            k += 1
            KC0v[k] += A66*N1*N4*alphat*detJ*r13**2*wij/h + r11*(detJ*r11*wij*(E44*N1*N4 + Erx*gamma1*gamma4 - N4x*(-D26*N1y - D66*N1x) - N4y*(-D22*N1y - D26*N1x)) + detJ*r12*wij*(-E45*N1*N4 - N4x*(D16*N1x + D66*N1y) - N4y*(D12*N1x + D26*N1y))) + r12*(detJ*r11*wij*(-E45*N1*N4 + N4x*(-D12*N1y - D16*N1x) + N4y*(-D26*N1y - D66*N1x)) + detJ*r12*wij*(E55*N1*N4 + Ery*gamma1*gamma4 + N4x*(D11*N1x + D16*N1y) + N4y*(D16*N1x + D66*N1y)))
            k += 1
            KC0v[k] += A66*N1*N4*alphat*detJ*r13*r23*wij/h + r21*(detJ*r11*wij*(E44*N1*N4 + Erx*gamma1*gamma4 - N4x*(-D26*N1y - D66*N1x) - N4y*(-D22*N1y - D26*N1x)) + detJ*r12*wij*(-E45*N1*N4 - N4x*(D16*N1x + D66*N1y) - N4y*(D12*N1x + D26*N1y))) + r22*(detJ*r11*wij*(-E45*N1*N4 + N4x*(-D12*N1y - D16*N1x) + N4y*(-D26*N1y - D66*N1x)) + detJ*r12*wij*(E55*N1*N4 + Ery*gamma1*gamma4 + N4x*(D11*N1x + D16*N1y) + N4y*(D16*N1x + D66*N1y)))
            k += 1
            KC0v[k] += A66*N1*N4*alphat*detJ*r13*r33*wij/h + r31*(detJ*r11*wij*(E44*N1*N4 + Erx*gamma1*gamma4 - N4x*(-D26*N1y - D66*N1x) - N4y*(-D22*N1y - D26*N1x)) + detJ*r12*wij*(-E45*N1*N4 - N4x*(D16*N1x + D66*N1y) - N4y*(D12*N1x + D26*N1y))) + r32*(detJ*r11*wij*(-E45*N1*N4 + N4x*(-D12*N1y - D16*N1x) + N4y*(-D26*N1y - D66*N1x)) + detJ*r12*wij*(E55*N1*N4 + Ery*gamma1*gamma4 + N4x*(D11*N1x + D16*N1y) + N4y*(D16*N1x + D66*N1y)))
            k += 1
            KC0v[k] += r11*(0.5*A66*N1*N1y*alphat*detJ*r23*wij/h + detJ*r21*wij*(N1x*(-B12*N1y - B16*N1x) + N1y*(-B26*N1y - B66*N1x)) + detJ*r22*wij*(N1x*(B11*N1x + B16*N1y) + N1y*(B16*N1x + B66*N1y))) + r12*(-0.5*A66*N1*N1x*alphat*detJ*r23*wij/h + detJ*r21*wij*(N1x*(-B26*N1y - B66*N1x) + N1y*(-B22*N1y - B26*N1x)) + detJ*r22*wij*(N1x*(B16*N1x + B66*N1y) + N1y*(B12*N1x + B26*N1y))) + r13*(detJ*r21*wij*(-E44*N1*N1y - E45*N1*N1x) + detJ*r22*wij*(E45*N1*N1y + E55*N1*N1x))
            k += 1
            KC0v[k] += r21*(0.5*A66*N1*N1y*alphat*detJ*r23*wij/h + detJ*r21*wij*(N1x*(-B12*N1y - B16*N1x) + N1y*(-B26*N1y - B66*N1x)) + detJ*r22*wij*(N1x*(B11*N1x + B16*N1y) + N1y*(B16*N1x + B66*N1y))) + r22*(-0.5*A66*N1*N1x*alphat*detJ*r23*wij/h + detJ*r21*wij*(N1x*(-B26*N1y - B66*N1x) + N1y*(-B22*N1y - B26*N1x)) + detJ*r22*wij*(N1x*(B16*N1x + B66*N1y) + N1y*(B12*N1x + B26*N1y))) + r23*(detJ*r21*wij*(-E44*N1*N1y - E45*N1*N1x) + detJ*r22*wij*(E45*N1*N1y + E55*N1*N1x))
            k += 1
            KC0v[k] += r31*(0.5*A66*N1*N1y*alphat*detJ*r23*wij/h + detJ*r21*wij*(N1x*(-B12*N1y - B16*N1x) + N1y*(-B26*N1y - B66*N1x)) + detJ*r22*wij*(N1x*(B11*N1x + B16*N1y) + N1y*(B16*N1x + B66*N1y))) + r32*(-0.5*A66*N1*N1x*alphat*detJ*r23*wij/h + detJ*r21*wij*(N1x*(-B26*N1y - B66*N1x) + N1y*(-B22*N1y - B26*N1x)) + detJ*r22*wij*(N1x*(B16*N1x + B66*N1y) + N1y*(B12*N1x + B26*N1y))) + r33*(detJ*r21*wij*(-E44*N1*N1y - E45*N1*N1x) + detJ*r22*wij*(E45*N1*N1y + E55*N1*N1x))
            k += 1
            KC0v[k] += A66*N1**2*alphat*detJ*r13*r23*wij/h + r11*(detJ*r21*wij*(E44*N1**2 + Erx*gamma1**2 - N1x*(-D26*N1y - D66*N1x) - N1y*(-D22*N1y - D26*N1x)) + detJ*r22*wij*(-E45*N1**2 - N1x*(D16*N1x + D66*N1y) - N1y*(D12*N1x + D26*N1y))) + r12*(detJ*r21*wij*(-E45*N1**2 + N1x*(-D12*N1y - D16*N1x) + N1y*(-D26*N1y - D66*N1x)) + detJ*r22*wij*(E55*N1**2 + Ery*gamma1**2 + N1x*(D11*N1x + D16*N1y) + N1y*(D16*N1x + D66*N1y)))
            k += 1
            KC0v[k] += A66*N1**2*alphat*detJ*r23**2*wij/h + r21*(detJ*r21*wij*(E44*N1**2 + Erx*gamma1**2 - N1x*(-D26*N1y - D66*N1x) - N1y*(-D22*N1y - D26*N1x)) + detJ*r22*wij*(-E45*N1**2 - N1x*(D16*N1x + D66*N1y) - N1y*(D12*N1x + D26*N1y))) + r22*(detJ*r21*wij*(-E45*N1**2 + N1x*(-D12*N1y - D16*N1x) + N1y*(-D26*N1y - D66*N1x)) + detJ*r22*wij*(E55*N1**2 + Ery*gamma1**2 + N1x*(D11*N1x + D16*N1y) + N1y*(D16*N1x + D66*N1y)))
            k += 1
            KC0v[k] += A66*N1**2*alphat*detJ*r23*r33*wij/h + r31*(detJ*r21*wij*(E44*N1**2 + Erx*gamma1**2 - N1x*(-D26*N1y - D66*N1x) - N1y*(-D22*N1y - D26*N1x)) + detJ*r22*wij*(-E45*N1**2 - N1x*(D16*N1x + D66*N1y) - N1y*(D12*N1x + D26*N1y))) + r32*(detJ*r21*wij*(-E45*N1**2 + N1x*(-D12*N1y - D16*N1x) + N1y*(-D26*N1y - D66*N1x)) + detJ*r22*wij*(E55*N1**2 + Ery*gamma1**2 + N1x*(D11*N1x + D16*N1y) + N1y*(D16*N1x + D66*N1y)))
            k += 1
            KC0v[k] += r11*(0.5*A66*N1*N2y*alphat*detJ*r23*wij/h + detJ*r21*wij*(N2x*(-B12*N1y - B16*N1x) + N2y*(-B26*N1y - B66*N1x)) + detJ*r22*wij*(N2x*(B11*N1x + B16*N1y) + N2y*(B16*N1x + B66*N1y))) + r12*(-0.5*A66*N1*N2x*alphat*detJ*r23*wij/h + detJ*r21*wij*(N2x*(-B26*N1y - B66*N1x) + N2y*(-B22*N1y - B26*N1x)) + detJ*r22*wij*(N2x*(B16*N1x + B66*N1y) + N2y*(B12*N1x + B26*N1y))) + r13*(detJ*r21*wij*(-E44*N1*N2y - E45*N1*N2x) + detJ*r22*wij*(E45*N1*N2y + E55*N1*N2x))
            k += 1
            KC0v[k] += r21*(0.5*A66*N1*N2y*alphat*detJ*r23*wij/h + detJ*r21*wij*(N2x*(-B12*N1y - B16*N1x) + N2y*(-B26*N1y - B66*N1x)) + detJ*r22*wij*(N2x*(B11*N1x + B16*N1y) + N2y*(B16*N1x + B66*N1y))) + r22*(-0.5*A66*N1*N2x*alphat*detJ*r23*wij/h + detJ*r21*wij*(N2x*(-B26*N1y - B66*N1x) + N2y*(-B22*N1y - B26*N1x)) + detJ*r22*wij*(N2x*(B16*N1x + B66*N1y) + N2y*(B12*N1x + B26*N1y))) + r23*(detJ*r21*wij*(-E44*N1*N2y - E45*N1*N2x) + detJ*r22*wij*(E45*N1*N2y + E55*N1*N2x))
            k += 1
            KC0v[k] += r31*(0.5*A66*N1*N2y*alphat*detJ*r23*wij/h + detJ*r21*wij*(N2x*(-B12*N1y - B16*N1x) + N2y*(-B26*N1y - B66*N1x)) + detJ*r22*wij*(N2x*(B11*N1x + B16*N1y) + N2y*(B16*N1x + B66*N1y))) + r32*(-0.5*A66*N1*N2x*alphat*detJ*r23*wij/h + detJ*r21*wij*(N2x*(-B26*N1y - B66*N1x) + N2y*(-B22*N1y - B26*N1x)) + detJ*r22*wij*(N2x*(B16*N1x + B66*N1y) + N2y*(B12*N1x + B26*N1y))) + r33*(detJ*r21*wij*(-E44*N1*N2y - E45*N1*N2x) + detJ*r22*wij*(E45*N1*N2y + E55*N1*N2x))
            k += 1
            KC0v[k] += A66*N1*N2*alphat*detJ*r13*r23*wij/h + r11*(detJ*r21*wij*(E44*N1*N2 + Erx*gamma1*gamma2 - N2x*(-D26*N1y - D66*N1x) - N2y*(-D22*N1y - D26*N1x)) + detJ*r22*wij*(-E45*N1*N2 - N2x*(D16*N1x + D66*N1y) - N2y*(D12*N1x + D26*N1y))) + r12*(detJ*r21*wij*(-E45*N1*N2 + N2x*(-D12*N1y - D16*N1x) + N2y*(-D26*N1y - D66*N1x)) + detJ*r22*wij*(E55*N1*N2 + Ery*gamma1*gamma2 + N2x*(D11*N1x + D16*N1y) + N2y*(D16*N1x + D66*N1y)))
            k += 1
            KC0v[k] += A66*N1*N2*alphat*detJ*r23**2*wij/h + r21*(detJ*r21*wij*(E44*N1*N2 + Erx*gamma1*gamma2 - N2x*(-D26*N1y - D66*N1x) - N2y*(-D22*N1y - D26*N1x)) + detJ*r22*wij*(-E45*N1*N2 - N2x*(D16*N1x + D66*N1y) - N2y*(D12*N1x + D26*N1y))) + r22*(detJ*r21*wij*(-E45*N1*N2 + N2x*(-D12*N1y - D16*N1x) + N2y*(-D26*N1y - D66*N1x)) + detJ*r22*wij*(E55*N1*N2 + Ery*gamma1*gamma2 + N2x*(D11*N1x + D16*N1y) + N2y*(D16*N1x + D66*N1y)))
            k += 1
            KC0v[k] += A66*N1*N2*alphat*detJ*r23*r33*wij/h + r31*(detJ*r21*wij*(E44*N1*N2 + Erx*gamma1*gamma2 - N2x*(-D26*N1y - D66*N1x) - N2y*(-D22*N1y - D26*N1x)) + detJ*r22*wij*(-E45*N1*N2 - N2x*(D16*N1x + D66*N1y) - N2y*(D12*N1x + D26*N1y))) + r32*(detJ*r21*wij*(-E45*N1*N2 + N2x*(-D12*N1y - D16*N1x) + N2y*(-D26*N1y - D66*N1x)) + detJ*r22*wij*(E55*N1*N2 + Ery*gamma1*gamma2 + N2x*(D11*N1x + D16*N1y) + N2y*(D16*N1x + D66*N1y)))
            k += 1
            KC0v[k] += r11*(0.5*A66*N1*N3y*alphat*detJ*r23*wij/h + detJ*r21*wij*(N3x*(-B12*N1y - B16*N1x) + N3y*(-B26*N1y - B66*N1x)) + detJ*r22*wij*(N3x*(B11*N1x + B16*N1y) + N3y*(B16*N1x + B66*N1y))) + r12*(-0.5*A66*N1*N3x*alphat*detJ*r23*wij/h + detJ*r21*wij*(N3x*(-B26*N1y - B66*N1x) + N3y*(-B22*N1y - B26*N1x)) + detJ*r22*wij*(N3x*(B16*N1x + B66*N1y) + N3y*(B12*N1x + B26*N1y))) + r13*(detJ*r21*wij*(-E44*N1*N3y - E45*N1*N3x) + detJ*r22*wij*(E45*N1*N3y + E55*N1*N3x))
            k += 1
            KC0v[k] += r21*(0.5*A66*N1*N3y*alphat*detJ*r23*wij/h + detJ*r21*wij*(N3x*(-B12*N1y - B16*N1x) + N3y*(-B26*N1y - B66*N1x)) + detJ*r22*wij*(N3x*(B11*N1x + B16*N1y) + N3y*(B16*N1x + B66*N1y))) + r22*(-0.5*A66*N1*N3x*alphat*detJ*r23*wij/h + detJ*r21*wij*(N3x*(-B26*N1y - B66*N1x) + N3y*(-B22*N1y - B26*N1x)) + detJ*r22*wij*(N3x*(B16*N1x + B66*N1y) + N3y*(B12*N1x + B26*N1y))) + r23*(detJ*r21*wij*(-E44*N1*N3y - E45*N1*N3x) + detJ*r22*wij*(E45*N1*N3y + E55*N1*N3x))
            k += 1
            KC0v[k] += r31*(0.5*A66*N1*N3y*alphat*detJ*r23*wij/h + detJ*r21*wij*(N3x*(-B12*N1y - B16*N1x) + N3y*(-B26*N1y - B66*N1x)) + detJ*r22*wij*(N3x*(B11*N1x + B16*N1y) + N3y*(B16*N1x + B66*N1y))) + r32*(-0.5*A66*N1*N3x*alphat*detJ*r23*wij/h + detJ*r21*wij*(N3x*(-B26*N1y - B66*N1x) + N3y*(-B22*N1y - B26*N1x)) + detJ*r22*wij*(N3x*(B16*N1x + B66*N1y) + N3y*(B12*N1x + B26*N1y))) + r33*(detJ*r21*wij*(-E44*N1*N3y - E45*N1*N3x) + detJ*r22*wij*(E45*N1*N3y + E55*N1*N3x))
            k += 1
            KC0v[k] += A66*N1*N3*alphat*detJ*r13*r23*wij/h + r11*(detJ*r21*wij*(E44*N1*N3 + Erx*gamma1*gamma3 - N3x*(-D26*N1y - D66*N1x) - N3y*(-D22*N1y - D26*N1x)) + detJ*r22*wij*(-E45*N1*N3 - N3x*(D16*N1x + D66*N1y) - N3y*(D12*N1x + D26*N1y))) + r12*(detJ*r21*wij*(-E45*N1*N3 + N3x*(-D12*N1y - D16*N1x) + N3y*(-D26*N1y - D66*N1x)) + detJ*r22*wij*(E55*N1*N3 + Ery*gamma1*gamma3 + N3x*(D11*N1x + D16*N1y) + N3y*(D16*N1x + D66*N1y)))
            k += 1
            KC0v[k] += A66*N1*N3*alphat*detJ*r23**2*wij/h + r21*(detJ*r21*wij*(E44*N1*N3 + Erx*gamma1*gamma3 - N3x*(-D26*N1y - D66*N1x) - N3y*(-D22*N1y - D26*N1x)) + detJ*r22*wij*(-E45*N1*N3 - N3x*(D16*N1x + D66*N1y) - N3y*(D12*N1x + D26*N1y))) + r22*(detJ*r21*wij*(-E45*N1*N3 + N3x*(-D12*N1y - D16*N1x) + N3y*(-D26*N1y - D66*N1x)) + detJ*r22*wij*(E55*N1*N3 + Ery*gamma1*gamma3 + N3x*(D11*N1x + D16*N1y) + N3y*(D16*N1x + D66*N1y)))
            k += 1
            KC0v[k] += A66*N1*N3*alphat*detJ*r23*r33*wij/h + r31*(detJ*r21*wij*(E44*N1*N3 + Erx*gamma1*gamma3 - N3x*(-D26*N1y - D66*N1x) - N3y*(-D22*N1y - D26*N1x)) + detJ*r22*wij*(-E45*N1*N3 - N3x*(D16*N1x + D66*N1y) - N3y*(D12*N1x + D26*N1y))) + r32*(detJ*r21*wij*(-E45*N1*N3 + N3x*(-D12*N1y - D16*N1x) + N3y*(-D26*N1y - D66*N1x)) + detJ*r22*wij*(E55*N1*N3 + Ery*gamma1*gamma3 + N3x*(D11*N1x + D16*N1y) + N3y*(D16*N1x + D66*N1y)))
            k += 1
            KC0v[k] += r11*(0.5*A66*N1*N4y*alphat*detJ*r23*wij/h + detJ*r21*wij*(N4x*(-B12*N1y - B16*N1x) + N4y*(-B26*N1y - B66*N1x)) + detJ*r22*wij*(N4x*(B11*N1x + B16*N1y) + N4y*(B16*N1x + B66*N1y))) + r12*(-0.5*A66*N1*N4x*alphat*detJ*r23*wij/h + detJ*r21*wij*(N4x*(-B26*N1y - B66*N1x) + N4y*(-B22*N1y - B26*N1x)) + detJ*r22*wij*(N4x*(B16*N1x + B66*N1y) + N4y*(B12*N1x + B26*N1y))) + r13*(detJ*r21*wij*(-E44*N1*N4y - E45*N1*N4x) + detJ*r22*wij*(E45*N1*N4y + E55*N1*N4x))
            k += 1
            KC0v[k] += r21*(0.5*A66*N1*N4y*alphat*detJ*r23*wij/h + detJ*r21*wij*(N4x*(-B12*N1y - B16*N1x) + N4y*(-B26*N1y - B66*N1x)) + detJ*r22*wij*(N4x*(B11*N1x + B16*N1y) + N4y*(B16*N1x + B66*N1y))) + r22*(-0.5*A66*N1*N4x*alphat*detJ*r23*wij/h + detJ*r21*wij*(N4x*(-B26*N1y - B66*N1x) + N4y*(-B22*N1y - B26*N1x)) + detJ*r22*wij*(N4x*(B16*N1x + B66*N1y) + N4y*(B12*N1x + B26*N1y))) + r23*(detJ*r21*wij*(-E44*N1*N4y - E45*N1*N4x) + detJ*r22*wij*(E45*N1*N4y + E55*N1*N4x))
            k += 1
            KC0v[k] += r31*(0.5*A66*N1*N4y*alphat*detJ*r23*wij/h + detJ*r21*wij*(N4x*(-B12*N1y - B16*N1x) + N4y*(-B26*N1y - B66*N1x)) + detJ*r22*wij*(N4x*(B11*N1x + B16*N1y) + N4y*(B16*N1x + B66*N1y))) + r32*(-0.5*A66*N1*N4x*alphat*detJ*r23*wij/h + detJ*r21*wij*(N4x*(-B26*N1y - B66*N1x) + N4y*(-B22*N1y - B26*N1x)) + detJ*r22*wij*(N4x*(B16*N1x + B66*N1y) + N4y*(B12*N1x + B26*N1y))) + r33*(detJ*r21*wij*(-E44*N1*N4y - E45*N1*N4x) + detJ*r22*wij*(E45*N1*N4y + E55*N1*N4x))
            k += 1
            KC0v[k] += A66*N1*N4*alphat*detJ*r13*r23*wij/h + r11*(detJ*r21*wij*(E44*N1*N4 + Erx*gamma1*gamma4 - N4x*(-D26*N1y - D66*N1x) - N4y*(-D22*N1y - D26*N1x)) + detJ*r22*wij*(-E45*N1*N4 - N4x*(D16*N1x + D66*N1y) - N4y*(D12*N1x + D26*N1y))) + r12*(detJ*r21*wij*(-E45*N1*N4 + N4x*(-D12*N1y - D16*N1x) + N4y*(-D26*N1y - D66*N1x)) + detJ*r22*wij*(E55*N1*N4 + Ery*gamma1*gamma4 + N4x*(D11*N1x + D16*N1y) + N4y*(D16*N1x + D66*N1y)))
            k += 1
            KC0v[k] += A66*N1*N4*alphat*detJ*r23**2*wij/h + r21*(detJ*r21*wij*(E44*N1*N4 + Erx*gamma1*gamma4 - N4x*(-D26*N1y - D66*N1x) - N4y*(-D22*N1y - D26*N1x)) + detJ*r22*wij*(-E45*N1*N4 - N4x*(D16*N1x + D66*N1y) - N4y*(D12*N1x + D26*N1y))) + r22*(detJ*r21*wij*(-E45*N1*N4 + N4x*(-D12*N1y - D16*N1x) + N4y*(-D26*N1y - D66*N1x)) + detJ*r22*wij*(E55*N1*N4 + Ery*gamma1*gamma4 + N4x*(D11*N1x + D16*N1y) + N4y*(D16*N1x + D66*N1y)))
            k += 1
            KC0v[k] += A66*N1*N4*alphat*detJ*r23*r33*wij/h + r31*(detJ*r21*wij*(E44*N1*N4 + Erx*gamma1*gamma4 - N4x*(-D26*N1y - D66*N1x) - N4y*(-D22*N1y - D26*N1x)) + detJ*r22*wij*(-E45*N1*N4 - N4x*(D16*N1x + D66*N1y) - N4y*(D12*N1x + D26*N1y))) + r32*(detJ*r21*wij*(-E45*N1*N4 + N4x*(-D12*N1y - D16*N1x) + N4y*(-D26*N1y - D66*N1x)) + detJ*r22*wij*(E55*N1*N4 + Ery*gamma1*gamma4 + N4x*(D11*N1x + D16*N1y) + N4y*(D16*N1x + D66*N1y)))
            k += 1
            KC0v[k] += r11*(0.5*A66*N1*N1y*alphat*detJ*r33*wij/h + detJ*r31*wij*(N1x*(-B12*N1y - B16*N1x) + N1y*(-B26*N1y - B66*N1x)) + detJ*r32*wij*(N1x*(B11*N1x + B16*N1y) + N1y*(B16*N1x + B66*N1y))) + r12*(-0.5*A66*N1*N1x*alphat*detJ*r33*wij/h + detJ*r31*wij*(N1x*(-B26*N1y - B66*N1x) + N1y*(-B22*N1y - B26*N1x)) + detJ*r32*wij*(N1x*(B16*N1x + B66*N1y) + N1y*(B12*N1x + B26*N1y))) + r13*(detJ*r31*wij*(-E44*N1*N1y - E45*N1*N1x) + detJ*r32*wij*(E45*N1*N1y + E55*N1*N1x))
            k += 1
            KC0v[k] += r21*(0.5*A66*N1*N1y*alphat*detJ*r33*wij/h + detJ*r31*wij*(N1x*(-B12*N1y - B16*N1x) + N1y*(-B26*N1y - B66*N1x)) + detJ*r32*wij*(N1x*(B11*N1x + B16*N1y) + N1y*(B16*N1x + B66*N1y))) + r22*(-0.5*A66*N1*N1x*alphat*detJ*r33*wij/h + detJ*r31*wij*(N1x*(-B26*N1y - B66*N1x) + N1y*(-B22*N1y - B26*N1x)) + detJ*r32*wij*(N1x*(B16*N1x + B66*N1y) + N1y*(B12*N1x + B26*N1y))) + r23*(detJ*r31*wij*(-E44*N1*N1y - E45*N1*N1x) + detJ*r32*wij*(E45*N1*N1y + E55*N1*N1x))
            k += 1
            KC0v[k] += r31*(0.5*A66*N1*N1y*alphat*detJ*r33*wij/h + detJ*r31*wij*(N1x*(-B12*N1y - B16*N1x) + N1y*(-B26*N1y - B66*N1x)) + detJ*r32*wij*(N1x*(B11*N1x + B16*N1y) + N1y*(B16*N1x + B66*N1y))) + r32*(-0.5*A66*N1*N1x*alphat*detJ*r33*wij/h + detJ*r31*wij*(N1x*(-B26*N1y - B66*N1x) + N1y*(-B22*N1y - B26*N1x)) + detJ*r32*wij*(N1x*(B16*N1x + B66*N1y) + N1y*(B12*N1x + B26*N1y))) + r33*(detJ*r31*wij*(-E44*N1*N1y - E45*N1*N1x) + detJ*r32*wij*(E45*N1*N1y + E55*N1*N1x))
            k += 1
            KC0v[k] += A66*N1**2*alphat*detJ*r13*r33*wij/h + r11*(detJ*r31*wij*(E44*N1**2 + Erx*gamma1**2 - N1x*(-D26*N1y - D66*N1x) - N1y*(-D22*N1y - D26*N1x)) + detJ*r32*wij*(-E45*N1**2 - N1x*(D16*N1x + D66*N1y) - N1y*(D12*N1x + D26*N1y))) + r12*(detJ*r31*wij*(-E45*N1**2 + N1x*(-D12*N1y - D16*N1x) + N1y*(-D26*N1y - D66*N1x)) + detJ*r32*wij*(E55*N1**2 + Ery*gamma1**2 + N1x*(D11*N1x + D16*N1y) + N1y*(D16*N1x + D66*N1y)))
            k += 1
            KC0v[k] += A66*N1**2*alphat*detJ*r23*r33*wij/h + r21*(detJ*r31*wij*(E44*N1**2 + Erx*gamma1**2 - N1x*(-D26*N1y - D66*N1x) - N1y*(-D22*N1y - D26*N1x)) + detJ*r32*wij*(-E45*N1**2 - N1x*(D16*N1x + D66*N1y) - N1y*(D12*N1x + D26*N1y))) + r22*(detJ*r31*wij*(-E45*N1**2 + N1x*(-D12*N1y - D16*N1x) + N1y*(-D26*N1y - D66*N1x)) + detJ*r32*wij*(E55*N1**2 + Ery*gamma1**2 + N1x*(D11*N1x + D16*N1y) + N1y*(D16*N1x + D66*N1y)))
            k += 1
            KC0v[k] += A66*N1**2*alphat*detJ*r33**2*wij/h + r31*(detJ*r31*wij*(E44*N1**2 + Erx*gamma1**2 - N1x*(-D26*N1y - D66*N1x) - N1y*(-D22*N1y - D26*N1x)) + detJ*r32*wij*(-E45*N1**2 - N1x*(D16*N1x + D66*N1y) - N1y*(D12*N1x + D26*N1y))) + r32*(detJ*r31*wij*(-E45*N1**2 + N1x*(-D12*N1y - D16*N1x) + N1y*(-D26*N1y - D66*N1x)) + detJ*r32*wij*(E55*N1**2 + Ery*gamma1**2 + N1x*(D11*N1x + D16*N1y) + N1y*(D16*N1x + D66*N1y)))
            k += 1
            KC0v[k] += r11*(0.5*A66*N1*N2y*alphat*detJ*r33*wij/h + detJ*r31*wij*(N2x*(-B12*N1y - B16*N1x) + N2y*(-B26*N1y - B66*N1x)) + detJ*r32*wij*(N2x*(B11*N1x + B16*N1y) + N2y*(B16*N1x + B66*N1y))) + r12*(-0.5*A66*N1*N2x*alphat*detJ*r33*wij/h + detJ*r31*wij*(N2x*(-B26*N1y - B66*N1x) + N2y*(-B22*N1y - B26*N1x)) + detJ*r32*wij*(N2x*(B16*N1x + B66*N1y) + N2y*(B12*N1x + B26*N1y))) + r13*(detJ*r31*wij*(-E44*N1*N2y - E45*N1*N2x) + detJ*r32*wij*(E45*N1*N2y + E55*N1*N2x))
            k += 1
            KC0v[k] += r21*(0.5*A66*N1*N2y*alphat*detJ*r33*wij/h + detJ*r31*wij*(N2x*(-B12*N1y - B16*N1x) + N2y*(-B26*N1y - B66*N1x)) + detJ*r32*wij*(N2x*(B11*N1x + B16*N1y) + N2y*(B16*N1x + B66*N1y))) + r22*(-0.5*A66*N1*N2x*alphat*detJ*r33*wij/h + detJ*r31*wij*(N2x*(-B26*N1y - B66*N1x) + N2y*(-B22*N1y - B26*N1x)) + detJ*r32*wij*(N2x*(B16*N1x + B66*N1y) + N2y*(B12*N1x + B26*N1y))) + r23*(detJ*r31*wij*(-E44*N1*N2y - E45*N1*N2x) + detJ*r32*wij*(E45*N1*N2y + E55*N1*N2x))
            k += 1
            KC0v[k] += r31*(0.5*A66*N1*N2y*alphat*detJ*r33*wij/h + detJ*r31*wij*(N2x*(-B12*N1y - B16*N1x) + N2y*(-B26*N1y - B66*N1x)) + detJ*r32*wij*(N2x*(B11*N1x + B16*N1y) + N2y*(B16*N1x + B66*N1y))) + r32*(-0.5*A66*N1*N2x*alphat*detJ*r33*wij/h + detJ*r31*wij*(N2x*(-B26*N1y - B66*N1x) + N2y*(-B22*N1y - B26*N1x)) + detJ*r32*wij*(N2x*(B16*N1x + B66*N1y) + N2y*(B12*N1x + B26*N1y))) + r33*(detJ*r31*wij*(-E44*N1*N2y - E45*N1*N2x) + detJ*r32*wij*(E45*N1*N2y + E55*N1*N2x))
            k += 1
            KC0v[k] += A66*N1*N2*alphat*detJ*r13*r33*wij/h + r11*(detJ*r31*wij*(E44*N1*N2 + Erx*gamma1*gamma2 - N2x*(-D26*N1y - D66*N1x) - N2y*(-D22*N1y - D26*N1x)) + detJ*r32*wij*(-E45*N1*N2 - N2x*(D16*N1x + D66*N1y) - N2y*(D12*N1x + D26*N1y))) + r12*(detJ*r31*wij*(-E45*N1*N2 + N2x*(-D12*N1y - D16*N1x) + N2y*(-D26*N1y - D66*N1x)) + detJ*r32*wij*(E55*N1*N2 + Ery*gamma1*gamma2 + N2x*(D11*N1x + D16*N1y) + N2y*(D16*N1x + D66*N1y)))
            k += 1
            KC0v[k] += A66*N1*N2*alphat*detJ*r23*r33*wij/h + r21*(detJ*r31*wij*(E44*N1*N2 + Erx*gamma1*gamma2 - N2x*(-D26*N1y - D66*N1x) - N2y*(-D22*N1y - D26*N1x)) + detJ*r32*wij*(-E45*N1*N2 - N2x*(D16*N1x + D66*N1y) - N2y*(D12*N1x + D26*N1y))) + r22*(detJ*r31*wij*(-E45*N1*N2 + N2x*(-D12*N1y - D16*N1x) + N2y*(-D26*N1y - D66*N1x)) + detJ*r32*wij*(E55*N1*N2 + Ery*gamma1*gamma2 + N2x*(D11*N1x + D16*N1y) + N2y*(D16*N1x + D66*N1y)))
            k += 1
            KC0v[k] += A66*N1*N2*alphat*detJ*r33**2*wij/h + r31*(detJ*r31*wij*(E44*N1*N2 + Erx*gamma1*gamma2 - N2x*(-D26*N1y - D66*N1x) - N2y*(-D22*N1y - D26*N1x)) + detJ*r32*wij*(-E45*N1*N2 - N2x*(D16*N1x + D66*N1y) - N2y*(D12*N1x + D26*N1y))) + r32*(detJ*r31*wij*(-E45*N1*N2 + N2x*(-D12*N1y - D16*N1x) + N2y*(-D26*N1y - D66*N1x)) + detJ*r32*wij*(E55*N1*N2 + Ery*gamma1*gamma2 + N2x*(D11*N1x + D16*N1y) + N2y*(D16*N1x + D66*N1y)))
            k += 1
            KC0v[k] += r11*(0.5*A66*N1*N3y*alphat*detJ*r33*wij/h + detJ*r31*wij*(N3x*(-B12*N1y - B16*N1x) + N3y*(-B26*N1y - B66*N1x)) + detJ*r32*wij*(N3x*(B11*N1x + B16*N1y) + N3y*(B16*N1x + B66*N1y))) + r12*(-0.5*A66*N1*N3x*alphat*detJ*r33*wij/h + detJ*r31*wij*(N3x*(-B26*N1y - B66*N1x) + N3y*(-B22*N1y - B26*N1x)) + detJ*r32*wij*(N3x*(B16*N1x + B66*N1y) + N3y*(B12*N1x + B26*N1y))) + r13*(detJ*r31*wij*(-E44*N1*N3y - E45*N1*N3x) + detJ*r32*wij*(E45*N1*N3y + E55*N1*N3x))
            k += 1
            KC0v[k] += r21*(0.5*A66*N1*N3y*alphat*detJ*r33*wij/h + detJ*r31*wij*(N3x*(-B12*N1y - B16*N1x) + N3y*(-B26*N1y - B66*N1x)) + detJ*r32*wij*(N3x*(B11*N1x + B16*N1y) + N3y*(B16*N1x + B66*N1y))) + r22*(-0.5*A66*N1*N3x*alphat*detJ*r33*wij/h + detJ*r31*wij*(N3x*(-B26*N1y - B66*N1x) + N3y*(-B22*N1y - B26*N1x)) + detJ*r32*wij*(N3x*(B16*N1x + B66*N1y) + N3y*(B12*N1x + B26*N1y))) + r23*(detJ*r31*wij*(-E44*N1*N3y - E45*N1*N3x) + detJ*r32*wij*(E45*N1*N3y + E55*N1*N3x))
            k += 1
            KC0v[k] += r31*(0.5*A66*N1*N3y*alphat*detJ*r33*wij/h + detJ*r31*wij*(N3x*(-B12*N1y - B16*N1x) + N3y*(-B26*N1y - B66*N1x)) + detJ*r32*wij*(N3x*(B11*N1x + B16*N1y) + N3y*(B16*N1x + B66*N1y))) + r32*(-0.5*A66*N1*N3x*alphat*detJ*r33*wij/h + detJ*r31*wij*(N3x*(-B26*N1y - B66*N1x) + N3y*(-B22*N1y - B26*N1x)) + detJ*r32*wij*(N3x*(B16*N1x + B66*N1y) + N3y*(B12*N1x + B26*N1y))) + r33*(detJ*r31*wij*(-E44*N1*N3y - E45*N1*N3x) + detJ*r32*wij*(E45*N1*N3y + E55*N1*N3x))
            k += 1
            KC0v[k] += A66*N1*N3*alphat*detJ*r13*r33*wij/h + r11*(detJ*r31*wij*(E44*N1*N3 + Erx*gamma1*gamma3 - N3x*(-D26*N1y - D66*N1x) - N3y*(-D22*N1y - D26*N1x)) + detJ*r32*wij*(-E45*N1*N3 - N3x*(D16*N1x + D66*N1y) - N3y*(D12*N1x + D26*N1y))) + r12*(detJ*r31*wij*(-E45*N1*N3 + N3x*(-D12*N1y - D16*N1x) + N3y*(-D26*N1y - D66*N1x)) + detJ*r32*wij*(E55*N1*N3 + Ery*gamma1*gamma3 + N3x*(D11*N1x + D16*N1y) + N3y*(D16*N1x + D66*N1y)))
            k += 1
            KC0v[k] += A66*N1*N3*alphat*detJ*r23*r33*wij/h + r21*(detJ*r31*wij*(E44*N1*N3 + Erx*gamma1*gamma3 - N3x*(-D26*N1y - D66*N1x) - N3y*(-D22*N1y - D26*N1x)) + detJ*r32*wij*(-E45*N1*N3 - N3x*(D16*N1x + D66*N1y) - N3y*(D12*N1x + D26*N1y))) + r22*(detJ*r31*wij*(-E45*N1*N3 + N3x*(-D12*N1y - D16*N1x) + N3y*(-D26*N1y - D66*N1x)) + detJ*r32*wij*(E55*N1*N3 + Ery*gamma1*gamma3 + N3x*(D11*N1x + D16*N1y) + N3y*(D16*N1x + D66*N1y)))
            k += 1
            KC0v[k] += A66*N1*N3*alphat*detJ*r33**2*wij/h + r31*(detJ*r31*wij*(E44*N1*N3 + Erx*gamma1*gamma3 - N3x*(-D26*N1y - D66*N1x) - N3y*(-D22*N1y - D26*N1x)) + detJ*r32*wij*(-E45*N1*N3 - N3x*(D16*N1x + D66*N1y) - N3y*(D12*N1x + D26*N1y))) + r32*(detJ*r31*wij*(-E45*N1*N3 + N3x*(-D12*N1y - D16*N1x) + N3y*(-D26*N1y - D66*N1x)) + detJ*r32*wij*(E55*N1*N3 + Ery*gamma1*gamma3 + N3x*(D11*N1x + D16*N1y) + N3y*(D16*N1x + D66*N1y)))
            k += 1
            KC0v[k] += r11*(0.5*A66*N1*N4y*alphat*detJ*r33*wij/h + detJ*r31*wij*(N4x*(-B12*N1y - B16*N1x) + N4y*(-B26*N1y - B66*N1x)) + detJ*r32*wij*(N4x*(B11*N1x + B16*N1y) + N4y*(B16*N1x + B66*N1y))) + r12*(-0.5*A66*N1*N4x*alphat*detJ*r33*wij/h + detJ*r31*wij*(N4x*(-B26*N1y - B66*N1x) + N4y*(-B22*N1y - B26*N1x)) + detJ*r32*wij*(N4x*(B16*N1x + B66*N1y) + N4y*(B12*N1x + B26*N1y))) + r13*(detJ*r31*wij*(-E44*N1*N4y - E45*N1*N4x) + detJ*r32*wij*(E45*N1*N4y + E55*N1*N4x))
            k += 1
            KC0v[k] += r21*(0.5*A66*N1*N4y*alphat*detJ*r33*wij/h + detJ*r31*wij*(N4x*(-B12*N1y - B16*N1x) + N4y*(-B26*N1y - B66*N1x)) + detJ*r32*wij*(N4x*(B11*N1x + B16*N1y) + N4y*(B16*N1x + B66*N1y))) + r22*(-0.5*A66*N1*N4x*alphat*detJ*r33*wij/h + detJ*r31*wij*(N4x*(-B26*N1y - B66*N1x) + N4y*(-B22*N1y - B26*N1x)) + detJ*r32*wij*(N4x*(B16*N1x + B66*N1y) + N4y*(B12*N1x + B26*N1y))) + r23*(detJ*r31*wij*(-E44*N1*N4y - E45*N1*N4x) + detJ*r32*wij*(E45*N1*N4y + E55*N1*N4x))
            k += 1
            KC0v[k] += r31*(0.5*A66*N1*N4y*alphat*detJ*r33*wij/h + detJ*r31*wij*(N4x*(-B12*N1y - B16*N1x) + N4y*(-B26*N1y - B66*N1x)) + detJ*r32*wij*(N4x*(B11*N1x + B16*N1y) + N4y*(B16*N1x + B66*N1y))) + r32*(-0.5*A66*N1*N4x*alphat*detJ*r33*wij/h + detJ*r31*wij*(N4x*(-B26*N1y - B66*N1x) + N4y*(-B22*N1y - B26*N1x)) + detJ*r32*wij*(N4x*(B16*N1x + B66*N1y) + N4y*(B12*N1x + B26*N1y))) + r33*(detJ*r31*wij*(-E44*N1*N4y - E45*N1*N4x) + detJ*r32*wij*(E45*N1*N4y + E55*N1*N4x))
            k += 1
            KC0v[k] += A66*N1*N4*alphat*detJ*r13*r33*wij/h + r11*(detJ*r31*wij*(E44*N1*N4 + Erx*gamma1*gamma4 - N4x*(-D26*N1y - D66*N1x) - N4y*(-D22*N1y - D26*N1x)) + detJ*r32*wij*(-E45*N1*N4 - N4x*(D16*N1x + D66*N1y) - N4y*(D12*N1x + D26*N1y))) + r12*(detJ*r31*wij*(-E45*N1*N4 + N4x*(-D12*N1y - D16*N1x) + N4y*(-D26*N1y - D66*N1x)) + detJ*r32*wij*(E55*N1*N4 + Ery*gamma1*gamma4 + N4x*(D11*N1x + D16*N1y) + N4y*(D16*N1x + D66*N1y)))
            k += 1
            KC0v[k] += A66*N1*N4*alphat*detJ*r23*r33*wij/h + r21*(detJ*r31*wij*(E44*N1*N4 + Erx*gamma1*gamma4 - N4x*(-D26*N1y - D66*N1x) - N4y*(-D22*N1y - D26*N1x)) + detJ*r32*wij*(-E45*N1*N4 - N4x*(D16*N1x + D66*N1y) - N4y*(D12*N1x + D26*N1y))) + r22*(detJ*r31*wij*(-E45*N1*N4 + N4x*(-D12*N1y - D16*N1x) + N4y*(-D26*N1y - D66*N1x)) + detJ*r32*wij*(E55*N1*N4 + Ery*gamma1*gamma4 + N4x*(D11*N1x + D16*N1y) + N4y*(D16*N1x + D66*N1y)))
            k += 1
            KC0v[k] += A66*N1*N4*alphat*detJ*r33**2*wij/h + r31*(detJ*r31*wij*(E44*N1*N4 + Erx*gamma1*gamma4 - N4x*(-D26*N1y - D66*N1x) - N4y*(-D22*N1y - D26*N1x)) + detJ*r32*wij*(-E45*N1*N4 - N4x*(D16*N1x + D66*N1y) - N4y*(D12*N1x + D26*N1y))) + r32*(detJ*r31*wij*(-E45*N1*N4 + N4x*(-D12*N1y - D16*N1x) + N4y*(-D26*N1y - D66*N1x)) + detJ*r32*wij*(E55*N1*N4 + Ery*gamma1*gamma4 + N4x*(D11*N1x + D16*N1y) + N4y*(D16*N1x + D66*N1y)))
            k += 1
            KC0v[k] += detJ*r13**2*wij*(Ew*gamma1*gamma2 + N1x*(E45*N2y + E55*N2x) + N1y*(E44*N2y + E45*N2x)) + r11*(detJ*r11*wij*(0.25*A66*N1y*N2y*alphat/h + Eu*gamma1*gamma2 + N1x*(A11*N2x + A16*N2y) + N1y*(A16*N2x + A66*N2y)) + detJ*r12*wij*(-0.25*A66*N1y*N2x*alphat/h + N1x*(A12*N2y + A16*N2x) + N1y*(A26*N2y + A66*N2x))) + r12*(detJ*r11*wij*(-0.25*A66*N1x*N2y*alphat/h + N1x*(A16*N2x + A66*N2y) + N1y*(A12*N2x + A26*N2y)) + detJ*r12*wij*(0.25*A66*N1x*N2x*alphat/h + Ev*gamma1*gamma2 + N1x*(A26*N2y + A66*N2x) + N1y*(A22*N2y + A26*N2x)))
            k += 1
            KC0v[k] += detJ*r13*r23*wij*(Ew*gamma1*gamma2 + N1x*(E45*N2y + E55*N2x) + N1y*(E44*N2y + E45*N2x)) + r21*(detJ*r11*wij*(0.25*A66*N1y*N2y*alphat/h + Eu*gamma1*gamma2 + N1x*(A11*N2x + A16*N2y) + N1y*(A16*N2x + A66*N2y)) + detJ*r12*wij*(-0.25*A66*N1y*N2x*alphat/h + N1x*(A12*N2y + A16*N2x) + N1y*(A26*N2y + A66*N2x))) + r22*(detJ*r11*wij*(-0.25*A66*N1x*N2y*alphat/h + N1x*(A16*N2x + A66*N2y) + N1y*(A12*N2x + A26*N2y)) + detJ*r12*wij*(0.25*A66*N1x*N2x*alphat/h + Ev*gamma1*gamma2 + N1x*(A26*N2y + A66*N2x) + N1y*(A22*N2y + A26*N2x)))
            k += 1
            KC0v[k] += detJ*r13*r33*wij*(Ew*gamma1*gamma2 + N1x*(E45*N2y + E55*N2x) + N1y*(E44*N2y + E45*N2x)) + r31*(detJ*r11*wij*(0.25*A66*N1y*N2y*alphat/h + Eu*gamma1*gamma2 + N1x*(A11*N2x + A16*N2y) + N1y*(A16*N2x + A66*N2y)) + detJ*r12*wij*(-0.25*A66*N1y*N2x*alphat/h + N1x*(A12*N2y + A16*N2x) + N1y*(A26*N2y + A66*N2x))) + r32*(detJ*r11*wij*(-0.25*A66*N1x*N2y*alphat/h + N1x*(A16*N2x + A66*N2y) + N1y*(A12*N2x + A26*N2y)) + detJ*r12*wij*(0.25*A66*N1x*N2x*alphat/h + Ev*gamma1*gamma2 + N1x*(A26*N2y + A66*N2x) + N1y*(A22*N2y + A26*N2x)))
            k += 1
            KC0v[k] += r11*(-N1*detJ*r13*wij*(E44*N2y + E45*N2x) + detJ*r11*wij*(-N1x*(B16*N2x + B66*N2y) - N1y*(B12*N2x + B26*N2y)) + detJ*r12*wij*(-N1x*(B26*N2y + B66*N2x) - N1y*(B22*N2y + B26*N2x))) + r12*(N1*detJ*r13*wij*(E45*N2y + E55*N2x) + detJ*r11*wij*(N1x*(B11*N2x + B16*N2y) + N1y*(B16*N2x + B66*N2y)) + detJ*r12*wij*(N1x*(B12*N2y + B16*N2x) + N1y*(B26*N2y + B66*N2x))) + r13*(-0.5*A66*N1*N2x*alphat*detJ*r12*wij/h + 0.5*A66*N1*N2y*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += r21*(-N1*detJ*r13*wij*(E44*N2y + E45*N2x) + detJ*r11*wij*(-N1x*(B16*N2x + B66*N2y) - N1y*(B12*N2x + B26*N2y)) + detJ*r12*wij*(-N1x*(B26*N2y + B66*N2x) - N1y*(B22*N2y + B26*N2x))) + r22*(N1*detJ*r13*wij*(E45*N2y + E55*N2x) + detJ*r11*wij*(N1x*(B11*N2x + B16*N2y) + N1y*(B16*N2x + B66*N2y)) + detJ*r12*wij*(N1x*(B12*N2y + B16*N2x) + N1y*(B26*N2y + B66*N2x))) + r23*(-0.5*A66*N1*N2x*alphat*detJ*r12*wij/h + 0.5*A66*N1*N2y*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += r31*(-N1*detJ*r13*wij*(E44*N2y + E45*N2x) + detJ*r11*wij*(-N1x*(B16*N2x + B66*N2y) - N1y*(B12*N2x + B26*N2y)) + detJ*r12*wij*(-N1x*(B26*N2y + B66*N2x) - N1y*(B22*N2y + B26*N2x))) + r32*(N1*detJ*r13*wij*(E45*N2y + E55*N2x) + detJ*r11*wij*(N1x*(B11*N2x + B16*N2y) + N1y*(B16*N2x + B66*N2y)) + detJ*r12*wij*(N1x*(B12*N2y + B16*N2x) + N1y*(B26*N2y + B66*N2x))) + r33*(-0.5*A66*N1*N2x*alphat*detJ*r12*wij/h + 0.5*A66*N1*N2y*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += detJ*r13**2*wij*(Ew*gamma2**2 + N2x*(E45*N2y + E55*N2x) + N2y*(E44*N2y + E45*N2x)) + r11*(detJ*r11*wij*(0.25*A66*N2y**2*alphat/h + Eu*gamma2**2 + N2x*(A11*N2x + A16*N2y) + N2y*(A16*N2x + A66*N2y)) + detJ*r12*wij*(-0.25*A66*N2x*N2y*alphat/h + N2x*(A12*N2y + A16*N2x) + N2y*(A26*N2y + A66*N2x))) + r12*(detJ*r11*wij*(-0.25*A66*N2x*N2y*alphat/h + N2x*(A16*N2x + A66*N2y) + N2y*(A12*N2x + A26*N2y)) + detJ*r12*wij*(0.25*A66*N2x**2*alphat/h + Ev*gamma2**2 + N2x*(A26*N2y + A66*N2x) + N2y*(A22*N2y + A26*N2x)))
            k += 1
            KC0v[k] += detJ*r13*r23*wij*(Ew*gamma2**2 + N2x*(E45*N2y + E55*N2x) + N2y*(E44*N2y + E45*N2x)) + r21*(detJ*r11*wij*(0.25*A66*N2y**2*alphat/h + Eu*gamma2**2 + N2x*(A11*N2x + A16*N2y) + N2y*(A16*N2x + A66*N2y)) + detJ*r12*wij*(-0.25*A66*N2x*N2y*alphat/h + N2x*(A12*N2y + A16*N2x) + N2y*(A26*N2y + A66*N2x))) + r22*(detJ*r11*wij*(-0.25*A66*N2x*N2y*alphat/h + N2x*(A16*N2x + A66*N2y) + N2y*(A12*N2x + A26*N2y)) + detJ*r12*wij*(0.25*A66*N2x**2*alphat/h + Ev*gamma2**2 + N2x*(A26*N2y + A66*N2x) + N2y*(A22*N2y + A26*N2x)))
            k += 1
            KC0v[k] += detJ*r13*r33*wij*(Ew*gamma2**2 + N2x*(E45*N2y + E55*N2x) + N2y*(E44*N2y + E45*N2x)) + r31*(detJ*r11*wij*(0.25*A66*N2y**2*alphat/h + Eu*gamma2**2 + N2x*(A11*N2x + A16*N2y) + N2y*(A16*N2x + A66*N2y)) + detJ*r12*wij*(-0.25*A66*N2x*N2y*alphat/h + N2x*(A12*N2y + A16*N2x) + N2y*(A26*N2y + A66*N2x))) + r32*(detJ*r11*wij*(-0.25*A66*N2x*N2y*alphat/h + N2x*(A16*N2x + A66*N2y) + N2y*(A12*N2x + A26*N2y)) + detJ*r12*wij*(0.25*A66*N2x**2*alphat/h + Ev*gamma2**2 + N2x*(A26*N2y + A66*N2x) + N2y*(A22*N2y + A26*N2x)))
            k += 1
            KC0v[k] += r11*(-N2*detJ*r13*wij*(E44*N2y + E45*N2x) + detJ*r11*wij*(-N2x*(B16*N2x + B66*N2y) - N2y*(B12*N2x + B26*N2y)) + detJ*r12*wij*(-N2x*(B26*N2y + B66*N2x) - N2y*(B22*N2y + B26*N2x))) + r12*(N2*detJ*r13*wij*(E45*N2y + E55*N2x) + detJ*r11*wij*(N2x*(B11*N2x + B16*N2y) + N2y*(B16*N2x + B66*N2y)) + detJ*r12*wij*(N2x*(B12*N2y + B16*N2x) + N2y*(B26*N2y + B66*N2x))) + r13*(-0.5*A66*N2*N2x*alphat*detJ*r12*wij/h + 0.5*A66*N2*N2y*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += r21*(-N2*detJ*r13*wij*(E44*N2y + E45*N2x) + detJ*r11*wij*(-N2x*(B16*N2x + B66*N2y) - N2y*(B12*N2x + B26*N2y)) + detJ*r12*wij*(-N2x*(B26*N2y + B66*N2x) - N2y*(B22*N2y + B26*N2x))) + r22*(N2*detJ*r13*wij*(E45*N2y + E55*N2x) + detJ*r11*wij*(N2x*(B11*N2x + B16*N2y) + N2y*(B16*N2x + B66*N2y)) + detJ*r12*wij*(N2x*(B12*N2y + B16*N2x) + N2y*(B26*N2y + B66*N2x))) + r23*(-0.5*A66*N2*N2x*alphat*detJ*r12*wij/h + 0.5*A66*N2*N2y*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += r31*(-N2*detJ*r13*wij*(E44*N2y + E45*N2x) + detJ*r11*wij*(-N2x*(B16*N2x + B66*N2y) - N2y*(B12*N2x + B26*N2y)) + detJ*r12*wij*(-N2x*(B26*N2y + B66*N2x) - N2y*(B22*N2y + B26*N2x))) + r32*(N2*detJ*r13*wij*(E45*N2y + E55*N2x) + detJ*r11*wij*(N2x*(B11*N2x + B16*N2y) + N2y*(B16*N2x + B66*N2y)) + detJ*r12*wij*(N2x*(B12*N2y + B16*N2x) + N2y*(B26*N2y + B66*N2x))) + r33*(-0.5*A66*N2*N2x*alphat*detJ*r12*wij/h + 0.5*A66*N2*N2y*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += detJ*r13**2*wij*(Ew*gamma2*gamma3 + N3x*(E45*N2y + E55*N2x) + N3y*(E44*N2y + E45*N2x)) + r11*(detJ*r11*wij*(0.25*A66*N2y*N3y*alphat/h + Eu*gamma2*gamma3 + N3x*(A11*N2x + A16*N2y) + N3y*(A16*N2x + A66*N2y)) + detJ*r12*wij*(-0.25*A66*N2x*N3y*alphat/h + N3x*(A12*N2y + A16*N2x) + N3y*(A26*N2y + A66*N2x))) + r12*(detJ*r11*wij*(-0.25*A66*N2y*N3x*alphat/h + N3x*(A16*N2x + A66*N2y) + N3y*(A12*N2x + A26*N2y)) + detJ*r12*wij*(0.25*A66*N2x*N3x*alphat/h + Ev*gamma2*gamma3 + N3x*(A26*N2y + A66*N2x) + N3y*(A22*N2y + A26*N2x)))
            k += 1
            KC0v[k] += detJ*r13*r23*wij*(Ew*gamma2*gamma3 + N3x*(E45*N2y + E55*N2x) + N3y*(E44*N2y + E45*N2x)) + r21*(detJ*r11*wij*(0.25*A66*N2y*N3y*alphat/h + Eu*gamma2*gamma3 + N3x*(A11*N2x + A16*N2y) + N3y*(A16*N2x + A66*N2y)) + detJ*r12*wij*(-0.25*A66*N2x*N3y*alphat/h + N3x*(A12*N2y + A16*N2x) + N3y*(A26*N2y + A66*N2x))) + r22*(detJ*r11*wij*(-0.25*A66*N2y*N3x*alphat/h + N3x*(A16*N2x + A66*N2y) + N3y*(A12*N2x + A26*N2y)) + detJ*r12*wij*(0.25*A66*N2x*N3x*alphat/h + Ev*gamma2*gamma3 + N3x*(A26*N2y + A66*N2x) + N3y*(A22*N2y + A26*N2x)))
            k += 1
            KC0v[k] += detJ*r13*r33*wij*(Ew*gamma2*gamma3 + N3x*(E45*N2y + E55*N2x) + N3y*(E44*N2y + E45*N2x)) + r31*(detJ*r11*wij*(0.25*A66*N2y*N3y*alphat/h + Eu*gamma2*gamma3 + N3x*(A11*N2x + A16*N2y) + N3y*(A16*N2x + A66*N2y)) + detJ*r12*wij*(-0.25*A66*N2x*N3y*alphat/h + N3x*(A12*N2y + A16*N2x) + N3y*(A26*N2y + A66*N2x))) + r32*(detJ*r11*wij*(-0.25*A66*N2y*N3x*alphat/h + N3x*(A16*N2x + A66*N2y) + N3y*(A12*N2x + A26*N2y)) + detJ*r12*wij*(0.25*A66*N2x*N3x*alphat/h + Ev*gamma2*gamma3 + N3x*(A26*N2y + A66*N2x) + N3y*(A22*N2y + A26*N2x)))
            k += 1
            KC0v[k] += r11*(-N3*detJ*r13*wij*(E44*N2y + E45*N2x) + detJ*r11*wij*(-N3x*(B16*N2x + B66*N2y) - N3y*(B12*N2x + B26*N2y)) + detJ*r12*wij*(-N3x*(B26*N2y + B66*N2x) - N3y*(B22*N2y + B26*N2x))) + r12*(N3*detJ*r13*wij*(E45*N2y + E55*N2x) + detJ*r11*wij*(N3x*(B11*N2x + B16*N2y) + N3y*(B16*N2x + B66*N2y)) + detJ*r12*wij*(N3x*(B12*N2y + B16*N2x) + N3y*(B26*N2y + B66*N2x))) + r13*(-0.5*A66*N2x*N3*alphat*detJ*r12*wij/h + 0.5*A66*N2y*N3*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += r21*(-N3*detJ*r13*wij*(E44*N2y + E45*N2x) + detJ*r11*wij*(-N3x*(B16*N2x + B66*N2y) - N3y*(B12*N2x + B26*N2y)) + detJ*r12*wij*(-N3x*(B26*N2y + B66*N2x) - N3y*(B22*N2y + B26*N2x))) + r22*(N3*detJ*r13*wij*(E45*N2y + E55*N2x) + detJ*r11*wij*(N3x*(B11*N2x + B16*N2y) + N3y*(B16*N2x + B66*N2y)) + detJ*r12*wij*(N3x*(B12*N2y + B16*N2x) + N3y*(B26*N2y + B66*N2x))) + r23*(-0.5*A66*N2x*N3*alphat*detJ*r12*wij/h + 0.5*A66*N2y*N3*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += r31*(-N3*detJ*r13*wij*(E44*N2y + E45*N2x) + detJ*r11*wij*(-N3x*(B16*N2x + B66*N2y) - N3y*(B12*N2x + B26*N2y)) + detJ*r12*wij*(-N3x*(B26*N2y + B66*N2x) - N3y*(B22*N2y + B26*N2x))) + r32*(N3*detJ*r13*wij*(E45*N2y + E55*N2x) + detJ*r11*wij*(N3x*(B11*N2x + B16*N2y) + N3y*(B16*N2x + B66*N2y)) + detJ*r12*wij*(N3x*(B12*N2y + B16*N2x) + N3y*(B26*N2y + B66*N2x))) + r33*(-0.5*A66*N2x*N3*alphat*detJ*r12*wij/h + 0.5*A66*N2y*N3*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += detJ*r13**2*wij*(Ew*gamma2*gamma4 + N4x*(E45*N2y + E55*N2x) + N4y*(E44*N2y + E45*N2x)) + r11*(detJ*r11*wij*(0.25*A66*N2y*N4y*alphat/h + Eu*gamma2*gamma4 + N4x*(A11*N2x + A16*N2y) + N4y*(A16*N2x + A66*N2y)) + detJ*r12*wij*(-0.25*A66*N2x*N4y*alphat/h + N4x*(A12*N2y + A16*N2x) + N4y*(A26*N2y + A66*N2x))) + r12*(detJ*r11*wij*(-0.25*A66*N2y*N4x*alphat/h + N4x*(A16*N2x + A66*N2y) + N4y*(A12*N2x + A26*N2y)) + detJ*r12*wij*(0.25*A66*N2x*N4x*alphat/h + Ev*gamma2*gamma4 + N4x*(A26*N2y + A66*N2x) + N4y*(A22*N2y + A26*N2x)))
            k += 1
            KC0v[k] += detJ*r13*r23*wij*(Ew*gamma2*gamma4 + N4x*(E45*N2y + E55*N2x) + N4y*(E44*N2y + E45*N2x)) + r21*(detJ*r11*wij*(0.25*A66*N2y*N4y*alphat/h + Eu*gamma2*gamma4 + N4x*(A11*N2x + A16*N2y) + N4y*(A16*N2x + A66*N2y)) + detJ*r12*wij*(-0.25*A66*N2x*N4y*alphat/h + N4x*(A12*N2y + A16*N2x) + N4y*(A26*N2y + A66*N2x))) + r22*(detJ*r11*wij*(-0.25*A66*N2y*N4x*alphat/h + N4x*(A16*N2x + A66*N2y) + N4y*(A12*N2x + A26*N2y)) + detJ*r12*wij*(0.25*A66*N2x*N4x*alphat/h + Ev*gamma2*gamma4 + N4x*(A26*N2y + A66*N2x) + N4y*(A22*N2y + A26*N2x)))
            k += 1
            KC0v[k] += detJ*r13*r33*wij*(Ew*gamma2*gamma4 + N4x*(E45*N2y + E55*N2x) + N4y*(E44*N2y + E45*N2x)) + r31*(detJ*r11*wij*(0.25*A66*N2y*N4y*alphat/h + Eu*gamma2*gamma4 + N4x*(A11*N2x + A16*N2y) + N4y*(A16*N2x + A66*N2y)) + detJ*r12*wij*(-0.25*A66*N2x*N4y*alphat/h + N4x*(A12*N2y + A16*N2x) + N4y*(A26*N2y + A66*N2x))) + r32*(detJ*r11*wij*(-0.25*A66*N2y*N4x*alphat/h + N4x*(A16*N2x + A66*N2y) + N4y*(A12*N2x + A26*N2y)) + detJ*r12*wij*(0.25*A66*N2x*N4x*alphat/h + Ev*gamma2*gamma4 + N4x*(A26*N2y + A66*N2x) + N4y*(A22*N2y + A26*N2x)))
            k += 1
            KC0v[k] += r11*(-N4*detJ*r13*wij*(E44*N2y + E45*N2x) + detJ*r11*wij*(-N4x*(B16*N2x + B66*N2y) - N4y*(B12*N2x + B26*N2y)) + detJ*r12*wij*(-N4x*(B26*N2y + B66*N2x) - N4y*(B22*N2y + B26*N2x))) + r12*(N4*detJ*r13*wij*(E45*N2y + E55*N2x) + detJ*r11*wij*(N4x*(B11*N2x + B16*N2y) + N4y*(B16*N2x + B66*N2y)) + detJ*r12*wij*(N4x*(B12*N2y + B16*N2x) + N4y*(B26*N2y + B66*N2x))) + r13*(-0.5*A66*N2x*N4*alphat*detJ*r12*wij/h + 0.5*A66*N2y*N4*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += r21*(-N4*detJ*r13*wij*(E44*N2y + E45*N2x) + detJ*r11*wij*(-N4x*(B16*N2x + B66*N2y) - N4y*(B12*N2x + B26*N2y)) + detJ*r12*wij*(-N4x*(B26*N2y + B66*N2x) - N4y*(B22*N2y + B26*N2x))) + r22*(N4*detJ*r13*wij*(E45*N2y + E55*N2x) + detJ*r11*wij*(N4x*(B11*N2x + B16*N2y) + N4y*(B16*N2x + B66*N2y)) + detJ*r12*wij*(N4x*(B12*N2y + B16*N2x) + N4y*(B26*N2y + B66*N2x))) + r23*(-0.5*A66*N2x*N4*alphat*detJ*r12*wij/h + 0.5*A66*N2y*N4*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += r31*(-N4*detJ*r13*wij*(E44*N2y + E45*N2x) + detJ*r11*wij*(-N4x*(B16*N2x + B66*N2y) - N4y*(B12*N2x + B26*N2y)) + detJ*r12*wij*(-N4x*(B26*N2y + B66*N2x) - N4y*(B22*N2y + B26*N2x))) + r32*(N4*detJ*r13*wij*(E45*N2y + E55*N2x) + detJ*r11*wij*(N4x*(B11*N2x + B16*N2y) + N4y*(B16*N2x + B66*N2y)) + detJ*r12*wij*(N4x*(B12*N2y + B16*N2x) + N4y*(B26*N2y + B66*N2x))) + r33*(-0.5*A66*N2x*N4*alphat*detJ*r12*wij/h + 0.5*A66*N2y*N4*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += detJ*r13*r23*wij*(Ew*gamma1*gamma2 + N1x*(E45*N2y + E55*N2x) + N1y*(E44*N2y + E45*N2x)) + r11*(detJ*r21*wij*(0.25*A66*N1y*N2y*alphat/h + Eu*gamma1*gamma2 + N1x*(A11*N2x + A16*N2y) + N1y*(A16*N2x + A66*N2y)) + detJ*r22*wij*(-0.25*A66*N1y*N2x*alphat/h + N1x*(A12*N2y + A16*N2x) + N1y*(A26*N2y + A66*N2x))) + r12*(detJ*r21*wij*(-0.25*A66*N1x*N2y*alphat/h + N1x*(A16*N2x + A66*N2y) + N1y*(A12*N2x + A26*N2y)) + detJ*r22*wij*(0.25*A66*N1x*N2x*alphat/h + Ev*gamma1*gamma2 + N1x*(A26*N2y + A66*N2x) + N1y*(A22*N2y + A26*N2x)))
            k += 1
            KC0v[k] += detJ*r23**2*wij*(Ew*gamma1*gamma2 + N1x*(E45*N2y + E55*N2x) + N1y*(E44*N2y + E45*N2x)) + r21*(detJ*r21*wij*(0.25*A66*N1y*N2y*alphat/h + Eu*gamma1*gamma2 + N1x*(A11*N2x + A16*N2y) + N1y*(A16*N2x + A66*N2y)) + detJ*r22*wij*(-0.25*A66*N1y*N2x*alphat/h + N1x*(A12*N2y + A16*N2x) + N1y*(A26*N2y + A66*N2x))) + r22*(detJ*r21*wij*(-0.25*A66*N1x*N2y*alphat/h + N1x*(A16*N2x + A66*N2y) + N1y*(A12*N2x + A26*N2y)) + detJ*r22*wij*(0.25*A66*N1x*N2x*alphat/h + Ev*gamma1*gamma2 + N1x*(A26*N2y + A66*N2x) + N1y*(A22*N2y + A26*N2x)))
            k += 1
            KC0v[k] += detJ*r23*r33*wij*(Ew*gamma1*gamma2 + N1x*(E45*N2y + E55*N2x) + N1y*(E44*N2y + E45*N2x)) + r31*(detJ*r21*wij*(0.25*A66*N1y*N2y*alphat/h + Eu*gamma1*gamma2 + N1x*(A11*N2x + A16*N2y) + N1y*(A16*N2x + A66*N2y)) + detJ*r22*wij*(-0.25*A66*N1y*N2x*alphat/h + N1x*(A12*N2y + A16*N2x) + N1y*(A26*N2y + A66*N2x))) + r32*(detJ*r21*wij*(-0.25*A66*N1x*N2y*alphat/h + N1x*(A16*N2x + A66*N2y) + N1y*(A12*N2x + A26*N2y)) + detJ*r22*wij*(0.25*A66*N1x*N2x*alphat/h + Ev*gamma1*gamma2 + N1x*(A26*N2y + A66*N2x) + N1y*(A22*N2y + A26*N2x)))
            k += 1
            KC0v[k] += r11*(-N1*detJ*r23*wij*(E44*N2y + E45*N2x) + detJ*r21*wij*(-N1x*(B16*N2x + B66*N2y) - N1y*(B12*N2x + B26*N2y)) + detJ*r22*wij*(-N1x*(B26*N2y + B66*N2x) - N1y*(B22*N2y + B26*N2x))) + r12*(N1*detJ*r23*wij*(E45*N2y + E55*N2x) + detJ*r21*wij*(N1x*(B11*N2x + B16*N2y) + N1y*(B16*N2x + B66*N2y)) + detJ*r22*wij*(N1x*(B12*N2y + B16*N2x) + N1y*(B26*N2y + B66*N2x))) + r13*(-0.5*A66*N1*N2x*alphat*detJ*r22*wij/h + 0.5*A66*N1*N2y*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += r21*(-N1*detJ*r23*wij*(E44*N2y + E45*N2x) + detJ*r21*wij*(-N1x*(B16*N2x + B66*N2y) - N1y*(B12*N2x + B26*N2y)) + detJ*r22*wij*(-N1x*(B26*N2y + B66*N2x) - N1y*(B22*N2y + B26*N2x))) + r22*(N1*detJ*r23*wij*(E45*N2y + E55*N2x) + detJ*r21*wij*(N1x*(B11*N2x + B16*N2y) + N1y*(B16*N2x + B66*N2y)) + detJ*r22*wij*(N1x*(B12*N2y + B16*N2x) + N1y*(B26*N2y + B66*N2x))) + r23*(-0.5*A66*N1*N2x*alphat*detJ*r22*wij/h + 0.5*A66*N1*N2y*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += r31*(-N1*detJ*r23*wij*(E44*N2y + E45*N2x) + detJ*r21*wij*(-N1x*(B16*N2x + B66*N2y) - N1y*(B12*N2x + B26*N2y)) + detJ*r22*wij*(-N1x*(B26*N2y + B66*N2x) - N1y*(B22*N2y + B26*N2x))) + r32*(N1*detJ*r23*wij*(E45*N2y + E55*N2x) + detJ*r21*wij*(N1x*(B11*N2x + B16*N2y) + N1y*(B16*N2x + B66*N2y)) + detJ*r22*wij*(N1x*(B12*N2y + B16*N2x) + N1y*(B26*N2y + B66*N2x))) + r33*(-0.5*A66*N1*N2x*alphat*detJ*r22*wij/h + 0.5*A66*N1*N2y*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += detJ*r13*r23*wij*(Ew*gamma2**2 + N2x*(E45*N2y + E55*N2x) + N2y*(E44*N2y + E45*N2x)) + r11*(detJ*r21*wij*(0.25*A66*N2y**2*alphat/h + Eu*gamma2**2 + N2x*(A11*N2x + A16*N2y) + N2y*(A16*N2x + A66*N2y)) + detJ*r22*wij*(-0.25*A66*N2x*N2y*alphat/h + N2x*(A12*N2y + A16*N2x) + N2y*(A26*N2y + A66*N2x))) + r12*(detJ*r21*wij*(-0.25*A66*N2x*N2y*alphat/h + N2x*(A16*N2x + A66*N2y) + N2y*(A12*N2x + A26*N2y)) + detJ*r22*wij*(0.25*A66*N2x**2*alphat/h + Ev*gamma2**2 + N2x*(A26*N2y + A66*N2x) + N2y*(A22*N2y + A26*N2x)))
            k += 1
            KC0v[k] += detJ*r23**2*wij*(Ew*gamma2**2 + N2x*(E45*N2y + E55*N2x) + N2y*(E44*N2y + E45*N2x)) + r21*(detJ*r21*wij*(0.25*A66*N2y**2*alphat/h + Eu*gamma2**2 + N2x*(A11*N2x + A16*N2y) + N2y*(A16*N2x + A66*N2y)) + detJ*r22*wij*(-0.25*A66*N2x*N2y*alphat/h + N2x*(A12*N2y + A16*N2x) + N2y*(A26*N2y + A66*N2x))) + r22*(detJ*r21*wij*(-0.25*A66*N2x*N2y*alphat/h + N2x*(A16*N2x + A66*N2y) + N2y*(A12*N2x + A26*N2y)) + detJ*r22*wij*(0.25*A66*N2x**2*alphat/h + Ev*gamma2**2 + N2x*(A26*N2y + A66*N2x) + N2y*(A22*N2y + A26*N2x)))
            k += 1
            KC0v[k] += detJ*r23*r33*wij*(Ew*gamma2**2 + N2x*(E45*N2y + E55*N2x) + N2y*(E44*N2y + E45*N2x)) + r31*(detJ*r21*wij*(0.25*A66*N2y**2*alphat/h + Eu*gamma2**2 + N2x*(A11*N2x + A16*N2y) + N2y*(A16*N2x + A66*N2y)) + detJ*r22*wij*(-0.25*A66*N2x*N2y*alphat/h + N2x*(A12*N2y + A16*N2x) + N2y*(A26*N2y + A66*N2x))) + r32*(detJ*r21*wij*(-0.25*A66*N2x*N2y*alphat/h + N2x*(A16*N2x + A66*N2y) + N2y*(A12*N2x + A26*N2y)) + detJ*r22*wij*(0.25*A66*N2x**2*alphat/h + Ev*gamma2**2 + N2x*(A26*N2y + A66*N2x) + N2y*(A22*N2y + A26*N2x)))
            k += 1
            KC0v[k] += r11*(-N2*detJ*r23*wij*(E44*N2y + E45*N2x) + detJ*r21*wij*(-N2x*(B16*N2x + B66*N2y) - N2y*(B12*N2x + B26*N2y)) + detJ*r22*wij*(-N2x*(B26*N2y + B66*N2x) - N2y*(B22*N2y + B26*N2x))) + r12*(N2*detJ*r23*wij*(E45*N2y + E55*N2x) + detJ*r21*wij*(N2x*(B11*N2x + B16*N2y) + N2y*(B16*N2x + B66*N2y)) + detJ*r22*wij*(N2x*(B12*N2y + B16*N2x) + N2y*(B26*N2y + B66*N2x))) + r13*(-0.5*A66*N2*N2x*alphat*detJ*r22*wij/h + 0.5*A66*N2*N2y*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += r21*(-N2*detJ*r23*wij*(E44*N2y + E45*N2x) + detJ*r21*wij*(-N2x*(B16*N2x + B66*N2y) - N2y*(B12*N2x + B26*N2y)) + detJ*r22*wij*(-N2x*(B26*N2y + B66*N2x) - N2y*(B22*N2y + B26*N2x))) + r22*(N2*detJ*r23*wij*(E45*N2y + E55*N2x) + detJ*r21*wij*(N2x*(B11*N2x + B16*N2y) + N2y*(B16*N2x + B66*N2y)) + detJ*r22*wij*(N2x*(B12*N2y + B16*N2x) + N2y*(B26*N2y + B66*N2x))) + r23*(-0.5*A66*N2*N2x*alphat*detJ*r22*wij/h + 0.5*A66*N2*N2y*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += r31*(-N2*detJ*r23*wij*(E44*N2y + E45*N2x) + detJ*r21*wij*(-N2x*(B16*N2x + B66*N2y) - N2y*(B12*N2x + B26*N2y)) + detJ*r22*wij*(-N2x*(B26*N2y + B66*N2x) - N2y*(B22*N2y + B26*N2x))) + r32*(N2*detJ*r23*wij*(E45*N2y + E55*N2x) + detJ*r21*wij*(N2x*(B11*N2x + B16*N2y) + N2y*(B16*N2x + B66*N2y)) + detJ*r22*wij*(N2x*(B12*N2y + B16*N2x) + N2y*(B26*N2y + B66*N2x))) + r33*(-0.5*A66*N2*N2x*alphat*detJ*r22*wij/h + 0.5*A66*N2*N2y*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += detJ*r13*r23*wij*(Ew*gamma2*gamma3 + N3x*(E45*N2y + E55*N2x) + N3y*(E44*N2y + E45*N2x)) + r11*(detJ*r21*wij*(0.25*A66*N2y*N3y*alphat/h + Eu*gamma2*gamma3 + N3x*(A11*N2x + A16*N2y) + N3y*(A16*N2x + A66*N2y)) + detJ*r22*wij*(-0.25*A66*N2x*N3y*alphat/h + N3x*(A12*N2y + A16*N2x) + N3y*(A26*N2y + A66*N2x))) + r12*(detJ*r21*wij*(-0.25*A66*N2y*N3x*alphat/h + N3x*(A16*N2x + A66*N2y) + N3y*(A12*N2x + A26*N2y)) + detJ*r22*wij*(0.25*A66*N2x*N3x*alphat/h + Ev*gamma2*gamma3 + N3x*(A26*N2y + A66*N2x) + N3y*(A22*N2y + A26*N2x)))
            k += 1
            KC0v[k] += detJ*r23**2*wij*(Ew*gamma2*gamma3 + N3x*(E45*N2y + E55*N2x) + N3y*(E44*N2y + E45*N2x)) + r21*(detJ*r21*wij*(0.25*A66*N2y*N3y*alphat/h + Eu*gamma2*gamma3 + N3x*(A11*N2x + A16*N2y) + N3y*(A16*N2x + A66*N2y)) + detJ*r22*wij*(-0.25*A66*N2x*N3y*alphat/h + N3x*(A12*N2y + A16*N2x) + N3y*(A26*N2y + A66*N2x))) + r22*(detJ*r21*wij*(-0.25*A66*N2y*N3x*alphat/h + N3x*(A16*N2x + A66*N2y) + N3y*(A12*N2x + A26*N2y)) + detJ*r22*wij*(0.25*A66*N2x*N3x*alphat/h + Ev*gamma2*gamma3 + N3x*(A26*N2y + A66*N2x) + N3y*(A22*N2y + A26*N2x)))
            k += 1
            KC0v[k] += detJ*r23*r33*wij*(Ew*gamma2*gamma3 + N3x*(E45*N2y + E55*N2x) + N3y*(E44*N2y + E45*N2x)) + r31*(detJ*r21*wij*(0.25*A66*N2y*N3y*alphat/h + Eu*gamma2*gamma3 + N3x*(A11*N2x + A16*N2y) + N3y*(A16*N2x + A66*N2y)) + detJ*r22*wij*(-0.25*A66*N2x*N3y*alphat/h + N3x*(A12*N2y + A16*N2x) + N3y*(A26*N2y + A66*N2x))) + r32*(detJ*r21*wij*(-0.25*A66*N2y*N3x*alphat/h + N3x*(A16*N2x + A66*N2y) + N3y*(A12*N2x + A26*N2y)) + detJ*r22*wij*(0.25*A66*N2x*N3x*alphat/h + Ev*gamma2*gamma3 + N3x*(A26*N2y + A66*N2x) + N3y*(A22*N2y + A26*N2x)))
            k += 1
            KC0v[k] += r11*(-N3*detJ*r23*wij*(E44*N2y + E45*N2x) + detJ*r21*wij*(-N3x*(B16*N2x + B66*N2y) - N3y*(B12*N2x + B26*N2y)) + detJ*r22*wij*(-N3x*(B26*N2y + B66*N2x) - N3y*(B22*N2y + B26*N2x))) + r12*(N3*detJ*r23*wij*(E45*N2y + E55*N2x) + detJ*r21*wij*(N3x*(B11*N2x + B16*N2y) + N3y*(B16*N2x + B66*N2y)) + detJ*r22*wij*(N3x*(B12*N2y + B16*N2x) + N3y*(B26*N2y + B66*N2x))) + r13*(-0.5*A66*N2x*N3*alphat*detJ*r22*wij/h + 0.5*A66*N2y*N3*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += r21*(-N3*detJ*r23*wij*(E44*N2y + E45*N2x) + detJ*r21*wij*(-N3x*(B16*N2x + B66*N2y) - N3y*(B12*N2x + B26*N2y)) + detJ*r22*wij*(-N3x*(B26*N2y + B66*N2x) - N3y*(B22*N2y + B26*N2x))) + r22*(N3*detJ*r23*wij*(E45*N2y + E55*N2x) + detJ*r21*wij*(N3x*(B11*N2x + B16*N2y) + N3y*(B16*N2x + B66*N2y)) + detJ*r22*wij*(N3x*(B12*N2y + B16*N2x) + N3y*(B26*N2y + B66*N2x))) + r23*(-0.5*A66*N2x*N3*alphat*detJ*r22*wij/h + 0.5*A66*N2y*N3*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += r31*(-N3*detJ*r23*wij*(E44*N2y + E45*N2x) + detJ*r21*wij*(-N3x*(B16*N2x + B66*N2y) - N3y*(B12*N2x + B26*N2y)) + detJ*r22*wij*(-N3x*(B26*N2y + B66*N2x) - N3y*(B22*N2y + B26*N2x))) + r32*(N3*detJ*r23*wij*(E45*N2y + E55*N2x) + detJ*r21*wij*(N3x*(B11*N2x + B16*N2y) + N3y*(B16*N2x + B66*N2y)) + detJ*r22*wij*(N3x*(B12*N2y + B16*N2x) + N3y*(B26*N2y + B66*N2x))) + r33*(-0.5*A66*N2x*N3*alphat*detJ*r22*wij/h + 0.5*A66*N2y*N3*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += detJ*r13*r23*wij*(Ew*gamma2*gamma4 + N4x*(E45*N2y + E55*N2x) + N4y*(E44*N2y + E45*N2x)) + r11*(detJ*r21*wij*(0.25*A66*N2y*N4y*alphat/h + Eu*gamma2*gamma4 + N4x*(A11*N2x + A16*N2y) + N4y*(A16*N2x + A66*N2y)) + detJ*r22*wij*(-0.25*A66*N2x*N4y*alphat/h + N4x*(A12*N2y + A16*N2x) + N4y*(A26*N2y + A66*N2x))) + r12*(detJ*r21*wij*(-0.25*A66*N2y*N4x*alphat/h + N4x*(A16*N2x + A66*N2y) + N4y*(A12*N2x + A26*N2y)) + detJ*r22*wij*(0.25*A66*N2x*N4x*alphat/h + Ev*gamma2*gamma4 + N4x*(A26*N2y + A66*N2x) + N4y*(A22*N2y + A26*N2x)))
            k += 1
            KC0v[k] += detJ*r23**2*wij*(Ew*gamma2*gamma4 + N4x*(E45*N2y + E55*N2x) + N4y*(E44*N2y + E45*N2x)) + r21*(detJ*r21*wij*(0.25*A66*N2y*N4y*alphat/h + Eu*gamma2*gamma4 + N4x*(A11*N2x + A16*N2y) + N4y*(A16*N2x + A66*N2y)) + detJ*r22*wij*(-0.25*A66*N2x*N4y*alphat/h + N4x*(A12*N2y + A16*N2x) + N4y*(A26*N2y + A66*N2x))) + r22*(detJ*r21*wij*(-0.25*A66*N2y*N4x*alphat/h + N4x*(A16*N2x + A66*N2y) + N4y*(A12*N2x + A26*N2y)) + detJ*r22*wij*(0.25*A66*N2x*N4x*alphat/h + Ev*gamma2*gamma4 + N4x*(A26*N2y + A66*N2x) + N4y*(A22*N2y + A26*N2x)))
            k += 1
            KC0v[k] += detJ*r23*r33*wij*(Ew*gamma2*gamma4 + N4x*(E45*N2y + E55*N2x) + N4y*(E44*N2y + E45*N2x)) + r31*(detJ*r21*wij*(0.25*A66*N2y*N4y*alphat/h + Eu*gamma2*gamma4 + N4x*(A11*N2x + A16*N2y) + N4y*(A16*N2x + A66*N2y)) + detJ*r22*wij*(-0.25*A66*N2x*N4y*alphat/h + N4x*(A12*N2y + A16*N2x) + N4y*(A26*N2y + A66*N2x))) + r32*(detJ*r21*wij*(-0.25*A66*N2y*N4x*alphat/h + N4x*(A16*N2x + A66*N2y) + N4y*(A12*N2x + A26*N2y)) + detJ*r22*wij*(0.25*A66*N2x*N4x*alphat/h + Ev*gamma2*gamma4 + N4x*(A26*N2y + A66*N2x) + N4y*(A22*N2y + A26*N2x)))
            k += 1
            KC0v[k] += r11*(-N4*detJ*r23*wij*(E44*N2y + E45*N2x) + detJ*r21*wij*(-N4x*(B16*N2x + B66*N2y) - N4y*(B12*N2x + B26*N2y)) + detJ*r22*wij*(-N4x*(B26*N2y + B66*N2x) - N4y*(B22*N2y + B26*N2x))) + r12*(N4*detJ*r23*wij*(E45*N2y + E55*N2x) + detJ*r21*wij*(N4x*(B11*N2x + B16*N2y) + N4y*(B16*N2x + B66*N2y)) + detJ*r22*wij*(N4x*(B12*N2y + B16*N2x) + N4y*(B26*N2y + B66*N2x))) + r13*(-0.5*A66*N2x*N4*alphat*detJ*r22*wij/h + 0.5*A66*N2y*N4*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += r21*(-N4*detJ*r23*wij*(E44*N2y + E45*N2x) + detJ*r21*wij*(-N4x*(B16*N2x + B66*N2y) - N4y*(B12*N2x + B26*N2y)) + detJ*r22*wij*(-N4x*(B26*N2y + B66*N2x) - N4y*(B22*N2y + B26*N2x))) + r22*(N4*detJ*r23*wij*(E45*N2y + E55*N2x) + detJ*r21*wij*(N4x*(B11*N2x + B16*N2y) + N4y*(B16*N2x + B66*N2y)) + detJ*r22*wij*(N4x*(B12*N2y + B16*N2x) + N4y*(B26*N2y + B66*N2x))) + r23*(-0.5*A66*N2x*N4*alphat*detJ*r22*wij/h + 0.5*A66*N2y*N4*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += r31*(-N4*detJ*r23*wij*(E44*N2y + E45*N2x) + detJ*r21*wij*(-N4x*(B16*N2x + B66*N2y) - N4y*(B12*N2x + B26*N2y)) + detJ*r22*wij*(-N4x*(B26*N2y + B66*N2x) - N4y*(B22*N2y + B26*N2x))) + r32*(N4*detJ*r23*wij*(E45*N2y + E55*N2x) + detJ*r21*wij*(N4x*(B11*N2x + B16*N2y) + N4y*(B16*N2x + B66*N2y)) + detJ*r22*wij*(N4x*(B12*N2y + B16*N2x) + N4y*(B26*N2y + B66*N2x))) + r33*(-0.5*A66*N2x*N4*alphat*detJ*r22*wij/h + 0.5*A66*N2y*N4*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += detJ*r13*r33*wij*(Ew*gamma1*gamma2 + N1x*(E45*N2y + E55*N2x) + N1y*(E44*N2y + E45*N2x)) + r11*(detJ*r31*wij*(0.25*A66*N1y*N2y*alphat/h + Eu*gamma1*gamma2 + N1x*(A11*N2x + A16*N2y) + N1y*(A16*N2x + A66*N2y)) + detJ*r32*wij*(-0.25*A66*N1y*N2x*alphat/h + N1x*(A12*N2y + A16*N2x) + N1y*(A26*N2y + A66*N2x))) + r12*(detJ*r31*wij*(-0.25*A66*N1x*N2y*alphat/h + N1x*(A16*N2x + A66*N2y) + N1y*(A12*N2x + A26*N2y)) + detJ*r32*wij*(0.25*A66*N1x*N2x*alphat/h + Ev*gamma1*gamma2 + N1x*(A26*N2y + A66*N2x) + N1y*(A22*N2y + A26*N2x)))
            k += 1
            KC0v[k] += detJ*r23*r33*wij*(Ew*gamma1*gamma2 + N1x*(E45*N2y + E55*N2x) + N1y*(E44*N2y + E45*N2x)) + r21*(detJ*r31*wij*(0.25*A66*N1y*N2y*alphat/h + Eu*gamma1*gamma2 + N1x*(A11*N2x + A16*N2y) + N1y*(A16*N2x + A66*N2y)) + detJ*r32*wij*(-0.25*A66*N1y*N2x*alphat/h + N1x*(A12*N2y + A16*N2x) + N1y*(A26*N2y + A66*N2x))) + r22*(detJ*r31*wij*(-0.25*A66*N1x*N2y*alphat/h + N1x*(A16*N2x + A66*N2y) + N1y*(A12*N2x + A26*N2y)) + detJ*r32*wij*(0.25*A66*N1x*N2x*alphat/h + Ev*gamma1*gamma2 + N1x*(A26*N2y + A66*N2x) + N1y*(A22*N2y + A26*N2x)))
            k += 1
            KC0v[k] += detJ*r33**2*wij*(Ew*gamma1*gamma2 + N1x*(E45*N2y + E55*N2x) + N1y*(E44*N2y + E45*N2x)) + r31*(detJ*r31*wij*(0.25*A66*N1y*N2y*alphat/h + Eu*gamma1*gamma2 + N1x*(A11*N2x + A16*N2y) + N1y*(A16*N2x + A66*N2y)) + detJ*r32*wij*(-0.25*A66*N1y*N2x*alphat/h + N1x*(A12*N2y + A16*N2x) + N1y*(A26*N2y + A66*N2x))) + r32*(detJ*r31*wij*(-0.25*A66*N1x*N2y*alphat/h + N1x*(A16*N2x + A66*N2y) + N1y*(A12*N2x + A26*N2y)) + detJ*r32*wij*(0.25*A66*N1x*N2x*alphat/h + Ev*gamma1*gamma2 + N1x*(A26*N2y + A66*N2x) + N1y*(A22*N2y + A26*N2x)))
            k += 1
            KC0v[k] += r11*(-N1*detJ*r33*wij*(E44*N2y + E45*N2x) + detJ*r31*wij*(-N1x*(B16*N2x + B66*N2y) - N1y*(B12*N2x + B26*N2y)) + detJ*r32*wij*(-N1x*(B26*N2y + B66*N2x) - N1y*(B22*N2y + B26*N2x))) + r12*(N1*detJ*r33*wij*(E45*N2y + E55*N2x) + detJ*r31*wij*(N1x*(B11*N2x + B16*N2y) + N1y*(B16*N2x + B66*N2y)) + detJ*r32*wij*(N1x*(B12*N2y + B16*N2x) + N1y*(B26*N2y + B66*N2x))) + r13*(-0.5*A66*N1*N2x*alphat*detJ*r32*wij/h + 0.5*A66*N1*N2y*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += r21*(-N1*detJ*r33*wij*(E44*N2y + E45*N2x) + detJ*r31*wij*(-N1x*(B16*N2x + B66*N2y) - N1y*(B12*N2x + B26*N2y)) + detJ*r32*wij*(-N1x*(B26*N2y + B66*N2x) - N1y*(B22*N2y + B26*N2x))) + r22*(N1*detJ*r33*wij*(E45*N2y + E55*N2x) + detJ*r31*wij*(N1x*(B11*N2x + B16*N2y) + N1y*(B16*N2x + B66*N2y)) + detJ*r32*wij*(N1x*(B12*N2y + B16*N2x) + N1y*(B26*N2y + B66*N2x))) + r23*(-0.5*A66*N1*N2x*alphat*detJ*r32*wij/h + 0.5*A66*N1*N2y*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += r31*(-N1*detJ*r33*wij*(E44*N2y + E45*N2x) + detJ*r31*wij*(-N1x*(B16*N2x + B66*N2y) - N1y*(B12*N2x + B26*N2y)) + detJ*r32*wij*(-N1x*(B26*N2y + B66*N2x) - N1y*(B22*N2y + B26*N2x))) + r32*(N1*detJ*r33*wij*(E45*N2y + E55*N2x) + detJ*r31*wij*(N1x*(B11*N2x + B16*N2y) + N1y*(B16*N2x + B66*N2y)) + detJ*r32*wij*(N1x*(B12*N2y + B16*N2x) + N1y*(B26*N2y + B66*N2x))) + r33*(-0.5*A66*N1*N2x*alphat*detJ*r32*wij/h + 0.5*A66*N1*N2y*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += detJ*r13*r33*wij*(Ew*gamma2**2 + N2x*(E45*N2y + E55*N2x) + N2y*(E44*N2y + E45*N2x)) + r11*(detJ*r31*wij*(0.25*A66*N2y**2*alphat/h + Eu*gamma2**2 + N2x*(A11*N2x + A16*N2y) + N2y*(A16*N2x + A66*N2y)) + detJ*r32*wij*(-0.25*A66*N2x*N2y*alphat/h + N2x*(A12*N2y + A16*N2x) + N2y*(A26*N2y + A66*N2x))) + r12*(detJ*r31*wij*(-0.25*A66*N2x*N2y*alphat/h + N2x*(A16*N2x + A66*N2y) + N2y*(A12*N2x + A26*N2y)) + detJ*r32*wij*(0.25*A66*N2x**2*alphat/h + Ev*gamma2**2 + N2x*(A26*N2y + A66*N2x) + N2y*(A22*N2y + A26*N2x)))
            k += 1
            KC0v[k] += detJ*r23*r33*wij*(Ew*gamma2**2 + N2x*(E45*N2y + E55*N2x) + N2y*(E44*N2y + E45*N2x)) + r21*(detJ*r31*wij*(0.25*A66*N2y**2*alphat/h + Eu*gamma2**2 + N2x*(A11*N2x + A16*N2y) + N2y*(A16*N2x + A66*N2y)) + detJ*r32*wij*(-0.25*A66*N2x*N2y*alphat/h + N2x*(A12*N2y + A16*N2x) + N2y*(A26*N2y + A66*N2x))) + r22*(detJ*r31*wij*(-0.25*A66*N2x*N2y*alphat/h + N2x*(A16*N2x + A66*N2y) + N2y*(A12*N2x + A26*N2y)) + detJ*r32*wij*(0.25*A66*N2x**2*alphat/h + Ev*gamma2**2 + N2x*(A26*N2y + A66*N2x) + N2y*(A22*N2y + A26*N2x)))
            k += 1
            KC0v[k] += detJ*r33**2*wij*(Ew*gamma2**2 + N2x*(E45*N2y + E55*N2x) + N2y*(E44*N2y + E45*N2x)) + r31*(detJ*r31*wij*(0.25*A66*N2y**2*alphat/h + Eu*gamma2**2 + N2x*(A11*N2x + A16*N2y) + N2y*(A16*N2x + A66*N2y)) + detJ*r32*wij*(-0.25*A66*N2x*N2y*alphat/h + N2x*(A12*N2y + A16*N2x) + N2y*(A26*N2y + A66*N2x))) + r32*(detJ*r31*wij*(-0.25*A66*N2x*N2y*alphat/h + N2x*(A16*N2x + A66*N2y) + N2y*(A12*N2x + A26*N2y)) + detJ*r32*wij*(0.25*A66*N2x**2*alphat/h + Ev*gamma2**2 + N2x*(A26*N2y + A66*N2x) + N2y*(A22*N2y + A26*N2x)))
            k += 1
            KC0v[k] += r11*(-N2*detJ*r33*wij*(E44*N2y + E45*N2x) + detJ*r31*wij*(-N2x*(B16*N2x + B66*N2y) - N2y*(B12*N2x + B26*N2y)) + detJ*r32*wij*(-N2x*(B26*N2y + B66*N2x) - N2y*(B22*N2y + B26*N2x))) + r12*(N2*detJ*r33*wij*(E45*N2y + E55*N2x) + detJ*r31*wij*(N2x*(B11*N2x + B16*N2y) + N2y*(B16*N2x + B66*N2y)) + detJ*r32*wij*(N2x*(B12*N2y + B16*N2x) + N2y*(B26*N2y + B66*N2x))) + r13*(-0.5*A66*N2*N2x*alphat*detJ*r32*wij/h + 0.5*A66*N2*N2y*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += r21*(-N2*detJ*r33*wij*(E44*N2y + E45*N2x) + detJ*r31*wij*(-N2x*(B16*N2x + B66*N2y) - N2y*(B12*N2x + B26*N2y)) + detJ*r32*wij*(-N2x*(B26*N2y + B66*N2x) - N2y*(B22*N2y + B26*N2x))) + r22*(N2*detJ*r33*wij*(E45*N2y + E55*N2x) + detJ*r31*wij*(N2x*(B11*N2x + B16*N2y) + N2y*(B16*N2x + B66*N2y)) + detJ*r32*wij*(N2x*(B12*N2y + B16*N2x) + N2y*(B26*N2y + B66*N2x))) + r23*(-0.5*A66*N2*N2x*alphat*detJ*r32*wij/h + 0.5*A66*N2*N2y*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += r31*(-N2*detJ*r33*wij*(E44*N2y + E45*N2x) + detJ*r31*wij*(-N2x*(B16*N2x + B66*N2y) - N2y*(B12*N2x + B26*N2y)) + detJ*r32*wij*(-N2x*(B26*N2y + B66*N2x) - N2y*(B22*N2y + B26*N2x))) + r32*(N2*detJ*r33*wij*(E45*N2y + E55*N2x) + detJ*r31*wij*(N2x*(B11*N2x + B16*N2y) + N2y*(B16*N2x + B66*N2y)) + detJ*r32*wij*(N2x*(B12*N2y + B16*N2x) + N2y*(B26*N2y + B66*N2x))) + r33*(-0.5*A66*N2*N2x*alphat*detJ*r32*wij/h + 0.5*A66*N2*N2y*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += detJ*r13*r33*wij*(Ew*gamma2*gamma3 + N3x*(E45*N2y + E55*N2x) + N3y*(E44*N2y + E45*N2x)) + r11*(detJ*r31*wij*(0.25*A66*N2y*N3y*alphat/h + Eu*gamma2*gamma3 + N3x*(A11*N2x + A16*N2y) + N3y*(A16*N2x + A66*N2y)) + detJ*r32*wij*(-0.25*A66*N2x*N3y*alphat/h + N3x*(A12*N2y + A16*N2x) + N3y*(A26*N2y + A66*N2x))) + r12*(detJ*r31*wij*(-0.25*A66*N2y*N3x*alphat/h + N3x*(A16*N2x + A66*N2y) + N3y*(A12*N2x + A26*N2y)) + detJ*r32*wij*(0.25*A66*N2x*N3x*alphat/h + Ev*gamma2*gamma3 + N3x*(A26*N2y + A66*N2x) + N3y*(A22*N2y + A26*N2x)))
            k += 1
            KC0v[k] += detJ*r23*r33*wij*(Ew*gamma2*gamma3 + N3x*(E45*N2y + E55*N2x) + N3y*(E44*N2y + E45*N2x)) + r21*(detJ*r31*wij*(0.25*A66*N2y*N3y*alphat/h + Eu*gamma2*gamma3 + N3x*(A11*N2x + A16*N2y) + N3y*(A16*N2x + A66*N2y)) + detJ*r32*wij*(-0.25*A66*N2x*N3y*alphat/h + N3x*(A12*N2y + A16*N2x) + N3y*(A26*N2y + A66*N2x))) + r22*(detJ*r31*wij*(-0.25*A66*N2y*N3x*alphat/h + N3x*(A16*N2x + A66*N2y) + N3y*(A12*N2x + A26*N2y)) + detJ*r32*wij*(0.25*A66*N2x*N3x*alphat/h + Ev*gamma2*gamma3 + N3x*(A26*N2y + A66*N2x) + N3y*(A22*N2y + A26*N2x)))
            k += 1
            KC0v[k] += detJ*r33**2*wij*(Ew*gamma2*gamma3 + N3x*(E45*N2y + E55*N2x) + N3y*(E44*N2y + E45*N2x)) + r31*(detJ*r31*wij*(0.25*A66*N2y*N3y*alphat/h + Eu*gamma2*gamma3 + N3x*(A11*N2x + A16*N2y) + N3y*(A16*N2x + A66*N2y)) + detJ*r32*wij*(-0.25*A66*N2x*N3y*alphat/h + N3x*(A12*N2y + A16*N2x) + N3y*(A26*N2y + A66*N2x))) + r32*(detJ*r31*wij*(-0.25*A66*N2y*N3x*alphat/h + N3x*(A16*N2x + A66*N2y) + N3y*(A12*N2x + A26*N2y)) + detJ*r32*wij*(0.25*A66*N2x*N3x*alphat/h + Ev*gamma2*gamma3 + N3x*(A26*N2y + A66*N2x) + N3y*(A22*N2y + A26*N2x)))
            k += 1
            KC0v[k] += r11*(-N3*detJ*r33*wij*(E44*N2y + E45*N2x) + detJ*r31*wij*(-N3x*(B16*N2x + B66*N2y) - N3y*(B12*N2x + B26*N2y)) + detJ*r32*wij*(-N3x*(B26*N2y + B66*N2x) - N3y*(B22*N2y + B26*N2x))) + r12*(N3*detJ*r33*wij*(E45*N2y + E55*N2x) + detJ*r31*wij*(N3x*(B11*N2x + B16*N2y) + N3y*(B16*N2x + B66*N2y)) + detJ*r32*wij*(N3x*(B12*N2y + B16*N2x) + N3y*(B26*N2y + B66*N2x))) + r13*(-0.5*A66*N2x*N3*alphat*detJ*r32*wij/h + 0.5*A66*N2y*N3*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += r21*(-N3*detJ*r33*wij*(E44*N2y + E45*N2x) + detJ*r31*wij*(-N3x*(B16*N2x + B66*N2y) - N3y*(B12*N2x + B26*N2y)) + detJ*r32*wij*(-N3x*(B26*N2y + B66*N2x) - N3y*(B22*N2y + B26*N2x))) + r22*(N3*detJ*r33*wij*(E45*N2y + E55*N2x) + detJ*r31*wij*(N3x*(B11*N2x + B16*N2y) + N3y*(B16*N2x + B66*N2y)) + detJ*r32*wij*(N3x*(B12*N2y + B16*N2x) + N3y*(B26*N2y + B66*N2x))) + r23*(-0.5*A66*N2x*N3*alphat*detJ*r32*wij/h + 0.5*A66*N2y*N3*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += r31*(-N3*detJ*r33*wij*(E44*N2y + E45*N2x) + detJ*r31*wij*(-N3x*(B16*N2x + B66*N2y) - N3y*(B12*N2x + B26*N2y)) + detJ*r32*wij*(-N3x*(B26*N2y + B66*N2x) - N3y*(B22*N2y + B26*N2x))) + r32*(N3*detJ*r33*wij*(E45*N2y + E55*N2x) + detJ*r31*wij*(N3x*(B11*N2x + B16*N2y) + N3y*(B16*N2x + B66*N2y)) + detJ*r32*wij*(N3x*(B12*N2y + B16*N2x) + N3y*(B26*N2y + B66*N2x))) + r33*(-0.5*A66*N2x*N3*alphat*detJ*r32*wij/h + 0.5*A66*N2y*N3*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += detJ*r13*r33*wij*(Ew*gamma2*gamma4 + N4x*(E45*N2y + E55*N2x) + N4y*(E44*N2y + E45*N2x)) + r11*(detJ*r31*wij*(0.25*A66*N2y*N4y*alphat/h + Eu*gamma2*gamma4 + N4x*(A11*N2x + A16*N2y) + N4y*(A16*N2x + A66*N2y)) + detJ*r32*wij*(-0.25*A66*N2x*N4y*alphat/h + N4x*(A12*N2y + A16*N2x) + N4y*(A26*N2y + A66*N2x))) + r12*(detJ*r31*wij*(-0.25*A66*N2y*N4x*alphat/h + N4x*(A16*N2x + A66*N2y) + N4y*(A12*N2x + A26*N2y)) + detJ*r32*wij*(0.25*A66*N2x*N4x*alphat/h + Ev*gamma2*gamma4 + N4x*(A26*N2y + A66*N2x) + N4y*(A22*N2y + A26*N2x)))
            k += 1
            KC0v[k] += detJ*r23*r33*wij*(Ew*gamma2*gamma4 + N4x*(E45*N2y + E55*N2x) + N4y*(E44*N2y + E45*N2x)) + r21*(detJ*r31*wij*(0.25*A66*N2y*N4y*alphat/h + Eu*gamma2*gamma4 + N4x*(A11*N2x + A16*N2y) + N4y*(A16*N2x + A66*N2y)) + detJ*r32*wij*(-0.25*A66*N2x*N4y*alphat/h + N4x*(A12*N2y + A16*N2x) + N4y*(A26*N2y + A66*N2x))) + r22*(detJ*r31*wij*(-0.25*A66*N2y*N4x*alphat/h + N4x*(A16*N2x + A66*N2y) + N4y*(A12*N2x + A26*N2y)) + detJ*r32*wij*(0.25*A66*N2x*N4x*alphat/h + Ev*gamma2*gamma4 + N4x*(A26*N2y + A66*N2x) + N4y*(A22*N2y + A26*N2x)))
            k += 1
            KC0v[k] += detJ*r33**2*wij*(Ew*gamma2*gamma4 + N4x*(E45*N2y + E55*N2x) + N4y*(E44*N2y + E45*N2x)) + r31*(detJ*r31*wij*(0.25*A66*N2y*N4y*alphat/h + Eu*gamma2*gamma4 + N4x*(A11*N2x + A16*N2y) + N4y*(A16*N2x + A66*N2y)) + detJ*r32*wij*(-0.25*A66*N2x*N4y*alphat/h + N4x*(A12*N2y + A16*N2x) + N4y*(A26*N2y + A66*N2x))) + r32*(detJ*r31*wij*(-0.25*A66*N2y*N4x*alphat/h + N4x*(A16*N2x + A66*N2y) + N4y*(A12*N2x + A26*N2y)) + detJ*r32*wij*(0.25*A66*N2x*N4x*alphat/h + Ev*gamma2*gamma4 + N4x*(A26*N2y + A66*N2x) + N4y*(A22*N2y + A26*N2x)))
            k += 1
            KC0v[k] += r11*(-N4*detJ*r33*wij*(E44*N2y + E45*N2x) + detJ*r31*wij*(-N4x*(B16*N2x + B66*N2y) - N4y*(B12*N2x + B26*N2y)) + detJ*r32*wij*(-N4x*(B26*N2y + B66*N2x) - N4y*(B22*N2y + B26*N2x))) + r12*(N4*detJ*r33*wij*(E45*N2y + E55*N2x) + detJ*r31*wij*(N4x*(B11*N2x + B16*N2y) + N4y*(B16*N2x + B66*N2y)) + detJ*r32*wij*(N4x*(B12*N2y + B16*N2x) + N4y*(B26*N2y + B66*N2x))) + r13*(-0.5*A66*N2x*N4*alphat*detJ*r32*wij/h + 0.5*A66*N2y*N4*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += r21*(-N4*detJ*r33*wij*(E44*N2y + E45*N2x) + detJ*r31*wij*(-N4x*(B16*N2x + B66*N2y) - N4y*(B12*N2x + B26*N2y)) + detJ*r32*wij*(-N4x*(B26*N2y + B66*N2x) - N4y*(B22*N2y + B26*N2x))) + r22*(N4*detJ*r33*wij*(E45*N2y + E55*N2x) + detJ*r31*wij*(N4x*(B11*N2x + B16*N2y) + N4y*(B16*N2x + B66*N2y)) + detJ*r32*wij*(N4x*(B12*N2y + B16*N2x) + N4y*(B26*N2y + B66*N2x))) + r23*(-0.5*A66*N2x*N4*alphat*detJ*r32*wij/h + 0.5*A66*N2y*N4*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += r31*(-N4*detJ*r33*wij*(E44*N2y + E45*N2x) + detJ*r31*wij*(-N4x*(B16*N2x + B66*N2y) - N4y*(B12*N2x + B26*N2y)) + detJ*r32*wij*(-N4x*(B26*N2y + B66*N2x) - N4y*(B22*N2y + B26*N2x))) + r32*(N4*detJ*r33*wij*(E45*N2y + E55*N2x) + detJ*r31*wij*(N4x*(B11*N2x + B16*N2y) + N4y*(B16*N2x + B66*N2y)) + detJ*r32*wij*(N4x*(B12*N2y + B16*N2x) + N4y*(B26*N2y + B66*N2x))) + r33*(-0.5*A66*N2x*N4*alphat*detJ*r32*wij/h + 0.5*A66*N2y*N4*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += r11*(0.5*A66*N1y*N2*alphat*detJ*r13*wij/h + detJ*r11*wij*(N1x*(-B12*N2y - B16*N2x) + N1y*(-B26*N2y - B66*N2x)) + detJ*r12*wij*(N1x*(B11*N2x + B16*N2y) + N1y*(B16*N2x + B66*N2y))) + r12*(-0.5*A66*N1x*N2*alphat*detJ*r13*wij/h + detJ*r11*wij*(N1x*(-B26*N2y - B66*N2x) + N1y*(-B22*N2y - B26*N2x)) + detJ*r12*wij*(N1x*(B16*N2x + B66*N2y) + N1y*(B12*N2x + B26*N2y))) + r13*(detJ*r11*wij*(-E44*N1y*N2 - E45*N1x*N2) + detJ*r12*wij*(E45*N1y*N2 + E55*N1x*N2))
            k += 1
            KC0v[k] += r21*(0.5*A66*N1y*N2*alphat*detJ*r13*wij/h + detJ*r11*wij*(N1x*(-B12*N2y - B16*N2x) + N1y*(-B26*N2y - B66*N2x)) + detJ*r12*wij*(N1x*(B11*N2x + B16*N2y) + N1y*(B16*N2x + B66*N2y))) + r22*(-0.5*A66*N1x*N2*alphat*detJ*r13*wij/h + detJ*r11*wij*(N1x*(-B26*N2y - B66*N2x) + N1y*(-B22*N2y - B26*N2x)) + detJ*r12*wij*(N1x*(B16*N2x + B66*N2y) + N1y*(B12*N2x + B26*N2y))) + r23*(detJ*r11*wij*(-E44*N1y*N2 - E45*N1x*N2) + detJ*r12*wij*(E45*N1y*N2 + E55*N1x*N2))
            k += 1
            KC0v[k] += r31*(0.5*A66*N1y*N2*alphat*detJ*r13*wij/h + detJ*r11*wij*(N1x*(-B12*N2y - B16*N2x) + N1y*(-B26*N2y - B66*N2x)) + detJ*r12*wij*(N1x*(B11*N2x + B16*N2y) + N1y*(B16*N2x + B66*N2y))) + r32*(-0.5*A66*N1x*N2*alphat*detJ*r13*wij/h + detJ*r11*wij*(N1x*(-B26*N2y - B66*N2x) + N1y*(-B22*N2y - B26*N2x)) + detJ*r12*wij*(N1x*(B16*N2x + B66*N2y) + N1y*(B12*N2x + B26*N2y))) + r33*(detJ*r11*wij*(-E44*N1y*N2 - E45*N1x*N2) + detJ*r12*wij*(E45*N1y*N2 + E55*N1x*N2))
            k += 1
            KC0v[k] += A66*N1*N2*alphat*detJ*r13**2*wij/h + r11*(detJ*r11*wij*(E44*N1*N2 + Erx*gamma1*gamma2 - N1x*(-D26*N2y - D66*N2x) - N1y*(-D22*N2y - D26*N2x)) + detJ*r12*wij*(-E45*N1*N2 - N1x*(D16*N2x + D66*N2y) - N1y*(D12*N2x + D26*N2y))) + r12*(detJ*r11*wij*(-E45*N1*N2 + N1x*(-D12*N2y - D16*N2x) + N1y*(-D26*N2y - D66*N2x)) + detJ*r12*wij*(E55*N1*N2 + Ery*gamma1*gamma2 + N1x*(D11*N2x + D16*N2y) + N1y*(D16*N2x + D66*N2y)))
            k += 1
            KC0v[k] += A66*N1*N2*alphat*detJ*r13*r23*wij/h + r21*(detJ*r11*wij*(E44*N1*N2 + Erx*gamma1*gamma2 - N1x*(-D26*N2y - D66*N2x) - N1y*(-D22*N2y - D26*N2x)) + detJ*r12*wij*(-E45*N1*N2 - N1x*(D16*N2x + D66*N2y) - N1y*(D12*N2x + D26*N2y))) + r22*(detJ*r11*wij*(-E45*N1*N2 + N1x*(-D12*N2y - D16*N2x) + N1y*(-D26*N2y - D66*N2x)) + detJ*r12*wij*(E55*N1*N2 + Ery*gamma1*gamma2 + N1x*(D11*N2x + D16*N2y) + N1y*(D16*N2x + D66*N2y)))
            k += 1
            KC0v[k] += A66*N1*N2*alphat*detJ*r13*r33*wij/h + r31*(detJ*r11*wij*(E44*N1*N2 + Erx*gamma1*gamma2 - N1x*(-D26*N2y - D66*N2x) - N1y*(-D22*N2y - D26*N2x)) + detJ*r12*wij*(-E45*N1*N2 - N1x*(D16*N2x + D66*N2y) - N1y*(D12*N2x + D26*N2y))) + r32*(detJ*r11*wij*(-E45*N1*N2 + N1x*(-D12*N2y - D16*N2x) + N1y*(-D26*N2y - D66*N2x)) + detJ*r12*wij*(E55*N1*N2 + Ery*gamma1*gamma2 + N1x*(D11*N2x + D16*N2y) + N1y*(D16*N2x + D66*N2y)))
            k += 1
            KC0v[k] += r11*(0.5*A66*N2*N2y*alphat*detJ*r13*wij/h + detJ*r11*wij*(N2x*(-B12*N2y - B16*N2x) + N2y*(-B26*N2y - B66*N2x)) + detJ*r12*wij*(N2x*(B11*N2x + B16*N2y) + N2y*(B16*N2x + B66*N2y))) + r12*(-0.5*A66*N2*N2x*alphat*detJ*r13*wij/h + detJ*r11*wij*(N2x*(-B26*N2y - B66*N2x) + N2y*(-B22*N2y - B26*N2x)) + detJ*r12*wij*(N2x*(B16*N2x + B66*N2y) + N2y*(B12*N2x + B26*N2y))) + r13*(detJ*r11*wij*(-E44*N2*N2y - E45*N2*N2x) + detJ*r12*wij*(E45*N2*N2y + E55*N2*N2x))
            k += 1
            KC0v[k] += r21*(0.5*A66*N2*N2y*alphat*detJ*r13*wij/h + detJ*r11*wij*(N2x*(-B12*N2y - B16*N2x) + N2y*(-B26*N2y - B66*N2x)) + detJ*r12*wij*(N2x*(B11*N2x + B16*N2y) + N2y*(B16*N2x + B66*N2y))) + r22*(-0.5*A66*N2*N2x*alphat*detJ*r13*wij/h + detJ*r11*wij*(N2x*(-B26*N2y - B66*N2x) + N2y*(-B22*N2y - B26*N2x)) + detJ*r12*wij*(N2x*(B16*N2x + B66*N2y) + N2y*(B12*N2x + B26*N2y))) + r23*(detJ*r11*wij*(-E44*N2*N2y - E45*N2*N2x) + detJ*r12*wij*(E45*N2*N2y + E55*N2*N2x))
            k += 1
            KC0v[k] += r31*(0.5*A66*N2*N2y*alphat*detJ*r13*wij/h + detJ*r11*wij*(N2x*(-B12*N2y - B16*N2x) + N2y*(-B26*N2y - B66*N2x)) + detJ*r12*wij*(N2x*(B11*N2x + B16*N2y) + N2y*(B16*N2x + B66*N2y))) + r32*(-0.5*A66*N2*N2x*alphat*detJ*r13*wij/h + detJ*r11*wij*(N2x*(-B26*N2y - B66*N2x) + N2y*(-B22*N2y - B26*N2x)) + detJ*r12*wij*(N2x*(B16*N2x + B66*N2y) + N2y*(B12*N2x + B26*N2y))) + r33*(detJ*r11*wij*(-E44*N2*N2y - E45*N2*N2x) + detJ*r12*wij*(E45*N2*N2y + E55*N2*N2x))
            k += 1
            KC0v[k] += A66*N2**2*alphat*detJ*r13**2*wij/h + r11*(detJ*r11*wij*(E44*N2**2 + Erx*gamma2**2 - N2x*(-D26*N2y - D66*N2x) - N2y*(-D22*N2y - D26*N2x)) + detJ*r12*wij*(-E45*N2**2 - N2x*(D16*N2x + D66*N2y) - N2y*(D12*N2x + D26*N2y))) + r12*(detJ*r11*wij*(-E45*N2**2 + N2x*(-D12*N2y - D16*N2x) + N2y*(-D26*N2y - D66*N2x)) + detJ*r12*wij*(E55*N2**2 + Ery*gamma2**2 + N2x*(D11*N2x + D16*N2y) + N2y*(D16*N2x + D66*N2y)))
            k += 1
            KC0v[k] += A66*N2**2*alphat*detJ*r13*r23*wij/h + r21*(detJ*r11*wij*(E44*N2**2 + Erx*gamma2**2 - N2x*(-D26*N2y - D66*N2x) - N2y*(-D22*N2y - D26*N2x)) + detJ*r12*wij*(-E45*N2**2 - N2x*(D16*N2x + D66*N2y) - N2y*(D12*N2x + D26*N2y))) + r22*(detJ*r11*wij*(-E45*N2**2 + N2x*(-D12*N2y - D16*N2x) + N2y*(-D26*N2y - D66*N2x)) + detJ*r12*wij*(E55*N2**2 + Ery*gamma2**2 + N2x*(D11*N2x + D16*N2y) + N2y*(D16*N2x + D66*N2y)))
            k += 1
            KC0v[k] += A66*N2**2*alphat*detJ*r13*r33*wij/h + r31*(detJ*r11*wij*(E44*N2**2 + Erx*gamma2**2 - N2x*(-D26*N2y - D66*N2x) - N2y*(-D22*N2y - D26*N2x)) + detJ*r12*wij*(-E45*N2**2 - N2x*(D16*N2x + D66*N2y) - N2y*(D12*N2x + D26*N2y))) + r32*(detJ*r11*wij*(-E45*N2**2 + N2x*(-D12*N2y - D16*N2x) + N2y*(-D26*N2y - D66*N2x)) + detJ*r12*wij*(E55*N2**2 + Ery*gamma2**2 + N2x*(D11*N2x + D16*N2y) + N2y*(D16*N2x + D66*N2y)))
            k += 1
            KC0v[k] += r11*(0.5*A66*N2*N3y*alphat*detJ*r13*wij/h + detJ*r11*wij*(N3x*(-B12*N2y - B16*N2x) + N3y*(-B26*N2y - B66*N2x)) + detJ*r12*wij*(N3x*(B11*N2x + B16*N2y) + N3y*(B16*N2x + B66*N2y))) + r12*(-0.5*A66*N2*N3x*alphat*detJ*r13*wij/h + detJ*r11*wij*(N3x*(-B26*N2y - B66*N2x) + N3y*(-B22*N2y - B26*N2x)) + detJ*r12*wij*(N3x*(B16*N2x + B66*N2y) + N3y*(B12*N2x + B26*N2y))) + r13*(detJ*r11*wij*(-E44*N2*N3y - E45*N2*N3x) + detJ*r12*wij*(E45*N2*N3y + E55*N2*N3x))
            k += 1
            KC0v[k] += r21*(0.5*A66*N2*N3y*alphat*detJ*r13*wij/h + detJ*r11*wij*(N3x*(-B12*N2y - B16*N2x) + N3y*(-B26*N2y - B66*N2x)) + detJ*r12*wij*(N3x*(B11*N2x + B16*N2y) + N3y*(B16*N2x + B66*N2y))) + r22*(-0.5*A66*N2*N3x*alphat*detJ*r13*wij/h + detJ*r11*wij*(N3x*(-B26*N2y - B66*N2x) + N3y*(-B22*N2y - B26*N2x)) + detJ*r12*wij*(N3x*(B16*N2x + B66*N2y) + N3y*(B12*N2x + B26*N2y))) + r23*(detJ*r11*wij*(-E44*N2*N3y - E45*N2*N3x) + detJ*r12*wij*(E45*N2*N3y + E55*N2*N3x))
            k += 1
            KC0v[k] += r31*(0.5*A66*N2*N3y*alphat*detJ*r13*wij/h + detJ*r11*wij*(N3x*(-B12*N2y - B16*N2x) + N3y*(-B26*N2y - B66*N2x)) + detJ*r12*wij*(N3x*(B11*N2x + B16*N2y) + N3y*(B16*N2x + B66*N2y))) + r32*(-0.5*A66*N2*N3x*alphat*detJ*r13*wij/h + detJ*r11*wij*(N3x*(-B26*N2y - B66*N2x) + N3y*(-B22*N2y - B26*N2x)) + detJ*r12*wij*(N3x*(B16*N2x + B66*N2y) + N3y*(B12*N2x + B26*N2y))) + r33*(detJ*r11*wij*(-E44*N2*N3y - E45*N2*N3x) + detJ*r12*wij*(E45*N2*N3y + E55*N2*N3x))
            k += 1
            KC0v[k] += A66*N2*N3*alphat*detJ*r13**2*wij/h + r11*(detJ*r11*wij*(E44*N2*N3 + Erx*gamma2*gamma3 - N3x*(-D26*N2y - D66*N2x) - N3y*(-D22*N2y - D26*N2x)) + detJ*r12*wij*(-E45*N2*N3 - N3x*(D16*N2x + D66*N2y) - N3y*(D12*N2x + D26*N2y))) + r12*(detJ*r11*wij*(-E45*N2*N3 + N3x*(-D12*N2y - D16*N2x) + N3y*(-D26*N2y - D66*N2x)) + detJ*r12*wij*(E55*N2*N3 + Ery*gamma2*gamma3 + N3x*(D11*N2x + D16*N2y) + N3y*(D16*N2x + D66*N2y)))
            k += 1
            KC0v[k] += A66*N2*N3*alphat*detJ*r13*r23*wij/h + r21*(detJ*r11*wij*(E44*N2*N3 + Erx*gamma2*gamma3 - N3x*(-D26*N2y - D66*N2x) - N3y*(-D22*N2y - D26*N2x)) + detJ*r12*wij*(-E45*N2*N3 - N3x*(D16*N2x + D66*N2y) - N3y*(D12*N2x + D26*N2y))) + r22*(detJ*r11*wij*(-E45*N2*N3 + N3x*(-D12*N2y - D16*N2x) + N3y*(-D26*N2y - D66*N2x)) + detJ*r12*wij*(E55*N2*N3 + Ery*gamma2*gamma3 + N3x*(D11*N2x + D16*N2y) + N3y*(D16*N2x + D66*N2y)))
            k += 1
            KC0v[k] += A66*N2*N3*alphat*detJ*r13*r33*wij/h + r31*(detJ*r11*wij*(E44*N2*N3 + Erx*gamma2*gamma3 - N3x*(-D26*N2y - D66*N2x) - N3y*(-D22*N2y - D26*N2x)) + detJ*r12*wij*(-E45*N2*N3 - N3x*(D16*N2x + D66*N2y) - N3y*(D12*N2x + D26*N2y))) + r32*(detJ*r11*wij*(-E45*N2*N3 + N3x*(-D12*N2y - D16*N2x) + N3y*(-D26*N2y - D66*N2x)) + detJ*r12*wij*(E55*N2*N3 + Ery*gamma2*gamma3 + N3x*(D11*N2x + D16*N2y) + N3y*(D16*N2x + D66*N2y)))
            k += 1
            KC0v[k] += r11*(0.5*A66*N2*N4y*alphat*detJ*r13*wij/h + detJ*r11*wij*(N4x*(-B12*N2y - B16*N2x) + N4y*(-B26*N2y - B66*N2x)) + detJ*r12*wij*(N4x*(B11*N2x + B16*N2y) + N4y*(B16*N2x + B66*N2y))) + r12*(-0.5*A66*N2*N4x*alphat*detJ*r13*wij/h + detJ*r11*wij*(N4x*(-B26*N2y - B66*N2x) + N4y*(-B22*N2y - B26*N2x)) + detJ*r12*wij*(N4x*(B16*N2x + B66*N2y) + N4y*(B12*N2x + B26*N2y))) + r13*(detJ*r11*wij*(-E44*N2*N4y - E45*N2*N4x) + detJ*r12*wij*(E45*N2*N4y + E55*N2*N4x))
            k += 1
            KC0v[k] += r21*(0.5*A66*N2*N4y*alphat*detJ*r13*wij/h + detJ*r11*wij*(N4x*(-B12*N2y - B16*N2x) + N4y*(-B26*N2y - B66*N2x)) + detJ*r12*wij*(N4x*(B11*N2x + B16*N2y) + N4y*(B16*N2x + B66*N2y))) + r22*(-0.5*A66*N2*N4x*alphat*detJ*r13*wij/h + detJ*r11*wij*(N4x*(-B26*N2y - B66*N2x) + N4y*(-B22*N2y - B26*N2x)) + detJ*r12*wij*(N4x*(B16*N2x + B66*N2y) + N4y*(B12*N2x + B26*N2y))) + r23*(detJ*r11*wij*(-E44*N2*N4y - E45*N2*N4x) + detJ*r12*wij*(E45*N2*N4y + E55*N2*N4x))
            k += 1
            KC0v[k] += r31*(0.5*A66*N2*N4y*alphat*detJ*r13*wij/h + detJ*r11*wij*(N4x*(-B12*N2y - B16*N2x) + N4y*(-B26*N2y - B66*N2x)) + detJ*r12*wij*(N4x*(B11*N2x + B16*N2y) + N4y*(B16*N2x + B66*N2y))) + r32*(-0.5*A66*N2*N4x*alphat*detJ*r13*wij/h + detJ*r11*wij*(N4x*(-B26*N2y - B66*N2x) + N4y*(-B22*N2y - B26*N2x)) + detJ*r12*wij*(N4x*(B16*N2x + B66*N2y) + N4y*(B12*N2x + B26*N2y))) + r33*(detJ*r11*wij*(-E44*N2*N4y - E45*N2*N4x) + detJ*r12*wij*(E45*N2*N4y + E55*N2*N4x))
            k += 1
            KC0v[k] += A66*N2*N4*alphat*detJ*r13**2*wij/h + r11*(detJ*r11*wij*(E44*N2*N4 + Erx*gamma2*gamma4 - N4x*(-D26*N2y - D66*N2x) - N4y*(-D22*N2y - D26*N2x)) + detJ*r12*wij*(-E45*N2*N4 - N4x*(D16*N2x + D66*N2y) - N4y*(D12*N2x + D26*N2y))) + r12*(detJ*r11*wij*(-E45*N2*N4 + N4x*(-D12*N2y - D16*N2x) + N4y*(-D26*N2y - D66*N2x)) + detJ*r12*wij*(E55*N2*N4 + Ery*gamma2*gamma4 + N4x*(D11*N2x + D16*N2y) + N4y*(D16*N2x + D66*N2y)))
            k += 1
            KC0v[k] += A66*N2*N4*alphat*detJ*r13*r23*wij/h + r21*(detJ*r11*wij*(E44*N2*N4 + Erx*gamma2*gamma4 - N4x*(-D26*N2y - D66*N2x) - N4y*(-D22*N2y - D26*N2x)) + detJ*r12*wij*(-E45*N2*N4 - N4x*(D16*N2x + D66*N2y) - N4y*(D12*N2x + D26*N2y))) + r22*(detJ*r11*wij*(-E45*N2*N4 + N4x*(-D12*N2y - D16*N2x) + N4y*(-D26*N2y - D66*N2x)) + detJ*r12*wij*(E55*N2*N4 + Ery*gamma2*gamma4 + N4x*(D11*N2x + D16*N2y) + N4y*(D16*N2x + D66*N2y)))
            k += 1
            KC0v[k] += A66*N2*N4*alphat*detJ*r13*r33*wij/h + r31*(detJ*r11*wij*(E44*N2*N4 + Erx*gamma2*gamma4 - N4x*(-D26*N2y - D66*N2x) - N4y*(-D22*N2y - D26*N2x)) + detJ*r12*wij*(-E45*N2*N4 - N4x*(D16*N2x + D66*N2y) - N4y*(D12*N2x + D26*N2y))) + r32*(detJ*r11*wij*(-E45*N2*N4 + N4x*(-D12*N2y - D16*N2x) + N4y*(-D26*N2y - D66*N2x)) + detJ*r12*wij*(E55*N2*N4 + Ery*gamma2*gamma4 + N4x*(D11*N2x + D16*N2y) + N4y*(D16*N2x + D66*N2y)))
            k += 1
            KC0v[k] += r11*(0.5*A66*N1y*N2*alphat*detJ*r23*wij/h + detJ*r21*wij*(N1x*(-B12*N2y - B16*N2x) + N1y*(-B26*N2y - B66*N2x)) + detJ*r22*wij*(N1x*(B11*N2x + B16*N2y) + N1y*(B16*N2x + B66*N2y))) + r12*(-0.5*A66*N1x*N2*alphat*detJ*r23*wij/h + detJ*r21*wij*(N1x*(-B26*N2y - B66*N2x) + N1y*(-B22*N2y - B26*N2x)) + detJ*r22*wij*(N1x*(B16*N2x + B66*N2y) + N1y*(B12*N2x + B26*N2y))) + r13*(detJ*r21*wij*(-E44*N1y*N2 - E45*N1x*N2) + detJ*r22*wij*(E45*N1y*N2 + E55*N1x*N2))
            k += 1
            KC0v[k] += r21*(0.5*A66*N1y*N2*alphat*detJ*r23*wij/h + detJ*r21*wij*(N1x*(-B12*N2y - B16*N2x) + N1y*(-B26*N2y - B66*N2x)) + detJ*r22*wij*(N1x*(B11*N2x + B16*N2y) + N1y*(B16*N2x + B66*N2y))) + r22*(-0.5*A66*N1x*N2*alphat*detJ*r23*wij/h + detJ*r21*wij*(N1x*(-B26*N2y - B66*N2x) + N1y*(-B22*N2y - B26*N2x)) + detJ*r22*wij*(N1x*(B16*N2x + B66*N2y) + N1y*(B12*N2x + B26*N2y))) + r23*(detJ*r21*wij*(-E44*N1y*N2 - E45*N1x*N2) + detJ*r22*wij*(E45*N1y*N2 + E55*N1x*N2))
            k += 1
            KC0v[k] += r31*(0.5*A66*N1y*N2*alphat*detJ*r23*wij/h + detJ*r21*wij*(N1x*(-B12*N2y - B16*N2x) + N1y*(-B26*N2y - B66*N2x)) + detJ*r22*wij*(N1x*(B11*N2x + B16*N2y) + N1y*(B16*N2x + B66*N2y))) + r32*(-0.5*A66*N1x*N2*alphat*detJ*r23*wij/h + detJ*r21*wij*(N1x*(-B26*N2y - B66*N2x) + N1y*(-B22*N2y - B26*N2x)) + detJ*r22*wij*(N1x*(B16*N2x + B66*N2y) + N1y*(B12*N2x + B26*N2y))) + r33*(detJ*r21*wij*(-E44*N1y*N2 - E45*N1x*N2) + detJ*r22*wij*(E45*N1y*N2 + E55*N1x*N2))
            k += 1
            KC0v[k] += A66*N1*N2*alphat*detJ*r13*r23*wij/h + r11*(detJ*r21*wij*(E44*N1*N2 + Erx*gamma1*gamma2 - N1x*(-D26*N2y - D66*N2x) - N1y*(-D22*N2y - D26*N2x)) + detJ*r22*wij*(-E45*N1*N2 - N1x*(D16*N2x + D66*N2y) - N1y*(D12*N2x + D26*N2y))) + r12*(detJ*r21*wij*(-E45*N1*N2 + N1x*(-D12*N2y - D16*N2x) + N1y*(-D26*N2y - D66*N2x)) + detJ*r22*wij*(E55*N1*N2 + Ery*gamma1*gamma2 + N1x*(D11*N2x + D16*N2y) + N1y*(D16*N2x + D66*N2y)))
            k += 1
            KC0v[k] += A66*N1*N2*alphat*detJ*r23**2*wij/h + r21*(detJ*r21*wij*(E44*N1*N2 + Erx*gamma1*gamma2 - N1x*(-D26*N2y - D66*N2x) - N1y*(-D22*N2y - D26*N2x)) + detJ*r22*wij*(-E45*N1*N2 - N1x*(D16*N2x + D66*N2y) - N1y*(D12*N2x + D26*N2y))) + r22*(detJ*r21*wij*(-E45*N1*N2 + N1x*(-D12*N2y - D16*N2x) + N1y*(-D26*N2y - D66*N2x)) + detJ*r22*wij*(E55*N1*N2 + Ery*gamma1*gamma2 + N1x*(D11*N2x + D16*N2y) + N1y*(D16*N2x + D66*N2y)))
            k += 1
            KC0v[k] += A66*N1*N2*alphat*detJ*r23*r33*wij/h + r31*(detJ*r21*wij*(E44*N1*N2 + Erx*gamma1*gamma2 - N1x*(-D26*N2y - D66*N2x) - N1y*(-D22*N2y - D26*N2x)) + detJ*r22*wij*(-E45*N1*N2 - N1x*(D16*N2x + D66*N2y) - N1y*(D12*N2x + D26*N2y))) + r32*(detJ*r21*wij*(-E45*N1*N2 + N1x*(-D12*N2y - D16*N2x) + N1y*(-D26*N2y - D66*N2x)) + detJ*r22*wij*(E55*N1*N2 + Ery*gamma1*gamma2 + N1x*(D11*N2x + D16*N2y) + N1y*(D16*N2x + D66*N2y)))
            k += 1
            KC0v[k] += r11*(0.5*A66*N2*N2y*alphat*detJ*r23*wij/h + detJ*r21*wij*(N2x*(-B12*N2y - B16*N2x) + N2y*(-B26*N2y - B66*N2x)) + detJ*r22*wij*(N2x*(B11*N2x + B16*N2y) + N2y*(B16*N2x + B66*N2y))) + r12*(-0.5*A66*N2*N2x*alphat*detJ*r23*wij/h + detJ*r21*wij*(N2x*(-B26*N2y - B66*N2x) + N2y*(-B22*N2y - B26*N2x)) + detJ*r22*wij*(N2x*(B16*N2x + B66*N2y) + N2y*(B12*N2x + B26*N2y))) + r13*(detJ*r21*wij*(-E44*N2*N2y - E45*N2*N2x) + detJ*r22*wij*(E45*N2*N2y + E55*N2*N2x))
            k += 1
            KC0v[k] += r21*(0.5*A66*N2*N2y*alphat*detJ*r23*wij/h + detJ*r21*wij*(N2x*(-B12*N2y - B16*N2x) + N2y*(-B26*N2y - B66*N2x)) + detJ*r22*wij*(N2x*(B11*N2x + B16*N2y) + N2y*(B16*N2x + B66*N2y))) + r22*(-0.5*A66*N2*N2x*alphat*detJ*r23*wij/h + detJ*r21*wij*(N2x*(-B26*N2y - B66*N2x) + N2y*(-B22*N2y - B26*N2x)) + detJ*r22*wij*(N2x*(B16*N2x + B66*N2y) + N2y*(B12*N2x + B26*N2y))) + r23*(detJ*r21*wij*(-E44*N2*N2y - E45*N2*N2x) + detJ*r22*wij*(E45*N2*N2y + E55*N2*N2x))
            k += 1
            KC0v[k] += r31*(0.5*A66*N2*N2y*alphat*detJ*r23*wij/h + detJ*r21*wij*(N2x*(-B12*N2y - B16*N2x) + N2y*(-B26*N2y - B66*N2x)) + detJ*r22*wij*(N2x*(B11*N2x + B16*N2y) + N2y*(B16*N2x + B66*N2y))) + r32*(-0.5*A66*N2*N2x*alphat*detJ*r23*wij/h + detJ*r21*wij*(N2x*(-B26*N2y - B66*N2x) + N2y*(-B22*N2y - B26*N2x)) + detJ*r22*wij*(N2x*(B16*N2x + B66*N2y) + N2y*(B12*N2x + B26*N2y))) + r33*(detJ*r21*wij*(-E44*N2*N2y - E45*N2*N2x) + detJ*r22*wij*(E45*N2*N2y + E55*N2*N2x))
            k += 1
            KC0v[k] += A66*N2**2*alphat*detJ*r13*r23*wij/h + r11*(detJ*r21*wij*(E44*N2**2 + Erx*gamma2**2 - N2x*(-D26*N2y - D66*N2x) - N2y*(-D22*N2y - D26*N2x)) + detJ*r22*wij*(-E45*N2**2 - N2x*(D16*N2x + D66*N2y) - N2y*(D12*N2x + D26*N2y))) + r12*(detJ*r21*wij*(-E45*N2**2 + N2x*(-D12*N2y - D16*N2x) + N2y*(-D26*N2y - D66*N2x)) + detJ*r22*wij*(E55*N2**2 + Ery*gamma2**2 + N2x*(D11*N2x + D16*N2y) + N2y*(D16*N2x + D66*N2y)))
            k += 1
            KC0v[k] += A66*N2**2*alphat*detJ*r23**2*wij/h + r21*(detJ*r21*wij*(E44*N2**2 + Erx*gamma2**2 - N2x*(-D26*N2y - D66*N2x) - N2y*(-D22*N2y - D26*N2x)) + detJ*r22*wij*(-E45*N2**2 - N2x*(D16*N2x + D66*N2y) - N2y*(D12*N2x + D26*N2y))) + r22*(detJ*r21*wij*(-E45*N2**2 + N2x*(-D12*N2y - D16*N2x) + N2y*(-D26*N2y - D66*N2x)) + detJ*r22*wij*(E55*N2**2 + Ery*gamma2**2 + N2x*(D11*N2x + D16*N2y) + N2y*(D16*N2x + D66*N2y)))
            k += 1
            KC0v[k] += A66*N2**2*alphat*detJ*r23*r33*wij/h + r31*(detJ*r21*wij*(E44*N2**2 + Erx*gamma2**2 - N2x*(-D26*N2y - D66*N2x) - N2y*(-D22*N2y - D26*N2x)) + detJ*r22*wij*(-E45*N2**2 - N2x*(D16*N2x + D66*N2y) - N2y*(D12*N2x + D26*N2y))) + r32*(detJ*r21*wij*(-E45*N2**2 + N2x*(-D12*N2y - D16*N2x) + N2y*(-D26*N2y - D66*N2x)) + detJ*r22*wij*(E55*N2**2 + Ery*gamma2**2 + N2x*(D11*N2x + D16*N2y) + N2y*(D16*N2x + D66*N2y)))
            k += 1
            KC0v[k] += r11*(0.5*A66*N2*N3y*alphat*detJ*r23*wij/h + detJ*r21*wij*(N3x*(-B12*N2y - B16*N2x) + N3y*(-B26*N2y - B66*N2x)) + detJ*r22*wij*(N3x*(B11*N2x + B16*N2y) + N3y*(B16*N2x + B66*N2y))) + r12*(-0.5*A66*N2*N3x*alphat*detJ*r23*wij/h + detJ*r21*wij*(N3x*(-B26*N2y - B66*N2x) + N3y*(-B22*N2y - B26*N2x)) + detJ*r22*wij*(N3x*(B16*N2x + B66*N2y) + N3y*(B12*N2x + B26*N2y))) + r13*(detJ*r21*wij*(-E44*N2*N3y - E45*N2*N3x) + detJ*r22*wij*(E45*N2*N3y + E55*N2*N3x))
            k += 1
            KC0v[k] += r21*(0.5*A66*N2*N3y*alphat*detJ*r23*wij/h + detJ*r21*wij*(N3x*(-B12*N2y - B16*N2x) + N3y*(-B26*N2y - B66*N2x)) + detJ*r22*wij*(N3x*(B11*N2x + B16*N2y) + N3y*(B16*N2x + B66*N2y))) + r22*(-0.5*A66*N2*N3x*alphat*detJ*r23*wij/h + detJ*r21*wij*(N3x*(-B26*N2y - B66*N2x) + N3y*(-B22*N2y - B26*N2x)) + detJ*r22*wij*(N3x*(B16*N2x + B66*N2y) + N3y*(B12*N2x + B26*N2y))) + r23*(detJ*r21*wij*(-E44*N2*N3y - E45*N2*N3x) + detJ*r22*wij*(E45*N2*N3y + E55*N2*N3x))
            k += 1
            KC0v[k] += r31*(0.5*A66*N2*N3y*alphat*detJ*r23*wij/h + detJ*r21*wij*(N3x*(-B12*N2y - B16*N2x) + N3y*(-B26*N2y - B66*N2x)) + detJ*r22*wij*(N3x*(B11*N2x + B16*N2y) + N3y*(B16*N2x + B66*N2y))) + r32*(-0.5*A66*N2*N3x*alphat*detJ*r23*wij/h + detJ*r21*wij*(N3x*(-B26*N2y - B66*N2x) + N3y*(-B22*N2y - B26*N2x)) + detJ*r22*wij*(N3x*(B16*N2x + B66*N2y) + N3y*(B12*N2x + B26*N2y))) + r33*(detJ*r21*wij*(-E44*N2*N3y - E45*N2*N3x) + detJ*r22*wij*(E45*N2*N3y + E55*N2*N3x))
            k += 1
            KC0v[k] += A66*N2*N3*alphat*detJ*r13*r23*wij/h + r11*(detJ*r21*wij*(E44*N2*N3 + Erx*gamma2*gamma3 - N3x*(-D26*N2y - D66*N2x) - N3y*(-D22*N2y - D26*N2x)) + detJ*r22*wij*(-E45*N2*N3 - N3x*(D16*N2x + D66*N2y) - N3y*(D12*N2x + D26*N2y))) + r12*(detJ*r21*wij*(-E45*N2*N3 + N3x*(-D12*N2y - D16*N2x) + N3y*(-D26*N2y - D66*N2x)) + detJ*r22*wij*(E55*N2*N3 + Ery*gamma2*gamma3 + N3x*(D11*N2x + D16*N2y) + N3y*(D16*N2x + D66*N2y)))
            k += 1
            KC0v[k] += A66*N2*N3*alphat*detJ*r23**2*wij/h + r21*(detJ*r21*wij*(E44*N2*N3 + Erx*gamma2*gamma3 - N3x*(-D26*N2y - D66*N2x) - N3y*(-D22*N2y - D26*N2x)) + detJ*r22*wij*(-E45*N2*N3 - N3x*(D16*N2x + D66*N2y) - N3y*(D12*N2x + D26*N2y))) + r22*(detJ*r21*wij*(-E45*N2*N3 + N3x*(-D12*N2y - D16*N2x) + N3y*(-D26*N2y - D66*N2x)) + detJ*r22*wij*(E55*N2*N3 + Ery*gamma2*gamma3 + N3x*(D11*N2x + D16*N2y) + N3y*(D16*N2x + D66*N2y)))
            k += 1
            KC0v[k] += A66*N2*N3*alphat*detJ*r23*r33*wij/h + r31*(detJ*r21*wij*(E44*N2*N3 + Erx*gamma2*gamma3 - N3x*(-D26*N2y - D66*N2x) - N3y*(-D22*N2y - D26*N2x)) + detJ*r22*wij*(-E45*N2*N3 - N3x*(D16*N2x + D66*N2y) - N3y*(D12*N2x + D26*N2y))) + r32*(detJ*r21*wij*(-E45*N2*N3 + N3x*(-D12*N2y - D16*N2x) + N3y*(-D26*N2y - D66*N2x)) + detJ*r22*wij*(E55*N2*N3 + Ery*gamma2*gamma3 + N3x*(D11*N2x + D16*N2y) + N3y*(D16*N2x + D66*N2y)))
            k += 1
            KC0v[k] += r11*(0.5*A66*N2*N4y*alphat*detJ*r23*wij/h + detJ*r21*wij*(N4x*(-B12*N2y - B16*N2x) + N4y*(-B26*N2y - B66*N2x)) + detJ*r22*wij*(N4x*(B11*N2x + B16*N2y) + N4y*(B16*N2x + B66*N2y))) + r12*(-0.5*A66*N2*N4x*alphat*detJ*r23*wij/h + detJ*r21*wij*(N4x*(-B26*N2y - B66*N2x) + N4y*(-B22*N2y - B26*N2x)) + detJ*r22*wij*(N4x*(B16*N2x + B66*N2y) + N4y*(B12*N2x + B26*N2y))) + r13*(detJ*r21*wij*(-E44*N2*N4y - E45*N2*N4x) + detJ*r22*wij*(E45*N2*N4y + E55*N2*N4x))
            k += 1
            KC0v[k] += r21*(0.5*A66*N2*N4y*alphat*detJ*r23*wij/h + detJ*r21*wij*(N4x*(-B12*N2y - B16*N2x) + N4y*(-B26*N2y - B66*N2x)) + detJ*r22*wij*(N4x*(B11*N2x + B16*N2y) + N4y*(B16*N2x + B66*N2y))) + r22*(-0.5*A66*N2*N4x*alphat*detJ*r23*wij/h + detJ*r21*wij*(N4x*(-B26*N2y - B66*N2x) + N4y*(-B22*N2y - B26*N2x)) + detJ*r22*wij*(N4x*(B16*N2x + B66*N2y) + N4y*(B12*N2x + B26*N2y))) + r23*(detJ*r21*wij*(-E44*N2*N4y - E45*N2*N4x) + detJ*r22*wij*(E45*N2*N4y + E55*N2*N4x))
            k += 1
            KC0v[k] += r31*(0.5*A66*N2*N4y*alphat*detJ*r23*wij/h + detJ*r21*wij*(N4x*(-B12*N2y - B16*N2x) + N4y*(-B26*N2y - B66*N2x)) + detJ*r22*wij*(N4x*(B11*N2x + B16*N2y) + N4y*(B16*N2x + B66*N2y))) + r32*(-0.5*A66*N2*N4x*alphat*detJ*r23*wij/h + detJ*r21*wij*(N4x*(-B26*N2y - B66*N2x) + N4y*(-B22*N2y - B26*N2x)) + detJ*r22*wij*(N4x*(B16*N2x + B66*N2y) + N4y*(B12*N2x + B26*N2y))) + r33*(detJ*r21*wij*(-E44*N2*N4y - E45*N2*N4x) + detJ*r22*wij*(E45*N2*N4y + E55*N2*N4x))
            k += 1
            KC0v[k] += A66*N2*N4*alphat*detJ*r13*r23*wij/h + r11*(detJ*r21*wij*(E44*N2*N4 + Erx*gamma2*gamma4 - N4x*(-D26*N2y - D66*N2x) - N4y*(-D22*N2y - D26*N2x)) + detJ*r22*wij*(-E45*N2*N4 - N4x*(D16*N2x + D66*N2y) - N4y*(D12*N2x + D26*N2y))) + r12*(detJ*r21*wij*(-E45*N2*N4 + N4x*(-D12*N2y - D16*N2x) + N4y*(-D26*N2y - D66*N2x)) + detJ*r22*wij*(E55*N2*N4 + Ery*gamma2*gamma4 + N4x*(D11*N2x + D16*N2y) + N4y*(D16*N2x + D66*N2y)))
            k += 1
            KC0v[k] += A66*N2*N4*alphat*detJ*r23**2*wij/h + r21*(detJ*r21*wij*(E44*N2*N4 + Erx*gamma2*gamma4 - N4x*(-D26*N2y - D66*N2x) - N4y*(-D22*N2y - D26*N2x)) + detJ*r22*wij*(-E45*N2*N4 - N4x*(D16*N2x + D66*N2y) - N4y*(D12*N2x + D26*N2y))) + r22*(detJ*r21*wij*(-E45*N2*N4 + N4x*(-D12*N2y - D16*N2x) + N4y*(-D26*N2y - D66*N2x)) + detJ*r22*wij*(E55*N2*N4 + Ery*gamma2*gamma4 + N4x*(D11*N2x + D16*N2y) + N4y*(D16*N2x + D66*N2y)))
            k += 1
            KC0v[k] += A66*N2*N4*alphat*detJ*r23*r33*wij/h + r31*(detJ*r21*wij*(E44*N2*N4 + Erx*gamma2*gamma4 - N4x*(-D26*N2y - D66*N2x) - N4y*(-D22*N2y - D26*N2x)) + detJ*r22*wij*(-E45*N2*N4 - N4x*(D16*N2x + D66*N2y) - N4y*(D12*N2x + D26*N2y))) + r32*(detJ*r21*wij*(-E45*N2*N4 + N4x*(-D12*N2y - D16*N2x) + N4y*(-D26*N2y - D66*N2x)) + detJ*r22*wij*(E55*N2*N4 + Ery*gamma2*gamma4 + N4x*(D11*N2x + D16*N2y) + N4y*(D16*N2x + D66*N2y)))
            k += 1
            KC0v[k] += r11*(0.5*A66*N1y*N2*alphat*detJ*r33*wij/h + detJ*r31*wij*(N1x*(-B12*N2y - B16*N2x) + N1y*(-B26*N2y - B66*N2x)) + detJ*r32*wij*(N1x*(B11*N2x + B16*N2y) + N1y*(B16*N2x + B66*N2y))) + r12*(-0.5*A66*N1x*N2*alphat*detJ*r33*wij/h + detJ*r31*wij*(N1x*(-B26*N2y - B66*N2x) + N1y*(-B22*N2y - B26*N2x)) + detJ*r32*wij*(N1x*(B16*N2x + B66*N2y) + N1y*(B12*N2x + B26*N2y))) + r13*(detJ*r31*wij*(-E44*N1y*N2 - E45*N1x*N2) + detJ*r32*wij*(E45*N1y*N2 + E55*N1x*N2))
            k += 1
            KC0v[k] += r21*(0.5*A66*N1y*N2*alphat*detJ*r33*wij/h + detJ*r31*wij*(N1x*(-B12*N2y - B16*N2x) + N1y*(-B26*N2y - B66*N2x)) + detJ*r32*wij*(N1x*(B11*N2x + B16*N2y) + N1y*(B16*N2x + B66*N2y))) + r22*(-0.5*A66*N1x*N2*alphat*detJ*r33*wij/h + detJ*r31*wij*(N1x*(-B26*N2y - B66*N2x) + N1y*(-B22*N2y - B26*N2x)) + detJ*r32*wij*(N1x*(B16*N2x + B66*N2y) + N1y*(B12*N2x + B26*N2y))) + r23*(detJ*r31*wij*(-E44*N1y*N2 - E45*N1x*N2) + detJ*r32*wij*(E45*N1y*N2 + E55*N1x*N2))
            k += 1
            KC0v[k] += r31*(0.5*A66*N1y*N2*alphat*detJ*r33*wij/h + detJ*r31*wij*(N1x*(-B12*N2y - B16*N2x) + N1y*(-B26*N2y - B66*N2x)) + detJ*r32*wij*(N1x*(B11*N2x + B16*N2y) + N1y*(B16*N2x + B66*N2y))) + r32*(-0.5*A66*N1x*N2*alphat*detJ*r33*wij/h + detJ*r31*wij*(N1x*(-B26*N2y - B66*N2x) + N1y*(-B22*N2y - B26*N2x)) + detJ*r32*wij*(N1x*(B16*N2x + B66*N2y) + N1y*(B12*N2x + B26*N2y))) + r33*(detJ*r31*wij*(-E44*N1y*N2 - E45*N1x*N2) + detJ*r32*wij*(E45*N1y*N2 + E55*N1x*N2))
            k += 1
            KC0v[k] += A66*N1*N2*alphat*detJ*r13*r33*wij/h + r11*(detJ*r31*wij*(E44*N1*N2 + Erx*gamma1*gamma2 - N1x*(-D26*N2y - D66*N2x) - N1y*(-D22*N2y - D26*N2x)) + detJ*r32*wij*(-E45*N1*N2 - N1x*(D16*N2x + D66*N2y) - N1y*(D12*N2x + D26*N2y))) + r12*(detJ*r31*wij*(-E45*N1*N2 + N1x*(-D12*N2y - D16*N2x) + N1y*(-D26*N2y - D66*N2x)) + detJ*r32*wij*(E55*N1*N2 + Ery*gamma1*gamma2 + N1x*(D11*N2x + D16*N2y) + N1y*(D16*N2x + D66*N2y)))
            k += 1
            KC0v[k] += A66*N1*N2*alphat*detJ*r23*r33*wij/h + r21*(detJ*r31*wij*(E44*N1*N2 + Erx*gamma1*gamma2 - N1x*(-D26*N2y - D66*N2x) - N1y*(-D22*N2y - D26*N2x)) + detJ*r32*wij*(-E45*N1*N2 - N1x*(D16*N2x + D66*N2y) - N1y*(D12*N2x + D26*N2y))) + r22*(detJ*r31*wij*(-E45*N1*N2 + N1x*(-D12*N2y - D16*N2x) + N1y*(-D26*N2y - D66*N2x)) + detJ*r32*wij*(E55*N1*N2 + Ery*gamma1*gamma2 + N1x*(D11*N2x + D16*N2y) + N1y*(D16*N2x + D66*N2y)))
            k += 1
            KC0v[k] += A66*N1*N2*alphat*detJ*r33**2*wij/h + r31*(detJ*r31*wij*(E44*N1*N2 + Erx*gamma1*gamma2 - N1x*(-D26*N2y - D66*N2x) - N1y*(-D22*N2y - D26*N2x)) + detJ*r32*wij*(-E45*N1*N2 - N1x*(D16*N2x + D66*N2y) - N1y*(D12*N2x + D26*N2y))) + r32*(detJ*r31*wij*(-E45*N1*N2 + N1x*(-D12*N2y - D16*N2x) + N1y*(-D26*N2y - D66*N2x)) + detJ*r32*wij*(E55*N1*N2 + Ery*gamma1*gamma2 + N1x*(D11*N2x + D16*N2y) + N1y*(D16*N2x + D66*N2y)))
            k += 1
            KC0v[k] += r11*(0.5*A66*N2*N2y*alphat*detJ*r33*wij/h + detJ*r31*wij*(N2x*(-B12*N2y - B16*N2x) + N2y*(-B26*N2y - B66*N2x)) + detJ*r32*wij*(N2x*(B11*N2x + B16*N2y) + N2y*(B16*N2x + B66*N2y))) + r12*(-0.5*A66*N2*N2x*alphat*detJ*r33*wij/h + detJ*r31*wij*(N2x*(-B26*N2y - B66*N2x) + N2y*(-B22*N2y - B26*N2x)) + detJ*r32*wij*(N2x*(B16*N2x + B66*N2y) + N2y*(B12*N2x + B26*N2y))) + r13*(detJ*r31*wij*(-E44*N2*N2y - E45*N2*N2x) + detJ*r32*wij*(E45*N2*N2y + E55*N2*N2x))
            k += 1
            KC0v[k] += r21*(0.5*A66*N2*N2y*alphat*detJ*r33*wij/h + detJ*r31*wij*(N2x*(-B12*N2y - B16*N2x) + N2y*(-B26*N2y - B66*N2x)) + detJ*r32*wij*(N2x*(B11*N2x + B16*N2y) + N2y*(B16*N2x + B66*N2y))) + r22*(-0.5*A66*N2*N2x*alphat*detJ*r33*wij/h + detJ*r31*wij*(N2x*(-B26*N2y - B66*N2x) + N2y*(-B22*N2y - B26*N2x)) + detJ*r32*wij*(N2x*(B16*N2x + B66*N2y) + N2y*(B12*N2x + B26*N2y))) + r23*(detJ*r31*wij*(-E44*N2*N2y - E45*N2*N2x) + detJ*r32*wij*(E45*N2*N2y + E55*N2*N2x))
            k += 1
            KC0v[k] += r31*(0.5*A66*N2*N2y*alphat*detJ*r33*wij/h + detJ*r31*wij*(N2x*(-B12*N2y - B16*N2x) + N2y*(-B26*N2y - B66*N2x)) + detJ*r32*wij*(N2x*(B11*N2x + B16*N2y) + N2y*(B16*N2x + B66*N2y))) + r32*(-0.5*A66*N2*N2x*alphat*detJ*r33*wij/h + detJ*r31*wij*(N2x*(-B26*N2y - B66*N2x) + N2y*(-B22*N2y - B26*N2x)) + detJ*r32*wij*(N2x*(B16*N2x + B66*N2y) + N2y*(B12*N2x + B26*N2y))) + r33*(detJ*r31*wij*(-E44*N2*N2y - E45*N2*N2x) + detJ*r32*wij*(E45*N2*N2y + E55*N2*N2x))
            k += 1
            KC0v[k] += A66*N2**2*alphat*detJ*r13*r33*wij/h + r11*(detJ*r31*wij*(E44*N2**2 + Erx*gamma2**2 - N2x*(-D26*N2y - D66*N2x) - N2y*(-D22*N2y - D26*N2x)) + detJ*r32*wij*(-E45*N2**2 - N2x*(D16*N2x + D66*N2y) - N2y*(D12*N2x + D26*N2y))) + r12*(detJ*r31*wij*(-E45*N2**2 + N2x*(-D12*N2y - D16*N2x) + N2y*(-D26*N2y - D66*N2x)) + detJ*r32*wij*(E55*N2**2 + Ery*gamma2**2 + N2x*(D11*N2x + D16*N2y) + N2y*(D16*N2x + D66*N2y)))
            k += 1
            KC0v[k] += A66*N2**2*alphat*detJ*r23*r33*wij/h + r21*(detJ*r31*wij*(E44*N2**2 + Erx*gamma2**2 - N2x*(-D26*N2y - D66*N2x) - N2y*(-D22*N2y - D26*N2x)) + detJ*r32*wij*(-E45*N2**2 - N2x*(D16*N2x + D66*N2y) - N2y*(D12*N2x + D26*N2y))) + r22*(detJ*r31*wij*(-E45*N2**2 + N2x*(-D12*N2y - D16*N2x) + N2y*(-D26*N2y - D66*N2x)) + detJ*r32*wij*(E55*N2**2 + Ery*gamma2**2 + N2x*(D11*N2x + D16*N2y) + N2y*(D16*N2x + D66*N2y)))
            k += 1
            KC0v[k] += A66*N2**2*alphat*detJ*r33**2*wij/h + r31*(detJ*r31*wij*(E44*N2**2 + Erx*gamma2**2 - N2x*(-D26*N2y - D66*N2x) - N2y*(-D22*N2y - D26*N2x)) + detJ*r32*wij*(-E45*N2**2 - N2x*(D16*N2x + D66*N2y) - N2y*(D12*N2x + D26*N2y))) + r32*(detJ*r31*wij*(-E45*N2**2 + N2x*(-D12*N2y - D16*N2x) + N2y*(-D26*N2y - D66*N2x)) + detJ*r32*wij*(E55*N2**2 + Ery*gamma2**2 + N2x*(D11*N2x + D16*N2y) + N2y*(D16*N2x + D66*N2y)))
            k += 1
            KC0v[k] += r11*(0.5*A66*N2*N3y*alphat*detJ*r33*wij/h + detJ*r31*wij*(N3x*(-B12*N2y - B16*N2x) + N3y*(-B26*N2y - B66*N2x)) + detJ*r32*wij*(N3x*(B11*N2x + B16*N2y) + N3y*(B16*N2x + B66*N2y))) + r12*(-0.5*A66*N2*N3x*alphat*detJ*r33*wij/h + detJ*r31*wij*(N3x*(-B26*N2y - B66*N2x) + N3y*(-B22*N2y - B26*N2x)) + detJ*r32*wij*(N3x*(B16*N2x + B66*N2y) + N3y*(B12*N2x + B26*N2y))) + r13*(detJ*r31*wij*(-E44*N2*N3y - E45*N2*N3x) + detJ*r32*wij*(E45*N2*N3y + E55*N2*N3x))
            k += 1
            KC0v[k] += r21*(0.5*A66*N2*N3y*alphat*detJ*r33*wij/h + detJ*r31*wij*(N3x*(-B12*N2y - B16*N2x) + N3y*(-B26*N2y - B66*N2x)) + detJ*r32*wij*(N3x*(B11*N2x + B16*N2y) + N3y*(B16*N2x + B66*N2y))) + r22*(-0.5*A66*N2*N3x*alphat*detJ*r33*wij/h + detJ*r31*wij*(N3x*(-B26*N2y - B66*N2x) + N3y*(-B22*N2y - B26*N2x)) + detJ*r32*wij*(N3x*(B16*N2x + B66*N2y) + N3y*(B12*N2x + B26*N2y))) + r23*(detJ*r31*wij*(-E44*N2*N3y - E45*N2*N3x) + detJ*r32*wij*(E45*N2*N3y + E55*N2*N3x))
            k += 1
            KC0v[k] += r31*(0.5*A66*N2*N3y*alphat*detJ*r33*wij/h + detJ*r31*wij*(N3x*(-B12*N2y - B16*N2x) + N3y*(-B26*N2y - B66*N2x)) + detJ*r32*wij*(N3x*(B11*N2x + B16*N2y) + N3y*(B16*N2x + B66*N2y))) + r32*(-0.5*A66*N2*N3x*alphat*detJ*r33*wij/h + detJ*r31*wij*(N3x*(-B26*N2y - B66*N2x) + N3y*(-B22*N2y - B26*N2x)) + detJ*r32*wij*(N3x*(B16*N2x + B66*N2y) + N3y*(B12*N2x + B26*N2y))) + r33*(detJ*r31*wij*(-E44*N2*N3y - E45*N2*N3x) + detJ*r32*wij*(E45*N2*N3y + E55*N2*N3x))
            k += 1
            KC0v[k] += A66*N2*N3*alphat*detJ*r13*r33*wij/h + r11*(detJ*r31*wij*(E44*N2*N3 + Erx*gamma2*gamma3 - N3x*(-D26*N2y - D66*N2x) - N3y*(-D22*N2y - D26*N2x)) + detJ*r32*wij*(-E45*N2*N3 - N3x*(D16*N2x + D66*N2y) - N3y*(D12*N2x + D26*N2y))) + r12*(detJ*r31*wij*(-E45*N2*N3 + N3x*(-D12*N2y - D16*N2x) + N3y*(-D26*N2y - D66*N2x)) + detJ*r32*wij*(E55*N2*N3 + Ery*gamma2*gamma3 + N3x*(D11*N2x + D16*N2y) + N3y*(D16*N2x + D66*N2y)))
            k += 1
            KC0v[k] += A66*N2*N3*alphat*detJ*r23*r33*wij/h + r21*(detJ*r31*wij*(E44*N2*N3 + Erx*gamma2*gamma3 - N3x*(-D26*N2y - D66*N2x) - N3y*(-D22*N2y - D26*N2x)) + detJ*r32*wij*(-E45*N2*N3 - N3x*(D16*N2x + D66*N2y) - N3y*(D12*N2x + D26*N2y))) + r22*(detJ*r31*wij*(-E45*N2*N3 + N3x*(-D12*N2y - D16*N2x) + N3y*(-D26*N2y - D66*N2x)) + detJ*r32*wij*(E55*N2*N3 + Ery*gamma2*gamma3 + N3x*(D11*N2x + D16*N2y) + N3y*(D16*N2x + D66*N2y)))
            k += 1
            KC0v[k] += A66*N2*N3*alphat*detJ*r33**2*wij/h + r31*(detJ*r31*wij*(E44*N2*N3 + Erx*gamma2*gamma3 - N3x*(-D26*N2y - D66*N2x) - N3y*(-D22*N2y - D26*N2x)) + detJ*r32*wij*(-E45*N2*N3 - N3x*(D16*N2x + D66*N2y) - N3y*(D12*N2x + D26*N2y))) + r32*(detJ*r31*wij*(-E45*N2*N3 + N3x*(-D12*N2y - D16*N2x) + N3y*(-D26*N2y - D66*N2x)) + detJ*r32*wij*(E55*N2*N3 + Ery*gamma2*gamma3 + N3x*(D11*N2x + D16*N2y) + N3y*(D16*N2x + D66*N2y)))
            k += 1
            KC0v[k] += r11*(0.5*A66*N2*N4y*alphat*detJ*r33*wij/h + detJ*r31*wij*(N4x*(-B12*N2y - B16*N2x) + N4y*(-B26*N2y - B66*N2x)) + detJ*r32*wij*(N4x*(B11*N2x + B16*N2y) + N4y*(B16*N2x + B66*N2y))) + r12*(-0.5*A66*N2*N4x*alphat*detJ*r33*wij/h + detJ*r31*wij*(N4x*(-B26*N2y - B66*N2x) + N4y*(-B22*N2y - B26*N2x)) + detJ*r32*wij*(N4x*(B16*N2x + B66*N2y) + N4y*(B12*N2x + B26*N2y))) + r13*(detJ*r31*wij*(-E44*N2*N4y - E45*N2*N4x) + detJ*r32*wij*(E45*N2*N4y + E55*N2*N4x))
            k += 1
            KC0v[k] += r21*(0.5*A66*N2*N4y*alphat*detJ*r33*wij/h + detJ*r31*wij*(N4x*(-B12*N2y - B16*N2x) + N4y*(-B26*N2y - B66*N2x)) + detJ*r32*wij*(N4x*(B11*N2x + B16*N2y) + N4y*(B16*N2x + B66*N2y))) + r22*(-0.5*A66*N2*N4x*alphat*detJ*r33*wij/h + detJ*r31*wij*(N4x*(-B26*N2y - B66*N2x) + N4y*(-B22*N2y - B26*N2x)) + detJ*r32*wij*(N4x*(B16*N2x + B66*N2y) + N4y*(B12*N2x + B26*N2y))) + r23*(detJ*r31*wij*(-E44*N2*N4y - E45*N2*N4x) + detJ*r32*wij*(E45*N2*N4y + E55*N2*N4x))
            k += 1
            KC0v[k] += r31*(0.5*A66*N2*N4y*alphat*detJ*r33*wij/h + detJ*r31*wij*(N4x*(-B12*N2y - B16*N2x) + N4y*(-B26*N2y - B66*N2x)) + detJ*r32*wij*(N4x*(B11*N2x + B16*N2y) + N4y*(B16*N2x + B66*N2y))) + r32*(-0.5*A66*N2*N4x*alphat*detJ*r33*wij/h + detJ*r31*wij*(N4x*(-B26*N2y - B66*N2x) + N4y*(-B22*N2y - B26*N2x)) + detJ*r32*wij*(N4x*(B16*N2x + B66*N2y) + N4y*(B12*N2x + B26*N2y))) + r33*(detJ*r31*wij*(-E44*N2*N4y - E45*N2*N4x) + detJ*r32*wij*(E45*N2*N4y + E55*N2*N4x))
            k += 1
            KC0v[k] += A66*N2*N4*alphat*detJ*r13*r33*wij/h + r11*(detJ*r31*wij*(E44*N2*N4 + Erx*gamma2*gamma4 - N4x*(-D26*N2y - D66*N2x) - N4y*(-D22*N2y - D26*N2x)) + detJ*r32*wij*(-E45*N2*N4 - N4x*(D16*N2x + D66*N2y) - N4y*(D12*N2x + D26*N2y))) + r12*(detJ*r31*wij*(-E45*N2*N4 + N4x*(-D12*N2y - D16*N2x) + N4y*(-D26*N2y - D66*N2x)) + detJ*r32*wij*(E55*N2*N4 + Ery*gamma2*gamma4 + N4x*(D11*N2x + D16*N2y) + N4y*(D16*N2x + D66*N2y)))
            k += 1
            KC0v[k] += A66*N2*N4*alphat*detJ*r23*r33*wij/h + r21*(detJ*r31*wij*(E44*N2*N4 + Erx*gamma2*gamma4 - N4x*(-D26*N2y - D66*N2x) - N4y*(-D22*N2y - D26*N2x)) + detJ*r32*wij*(-E45*N2*N4 - N4x*(D16*N2x + D66*N2y) - N4y*(D12*N2x + D26*N2y))) + r22*(detJ*r31*wij*(-E45*N2*N4 + N4x*(-D12*N2y - D16*N2x) + N4y*(-D26*N2y - D66*N2x)) + detJ*r32*wij*(E55*N2*N4 + Ery*gamma2*gamma4 + N4x*(D11*N2x + D16*N2y) + N4y*(D16*N2x + D66*N2y)))
            k += 1
            KC0v[k] += A66*N2*N4*alphat*detJ*r33**2*wij/h + r31*(detJ*r31*wij*(E44*N2*N4 + Erx*gamma2*gamma4 - N4x*(-D26*N2y - D66*N2x) - N4y*(-D22*N2y - D26*N2x)) + detJ*r32*wij*(-E45*N2*N4 - N4x*(D16*N2x + D66*N2y) - N4y*(D12*N2x + D26*N2y))) + r32*(detJ*r31*wij*(-E45*N2*N4 + N4x*(-D12*N2y - D16*N2x) + N4y*(-D26*N2y - D66*N2x)) + detJ*r32*wij*(E55*N2*N4 + Ery*gamma2*gamma4 + N4x*(D11*N2x + D16*N2y) + N4y*(D16*N2x + D66*N2y)))
            k += 1
            KC0v[k] += detJ*r13**2*wij*(Ew*gamma1*gamma3 + N1x*(E45*N3y + E55*N3x) + N1y*(E44*N3y + E45*N3x)) + r11*(detJ*r11*wij*(0.25*A66*N1y*N3y*alphat/h + Eu*gamma1*gamma3 + N1x*(A11*N3x + A16*N3y) + N1y*(A16*N3x + A66*N3y)) + detJ*r12*wij*(-0.25*A66*N1y*N3x*alphat/h + N1x*(A12*N3y + A16*N3x) + N1y*(A26*N3y + A66*N3x))) + r12*(detJ*r11*wij*(-0.25*A66*N1x*N3y*alphat/h + N1x*(A16*N3x + A66*N3y) + N1y*(A12*N3x + A26*N3y)) + detJ*r12*wij*(0.25*A66*N1x*N3x*alphat/h + Ev*gamma1*gamma3 + N1x*(A26*N3y + A66*N3x) + N1y*(A22*N3y + A26*N3x)))
            k += 1
            KC0v[k] += detJ*r13*r23*wij*(Ew*gamma1*gamma3 + N1x*(E45*N3y + E55*N3x) + N1y*(E44*N3y + E45*N3x)) + r21*(detJ*r11*wij*(0.25*A66*N1y*N3y*alphat/h + Eu*gamma1*gamma3 + N1x*(A11*N3x + A16*N3y) + N1y*(A16*N3x + A66*N3y)) + detJ*r12*wij*(-0.25*A66*N1y*N3x*alphat/h + N1x*(A12*N3y + A16*N3x) + N1y*(A26*N3y + A66*N3x))) + r22*(detJ*r11*wij*(-0.25*A66*N1x*N3y*alphat/h + N1x*(A16*N3x + A66*N3y) + N1y*(A12*N3x + A26*N3y)) + detJ*r12*wij*(0.25*A66*N1x*N3x*alphat/h + Ev*gamma1*gamma3 + N1x*(A26*N3y + A66*N3x) + N1y*(A22*N3y + A26*N3x)))
            k += 1
            KC0v[k] += detJ*r13*r33*wij*(Ew*gamma1*gamma3 + N1x*(E45*N3y + E55*N3x) + N1y*(E44*N3y + E45*N3x)) + r31*(detJ*r11*wij*(0.25*A66*N1y*N3y*alphat/h + Eu*gamma1*gamma3 + N1x*(A11*N3x + A16*N3y) + N1y*(A16*N3x + A66*N3y)) + detJ*r12*wij*(-0.25*A66*N1y*N3x*alphat/h + N1x*(A12*N3y + A16*N3x) + N1y*(A26*N3y + A66*N3x))) + r32*(detJ*r11*wij*(-0.25*A66*N1x*N3y*alphat/h + N1x*(A16*N3x + A66*N3y) + N1y*(A12*N3x + A26*N3y)) + detJ*r12*wij*(0.25*A66*N1x*N3x*alphat/h + Ev*gamma1*gamma3 + N1x*(A26*N3y + A66*N3x) + N1y*(A22*N3y + A26*N3x)))
            k += 1
            KC0v[k] += r11*(-N1*detJ*r13*wij*(E44*N3y + E45*N3x) + detJ*r11*wij*(-N1x*(B16*N3x + B66*N3y) - N1y*(B12*N3x + B26*N3y)) + detJ*r12*wij*(-N1x*(B26*N3y + B66*N3x) - N1y*(B22*N3y + B26*N3x))) + r12*(N1*detJ*r13*wij*(E45*N3y + E55*N3x) + detJ*r11*wij*(N1x*(B11*N3x + B16*N3y) + N1y*(B16*N3x + B66*N3y)) + detJ*r12*wij*(N1x*(B12*N3y + B16*N3x) + N1y*(B26*N3y + B66*N3x))) + r13*(-0.5*A66*N1*N3x*alphat*detJ*r12*wij/h + 0.5*A66*N1*N3y*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += r21*(-N1*detJ*r13*wij*(E44*N3y + E45*N3x) + detJ*r11*wij*(-N1x*(B16*N3x + B66*N3y) - N1y*(B12*N3x + B26*N3y)) + detJ*r12*wij*(-N1x*(B26*N3y + B66*N3x) - N1y*(B22*N3y + B26*N3x))) + r22*(N1*detJ*r13*wij*(E45*N3y + E55*N3x) + detJ*r11*wij*(N1x*(B11*N3x + B16*N3y) + N1y*(B16*N3x + B66*N3y)) + detJ*r12*wij*(N1x*(B12*N3y + B16*N3x) + N1y*(B26*N3y + B66*N3x))) + r23*(-0.5*A66*N1*N3x*alphat*detJ*r12*wij/h + 0.5*A66*N1*N3y*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += r31*(-N1*detJ*r13*wij*(E44*N3y + E45*N3x) + detJ*r11*wij*(-N1x*(B16*N3x + B66*N3y) - N1y*(B12*N3x + B26*N3y)) + detJ*r12*wij*(-N1x*(B26*N3y + B66*N3x) - N1y*(B22*N3y + B26*N3x))) + r32*(N1*detJ*r13*wij*(E45*N3y + E55*N3x) + detJ*r11*wij*(N1x*(B11*N3x + B16*N3y) + N1y*(B16*N3x + B66*N3y)) + detJ*r12*wij*(N1x*(B12*N3y + B16*N3x) + N1y*(B26*N3y + B66*N3x))) + r33*(-0.5*A66*N1*N3x*alphat*detJ*r12*wij/h + 0.5*A66*N1*N3y*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += detJ*r13**2*wij*(Ew*gamma2*gamma3 + N2x*(E45*N3y + E55*N3x) + N2y*(E44*N3y + E45*N3x)) + r11*(detJ*r11*wij*(0.25*A66*N2y*N3y*alphat/h + Eu*gamma2*gamma3 + N2x*(A11*N3x + A16*N3y) + N2y*(A16*N3x + A66*N3y)) + detJ*r12*wij*(-0.25*A66*N2y*N3x*alphat/h + N2x*(A12*N3y + A16*N3x) + N2y*(A26*N3y + A66*N3x))) + r12*(detJ*r11*wij*(-0.25*A66*N2x*N3y*alphat/h + N2x*(A16*N3x + A66*N3y) + N2y*(A12*N3x + A26*N3y)) + detJ*r12*wij*(0.25*A66*N2x*N3x*alphat/h + Ev*gamma2*gamma3 + N2x*(A26*N3y + A66*N3x) + N2y*(A22*N3y + A26*N3x)))
            k += 1
            KC0v[k] += detJ*r13*r23*wij*(Ew*gamma2*gamma3 + N2x*(E45*N3y + E55*N3x) + N2y*(E44*N3y + E45*N3x)) + r21*(detJ*r11*wij*(0.25*A66*N2y*N3y*alphat/h + Eu*gamma2*gamma3 + N2x*(A11*N3x + A16*N3y) + N2y*(A16*N3x + A66*N3y)) + detJ*r12*wij*(-0.25*A66*N2y*N3x*alphat/h + N2x*(A12*N3y + A16*N3x) + N2y*(A26*N3y + A66*N3x))) + r22*(detJ*r11*wij*(-0.25*A66*N2x*N3y*alphat/h + N2x*(A16*N3x + A66*N3y) + N2y*(A12*N3x + A26*N3y)) + detJ*r12*wij*(0.25*A66*N2x*N3x*alphat/h + Ev*gamma2*gamma3 + N2x*(A26*N3y + A66*N3x) + N2y*(A22*N3y + A26*N3x)))
            k += 1
            KC0v[k] += detJ*r13*r33*wij*(Ew*gamma2*gamma3 + N2x*(E45*N3y + E55*N3x) + N2y*(E44*N3y + E45*N3x)) + r31*(detJ*r11*wij*(0.25*A66*N2y*N3y*alphat/h + Eu*gamma2*gamma3 + N2x*(A11*N3x + A16*N3y) + N2y*(A16*N3x + A66*N3y)) + detJ*r12*wij*(-0.25*A66*N2y*N3x*alphat/h + N2x*(A12*N3y + A16*N3x) + N2y*(A26*N3y + A66*N3x))) + r32*(detJ*r11*wij*(-0.25*A66*N2x*N3y*alphat/h + N2x*(A16*N3x + A66*N3y) + N2y*(A12*N3x + A26*N3y)) + detJ*r12*wij*(0.25*A66*N2x*N3x*alphat/h + Ev*gamma2*gamma3 + N2x*(A26*N3y + A66*N3x) + N2y*(A22*N3y + A26*N3x)))
            k += 1
            KC0v[k] += r11*(-N2*detJ*r13*wij*(E44*N3y + E45*N3x) + detJ*r11*wij*(-N2x*(B16*N3x + B66*N3y) - N2y*(B12*N3x + B26*N3y)) + detJ*r12*wij*(-N2x*(B26*N3y + B66*N3x) - N2y*(B22*N3y + B26*N3x))) + r12*(N2*detJ*r13*wij*(E45*N3y + E55*N3x) + detJ*r11*wij*(N2x*(B11*N3x + B16*N3y) + N2y*(B16*N3x + B66*N3y)) + detJ*r12*wij*(N2x*(B12*N3y + B16*N3x) + N2y*(B26*N3y + B66*N3x))) + r13*(-0.5*A66*N2*N3x*alphat*detJ*r12*wij/h + 0.5*A66*N2*N3y*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += r21*(-N2*detJ*r13*wij*(E44*N3y + E45*N3x) + detJ*r11*wij*(-N2x*(B16*N3x + B66*N3y) - N2y*(B12*N3x + B26*N3y)) + detJ*r12*wij*(-N2x*(B26*N3y + B66*N3x) - N2y*(B22*N3y + B26*N3x))) + r22*(N2*detJ*r13*wij*(E45*N3y + E55*N3x) + detJ*r11*wij*(N2x*(B11*N3x + B16*N3y) + N2y*(B16*N3x + B66*N3y)) + detJ*r12*wij*(N2x*(B12*N3y + B16*N3x) + N2y*(B26*N3y + B66*N3x))) + r23*(-0.5*A66*N2*N3x*alphat*detJ*r12*wij/h + 0.5*A66*N2*N3y*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += r31*(-N2*detJ*r13*wij*(E44*N3y + E45*N3x) + detJ*r11*wij*(-N2x*(B16*N3x + B66*N3y) - N2y*(B12*N3x + B26*N3y)) + detJ*r12*wij*(-N2x*(B26*N3y + B66*N3x) - N2y*(B22*N3y + B26*N3x))) + r32*(N2*detJ*r13*wij*(E45*N3y + E55*N3x) + detJ*r11*wij*(N2x*(B11*N3x + B16*N3y) + N2y*(B16*N3x + B66*N3y)) + detJ*r12*wij*(N2x*(B12*N3y + B16*N3x) + N2y*(B26*N3y + B66*N3x))) + r33*(-0.5*A66*N2*N3x*alphat*detJ*r12*wij/h + 0.5*A66*N2*N3y*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += detJ*r13**2*wij*(Ew*gamma3**2 + N3x*(E45*N3y + E55*N3x) + N3y*(E44*N3y + E45*N3x)) + r11*(detJ*r11*wij*(0.25*A66*N3y**2*alphat/h + Eu*gamma3**2 + N3x*(A11*N3x + A16*N3y) + N3y*(A16*N3x + A66*N3y)) + detJ*r12*wij*(-0.25*A66*N3x*N3y*alphat/h + N3x*(A12*N3y + A16*N3x) + N3y*(A26*N3y + A66*N3x))) + r12*(detJ*r11*wij*(-0.25*A66*N3x*N3y*alphat/h + N3x*(A16*N3x + A66*N3y) + N3y*(A12*N3x + A26*N3y)) + detJ*r12*wij*(0.25*A66*N3x**2*alphat/h + Ev*gamma3**2 + N3x*(A26*N3y + A66*N3x) + N3y*(A22*N3y + A26*N3x)))
            k += 1
            KC0v[k] += detJ*r13*r23*wij*(Ew*gamma3**2 + N3x*(E45*N3y + E55*N3x) + N3y*(E44*N3y + E45*N3x)) + r21*(detJ*r11*wij*(0.25*A66*N3y**2*alphat/h + Eu*gamma3**2 + N3x*(A11*N3x + A16*N3y) + N3y*(A16*N3x + A66*N3y)) + detJ*r12*wij*(-0.25*A66*N3x*N3y*alphat/h + N3x*(A12*N3y + A16*N3x) + N3y*(A26*N3y + A66*N3x))) + r22*(detJ*r11*wij*(-0.25*A66*N3x*N3y*alphat/h + N3x*(A16*N3x + A66*N3y) + N3y*(A12*N3x + A26*N3y)) + detJ*r12*wij*(0.25*A66*N3x**2*alphat/h + Ev*gamma3**2 + N3x*(A26*N3y + A66*N3x) + N3y*(A22*N3y + A26*N3x)))
            k += 1
            KC0v[k] += detJ*r13*r33*wij*(Ew*gamma3**2 + N3x*(E45*N3y + E55*N3x) + N3y*(E44*N3y + E45*N3x)) + r31*(detJ*r11*wij*(0.25*A66*N3y**2*alphat/h + Eu*gamma3**2 + N3x*(A11*N3x + A16*N3y) + N3y*(A16*N3x + A66*N3y)) + detJ*r12*wij*(-0.25*A66*N3x*N3y*alphat/h + N3x*(A12*N3y + A16*N3x) + N3y*(A26*N3y + A66*N3x))) + r32*(detJ*r11*wij*(-0.25*A66*N3x*N3y*alphat/h + N3x*(A16*N3x + A66*N3y) + N3y*(A12*N3x + A26*N3y)) + detJ*r12*wij*(0.25*A66*N3x**2*alphat/h + Ev*gamma3**2 + N3x*(A26*N3y + A66*N3x) + N3y*(A22*N3y + A26*N3x)))
            k += 1
            KC0v[k] += r11*(-N3*detJ*r13*wij*(E44*N3y + E45*N3x) + detJ*r11*wij*(-N3x*(B16*N3x + B66*N3y) - N3y*(B12*N3x + B26*N3y)) + detJ*r12*wij*(-N3x*(B26*N3y + B66*N3x) - N3y*(B22*N3y + B26*N3x))) + r12*(N3*detJ*r13*wij*(E45*N3y + E55*N3x) + detJ*r11*wij*(N3x*(B11*N3x + B16*N3y) + N3y*(B16*N3x + B66*N3y)) + detJ*r12*wij*(N3x*(B12*N3y + B16*N3x) + N3y*(B26*N3y + B66*N3x))) + r13*(-0.5*A66*N3*N3x*alphat*detJ*r12*wij/h + 0.5*A66*N3*N3y*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += r21*(-N3*detJ*r13*wij*(E44*N3y + E45*N3x) + detJ*r11*wij*(-N3x*(B16*N3x + B66*N3y) - N3y*(B12*N3x + B26*N3y)) + detJ*r12*wij*(-N3x*(B26*N3y + B66*N3x) - N3y*(B22*N3y + B26*N3x))) + r22*(N3*detJ*r13*wij*(E45*N3y + E55*N3x) + detJ*r11*wij*(N3x*(B11*N3x + B16*N3y) + N3y*(B16*N3x + B66*N3y)) + detJ*r12*wij*(N3x*(B12*N3y + B16*N3x) + N3y*(B26*N3y + B66*N3x))) + r23*(-0.5*A66*N3*N3x*alphat*detJ*r12*wij/h + 0.5*A66*N3*N3y*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += r31*(-N3*detJ*r13*wij*(E44*N3y + E45*N3x) + detJ*r11*wij*(-N3x*(B16*N3x + B66*N3y) - N3y*(B12*N3x + B26*N3y)) + detJ*r12*wij*(-N3x*(B26*N3y + B66*N3x) - N3y*(B22*N3y + B26*N3x))) + r32*(N3*detJ*r13*wij*(E45*N3y + E55*N3x) + detJ*r11*wij*(N3x*(B11*N3x + B16*N3y) + N3y*(B16*N3x + B66*N3y)) + detJ*r12*wij*(N3x*(B12*N3y + B16*N3x) + N3y*(B26*N3y + B66*N3x))) + r33*(-0.5*A66*N3*N3x*alphat*detJ*r12*wij/h + 0.5*A66*N3*N3y*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += detJ*r13**2*wij*(Ew*gamma3*gamma4 + N4x*(E45*N3y + E55*N3x) + N4y*(E44*N3y + E45*N3x)) + r11*(detJ*r11*wij*(0.25*A66*N3y*N4y*alphat/h + Eu*gamma3*gamma4 + N4x*(A11*N3x + A16*N3y) + N4y*(A16*N3x + A66*N3y)) + detJ*r12*wij*(-0.25*A66*N3x*N4y*alphat/h + N4x*(A12*N3y + A16*N3x) + N4y*(A26*N3y + A66*N3x))) + r12*(detJ*r11*wij*(-0.25*A66*N3y*N4x*alphat/h + N4x*(A16*N3x + A66*N3y) + N4y*(A12*N3x + A26*N3y)) + detJ*r12*wij*(0.25*A66*N3x*N4x*alphat/h + Ev*gamma3*gamma4 + N4x*(A26*N3y + A66*N3x) + N4y*(A22*N3y + A26*N3x)))
            k += 1
            KC0v[k] += detJ*r13*r23*wij*(Ew*gamma3*gamma4 + N4x*(E45*N3y + E55*N3x) + N4y*(E44*N3y + E45*N3x)) + r21*(detJ*r11*wij*(0.25*A66*N3y*N4y*alphat/h + Eu*gamma3*gamma4 + N4x*(A11*N3x + A16*N3y) + N4y*(A16*N3x + A66*N3y)) + detJ*r12*wij*(-0.25*A66*N3x*N4y*alphat/h + N4x*(A12*N3y + A16*N3x) + N4y*(A26*N3y + A66*N3x))) + r22*(detJ*r11*wij*(-0.25*A66*N3y*N4x*alphat/h + N4x*(A16*N3x + A66*N3y) + N4y*(A12*N3x + A26*N3y)) + detJ*r12*wij*(0.25*A66*N3x*N4x*alphat/h + Ev*gamma3*gamma4 + N4x*(A26*N3y + A66*N3x) + N4y*(A22*N3y + A26*N3x)))
            k += 1
            KC0v[k] += detJ*r13*r33*wij*(Ew*gamma3*gamma4 + N4x*(E45*N3y + E55*N3x) + N4y*(E44*N3y + E45*N3x)) + r31*(detJ*r11*wij*(0.25*A66*N3y*N4y*alphat/h + Eu*gamma3*gamma4 + N4x*(A11*N3x + A16*N3y) + N4y*(A16*N3x + A66*N3y)) + detJ*r12*wij*(-0.25*A66*N3x*N4y*alphat/h + N4x*(A12*N3y + A16*N3x) + N4y*(A26*N3y + A66*N3x))) + r32*(detJ*r11*wij*(-0.25*A66*N3y*N4x*alphat/h + N4x*(A16*N3x + A66*N3y) + N4y*(A12*N3x + A26*N3y)) + detJ*r12*wij*(0.25*A66*N3x*N4x*alphat/h + Ev*gamma3*gamma4 + N4x*(A26*N3y + A66*N3x) + N4y*(A22*N3y + A26*N3x)))
            k += 1
            KC0v[k] += r11*(-N4*detJ*r13*wij*(E44*N3y + E45*N3x) + detJ*r11*wij*(-N4x*(B16*N3x + B66*N3y) - N4y*(B12*N3x + B26*N3y)) + detJ*r12*wij*(-N4x*(B26*N3y + B66*N3x) - N4y*(B22*N3y + B26*N3x))) + r12*(N4*detJ*r13*wij*(E45*N3y + E55*N3x) + detJ*r11*wij*(N4x*(B11*N3x + B16*N3y) + N4y*(B16*N3x + B66*N3y)) + detJ*r12*wij*(N4x*(B12*N3y + B16*N3x) + N4y*(B26*N3y + B66*N3x))) + r13*(-0.5*A66*N3x*N4*alphat*detJ*r12*wij/h + 0.5*A66*N3y*N4*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += r21*(-N4*detJ*r13*wij*(E44*N3y + E45*N3x) + detJ*r11*wij*(-N4x*(B16*N3x + B66*N3y) - N4y*(B12*N3x + B26*N3y)) + detJ*r12*wij*(-N4x*(B26*N3y + B66*N3x) - N4y*(B22*N3y + B26*N3x))) + r22*(N4*detJ*r13*wij*(E45*N3y + E55*N3x) + detJ*r11*wij*(N4x*(B11*N3x + B16*N3y) + N4y*(B16*N3x + B66*N3y)) + detJ*r12*wij*(N4x*(B12*N3y + B16*N3x) + N4y*(B26*N3y + B66*N3x))) + r23*(-0.5*A66*N3x*N4*alphat*detJ*r12*wij/h + 0.5*A66*N3y*N4*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += r31*(-N4*detJ*r13*wij*(E44*N3y + E45*N3x) + detJ*r11*wij*(-N4x*(B16*N3x + B66*N3y) - N4y*(B12*N3x + B26*N3y)) + detJ*r12*wij*(-N4x*(B26*N3y + B66*N3x) - N4y*(B22*N3y + B26*N3x))) + r32*(N4*detJ*r13*wij*(E45*N3y + E55*N3x) + detJ*r11*wij*(N4x*(B11*N3x + B16*N3y) + N4y*(B16*N3x + B66*N3y)) + detJ*r12*wij*(N4x*(B12*N3y + B16*N3x) + N4y*(B26*N3y + B66*N3x))) + r33*(-0.5*A66*N3x*N4*alphat*detJ*r12*wij/h + 0.5*A66*N3y*N4*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += detJ*r13*r23*wij*(Ew*gamma1*gamma3 + N1x*(E45*N3y + E55*N3x) + N1y*(E44*N3y + E45*N3x)) + r11*(detJ*r21*wij*(0.25*A66*N1y*N3y*alphat/h + Eu*gamma1*gamma3 + N1x*(A11*N3x + A16*N3y) + N1y*(A16*N3x + A66*N3y)) + detJ*r22*wij*(-0.25*A66*N1y*N3x*alphat/h + N1x*(A12*N3y + A16*N3x) + N1y*(A26*N3y + A66*N3x))) + r12*(detJ*r21*wij*(-0.25*A66*N1x*N3y*alphat/h + N1x*(A16*N3x + A66*N3y) + N1y*(A12*N3x + A26*N3y)) + detJ*r22*wij*(0.25*A66*N1x*N3x*alphat/h + Ev*gamma1*gamma3 + N1x*(A26*N3y + A66*N3x) + N1y*(A22*N3y + A26*N3x)))
            k += 1
            KC0v[k] += detJ*r23**2*wij*(Ew*gamma1*gamma3 + N1x*(E45*N3y + E55*N3x) + N1y*(E44*N3y + E45*N3x)) + r21*(detJ*r21*wij*(0.25*A66*N1y*N3y*alphat/h + Eu*gamma1*gamma3 + N1x*(A11*N3x + A16*N3y) + N1y*(A16*N3x + A66*N3y)) + detJ*r22*wij*(-0.25*A66*N1y*N3x*alphat/h + N1x*(A12*N3y + A16*N3x) + N1y*(A26*N3y + A66*N3x))) + r22*(detJ*r21*wij*(-0.25*A66*N1x*N3y*alphat/h + N1x*(A16*N3x + A66*N3y) + N1y*(A12*N3x + A26*N3y)) + detJ*r22*wij*(0.25*A66*N1x*N3x*alphat/h + Ev*gamma1*gamma3 + N1x*(A26*N3y + A66*N3x) + N1y*(A22*N3y + A26*N3x)))
            k += 1
            KC0v[k] += detJ*r23*r33*wij*(Ew*gamma1*gamma3 + N1x*(E45*N3y + E55*N3x) + N1y*(E44*N3y + E45*N3x)) + r31*(detJ*r21*wij*(0.25*A66*N1y*N3y*alphat/h + Eu*gamma1*gamma3 + N1x*(A11*N3x + A16*N3y) + N1y*(A16*N3x + A66*N3y)) + detJ*r22*wij*(-0.25*A66*N1y*N3x*alphat/h + N1x*(A12*N3y + A16*N3x) + N1y*(A26*N3y + A66*N3x))) + r32*(detJ*r21*wij*(-0.25*A66*N1x*N3y*alphat/h + N1x*(A16*N3x + A66*N3y) + N1y*(A12*N3x + A26*N3y)) + detJ*r22*wij*(0.25*A66*N1x*N3x*alphat/h + Ev*gamma1*gamma3 + N1x*(A26*N3y + A66*N3x) + N1y*(A22*N3y + A26*N3x)))
            k += 1
            KC0v[k] += r11*(-N1*detJ*r23*wij*(E44*N3y + E45*N3x) + detJ*r21*wij*(-N1x*(B16*N3x + B66*N3y) - N1y*(B12*N3x + B26*N3y)) + detJ*r22*wij*(-N1x*(B26*N3y + B66*N3x) - N1y*(B22*N3y + B26*N3x))) + r12*(N1*detJ*r23*wij*(E45*N3y + E55*N3x) + detJ*r21*wij*(N1x*(B11*N3x + B16*N3y) + N1y*(B16*N3x + B66*N3y)) + detJ*r22*wij*(N1x*(B12*N3y + B16*N3x) + N1y*(B26*N3y + B66*N3x))) + r13*(-0.5*A66*N1*N3x*alphat*detJ*r22*wij/h + 0.5*A66*N1*N3y*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += r21*(-N1*detJ*r23*wij*(E44*N3y + E45*N3x) + detJ*r21*wij*(-N1x*(B16*N3x + B66*N3y) - N1y*(B12*N3x + B26*N3y)) + detJ*r22*wij*(-N1x*(B26*N3y + B66*N3x) - N1y*(B22*N3y + B26*N3x))) + r22*(N1*detJ*r23*wij*(E45*N3y + E55*N3x) + detJ*r21*wij*(N1x*(B11*N3x + B16*N3y) + N1y*(B16*N3x + B66*N3y)) + detJ*r22*wij*(N1x*(B12*N3y + B16*N3x) + N1y*(B26*N3y + B66*N3x))) + r23*(-0.5*A66*N1*N3x*alphat*detJ*r22*wij/h + 0.5*A66*N1*N3y*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += r31*(-N1*detJ*r23*wij*(E44*N3y + E45*N3x) + detJ*r21*wij*(-N1x*(B16*N3x + B66*N3y) - N1y*(B12*N3x + B26*N3y)) + detJ*r22*wij*(-N1x*(B26*N3y + B66*N3x) - N1y*(B22*N3y + B26*N3x))) + r32*(N1*detJ*r23*wij*(E45*N3y + E55*N3x) + detJ*r21*wij*(N1x*(B11*N3x + B16*N3y) + N1y*(B16*N3x + B66*N3y)) + detJ*r22*wij*(N1x*(B12*N3y + B16*N3x) + N1y*(B26*N3y + B66*N3x))) + r33*(-0.5*A66*N1*N3x*alphat*detJ*r22*wij/h + 0.5*A66*N1*N3y*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += detJ*r13*r23*wij*(Ew*gamma2*gamma3 + N2x*(E45*N3y + E55*N3x) + N2y*(E44*N3y + E45*N3x)) + r11*(detJ*r21*wij*(0.25*A66*N2y*N3y*alphat/h + Eu*gamma2*gamma3 + N2x*(A11*N3x + A16*N3y) + N2y*(A16*N3x + A66*N3y)) + detJ*r22*wij*(-0.25*A66*N2y*N3x*alphat/h + N2x*(A12*N3y + A16*N3x) + N2y*(A26*N3y + A66*N3x))) + r12*(detJ*r21*wij*(-0.25*A66*N2x*N3y*alphat/h + N2x*(A16*N3x + A66*N3y) + N2y*(A12*N3x + A26*N3y)) + detJ*r22*wij*(0.25*A66*N2x*N3x*alphat/h + Ev*gamma2*gamma3 + N2x*(A26*N3y + A66*N3x) + N2y*(A22*N3y + A26*N3x)))
            k += 1
            KC0v[k] += detJ*r23**2*wij*(Ew*gamma2*gamma3 + N2x*(E45*N3y + E55*N3x) + N2y*(E44*N3y + E45*N3x)) + r21*(detJ*r21*wij*(0.25*A66*N2y*N3y*alphat/h + Eu*gamma2*gamma3 + N2x*(A11*N3x + A16*N3y) + N2y*(A16*N3x + A66*N3y)) + detJ*r22*wij*(-0.25*A66*N2y*N3x*alphat/h + N2x*(A12*N3y + A16*N3x) + N2y*(A26*N3y + A66*N3x))) + r22*(detJ*r21*wij*(-0.25*A66*N2x*N3y*alphat/h + N2x*(A16*N3x + A66*N3y) + N2y*(A12*N3x + A26*N3y)) + detJ*r22*wij*(0.25*A66*N2x*N3x*alphat/h + Ev*gamma2*gamma3 + N2x*(A26*N3y + A66*N3x) + N2y*(A22*N3y + A26*N3x)))
            k += 1
            KC0v[k] += detJ*r23*r33*wij*(Ew*gamma2*gamma3 + N2x*(E45*N3y + E55*N3x) + N2y*(E44*N3y + E45*N3x)) + r31*(detJ*r21*wij*(0.25*A66*N2y*N3y*alphat/h + Eu*gamma2*gamma3 + N2x*(A11*N3x + A16*N3y) + N2y*(A16*N3x + A66*N3y)) + detJ*r22*wij*(-0.25*A66*N2y*N3x*alphat/h + N2x*(A12*N3y + A16*N3x) + N2y*(A26*N3y + A66*N3x))) + r32*(detJ*r21*wij*(-0.25*A66*N2x*N3y*alphat/h + N2x*(A16*N3x + A66*N3y) + N2y*(A12*N3x + A26*N3y)) + detJ*r22*wij*(0.25*A66*N2x*N3x*alphat/h + Ev*gamma2*gamma3 + N2x*(A26*N3y + A66*N3x) + N2y*(A22*N3y + A26*N3x)))
            k += 1
            KC0v[k] += r11*(-N2*detJ*r23*wij*(E44*N3y + E45*N3x) + detJ*r21*wij*(-N2x*(B16*N3x + B66*N3y) - N2y*(B12*N3x + B26*N3y)) + detJ*r22*wij*(-N2x*(B26*N3y + B66*N3x) - N2y*(B22*N3y + B26*N3x))) + r12*(N2*detJ*r23*wij*(E45*N3y + E55*N3x) + detJ*r21*wij*(N2x*(B11*N3x + B16*N3y) + N2y*(B16*N3x + B66*N3y)) + detJ*r22*wij*(N2x*(B12*N3y + B16*N3x) + N2y*(B26*N3y + B66*N3x))) + r13*(-0.5*A66*N2*N3x*alphat*detJ*r22*wij/h + 0.5*A66*N2*N3y*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += r21*(-N2*detJ*r23*wij*(E44*N3y + E45*N3x) + detJ*r21*wij*(-N2x*(B16*N3x + B66*N3y) - N2y*(B12*N3x + B26*N3y)) + detJ*r22*wij*(-N2x*(B26*N3y + B66*N3x) - N2y*(B22*N3y + B26*N3x))) + r22*(N2*detJ*r23*wij*(E45*N3y + E55*N3x) + detJ*r21*wij*(N2x*(B11*N3x + B16*N3y) + N2y*(B16*N3x + B66*N3y)) + detJ*r22*wij*(N2x*(B12*N3y + B16*N3x) + N2y*(B26*N3y + B66*N3x))) + r23*(-0.5*A66*N2*N3x*alphat*detJ*r22*wij/h + 0.5*A66*N2*N3y*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += r31*(-N2*detJ*r23*wij*(E44*N3y + E45*N3x) + detJ*r21*wij*(-N2x*(B16*N3x + B66*N3y) - N2y*(B12*N3x + B26*N3y)) + detJ*r22*wij*(-N2x*(B26*N3y + B66*N3x) - N2y*(B22*N3y + B26*N3x))) + r32*(N2*detJ*r23*wij*(E45*N3y + E55*N3x) + detJ*r21*wij*(N2x*(B11*N3x + B16*N3y) + N2y*(B16*N3x + B66*N3y)) + detJ*r22*wij*(N2x*(B12*N3y + B16*N3x) + N2y*(B26*N3y + B66*N3x))) + r33*(-0.5*A66*N2*N3x*alphat*detJ*r22*wij/h + 0.5*A66*N2*N3y*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += detJ*r13*r23*wij*(Ew*gamma3**2 + N3x*(E45*N3y + E55*N3x) + N3y*(E44*N3y + E45*N3x)) + r11*(detJ*r21*wij*(0.25*A66*N3y**2*alphat/h + Eu*gamma3**2 + N3x*(A11*N3x + A16*N3y) + N3y*(A16*N3x + A66*N3y)) + detJ*r22*wij*(-0.25*A66*N3x*N3y*alphat/h + N3x*(A12*N3y + A16*N3x) + N3y*(A26*N3y + A66*N3x))) + r12*(detJ*r21*wij*(-0.25*A66*N3x*N3y*alphat/h + N3x*(A16*N3x + A66*N3y) + N3y*(A12*N3x + A26*N3y)) + detJ*r22*wij*(0.25*A66*N3x**2*alphat/h + Ev*gamma3**2 + N3x*(A26*N3y + A66*N3x) + N3y*(A22*N3y + A26*N3x)))
            k += 1
            KC0v[k] += detJ*r23**2*wij*(Ew*gamma3**2 + N3x*(E45*N3y + E55*N3x) + N3y*(E44*N3y + E45*N3x)) + r21*(detJ*r21*wij*(0.25*A66*N3y**2*alphat/h + Eu*gamma3**2 + N3x*(A11*N3x + A16*N3y) + N3y*(A16*N3x + A66*N3y)) + detJ*r22*wij*(-0.25*A66*N3x*N3y*alphat/h + N3x*(A12*N3y + A16*N3x) + N3y*(A26*N3y + A66*N3x))) + r22*(detJ*r21*wij*(-0.25*A66*N3x*N3y*alphat/h + N3x*(A16*N3x + A66*N3y) + N3y*(A12*N3x + A26*N3y)) + detJ*r22*wij*(0.25*A66*N3x**2*alphat/h + Ev*gamma3**2 + N3x*(A26*N3y + A66*N3x) + N3y*(A22*N3y + A26*N3x)))
            k += 1
            KC0v[k] += detJ*r23*r33*wij*(Ew*gamma3**2 + N3x*(E45*N3y + E55*N3x) + N3y*(E44*N3y + E45*N3x)) + r31*(detJ*r21*wij*(0.25*A66*N3y**2*alphat/h + Eu*gamma3**2 + N3x*(A11*N3x + A16*N3y) + N3y*(A16*N3x + A66*N3y)) + detJ*r22*wij*(-0.25*A66*N3x*N3y*alphat/h + N3x*(A12*N3y + A16*N3x) + N3y*(A26*N3y + A66*N3x))) + r32*(detJ*r21*wij*(-0.25*A66*N3x*N3y*alphat/h + N3x*(A16*N3x + A66*N3y) + N3y*(A12*N3x + A26*N3y)) + detJ*r22*wij*(0.25*A66*N3x**2*alphat/h + Ev*gamma3**2 + N3x*(A26*N3y + A66*N3x) + N3y*(A22*N3y + A26*N3x)))
            k += 1
            KC0v[k] += r11*(-N3*detJ*r23*wij*(E44*N3y + E45*N3x) + detJ*r21*wij*(-N3x*(B16*N3x + B66*N3y) - N3y*(B12*N3x + B26*N3y)) + detJ*r22*wij*(-N3x*(B26*N3y + B66*N3x) - N3y*(B22*N3y + B26*N3x))) + r12*(N3*detJ*r23*wij*(E45*N3y + E55*N3x) + detJ*r21*wij*(N3x*(B11*N3x + B16*N3y) + N3y*(B16*N3x + B66*N3y)) + detJ*r22*wij*(N3x*(B12*N3y + B16*N3x) + N3y*(B26*N3y + B66*N3x))) + r13*(-0.5*A66*N3*N3x*alphat*detJ*r22*wij/h + 0.5*A66*N3*N3y*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += r21*(-N3*detJ*r23*wij*(E44*N3y + E45*N3x) + detJ*r21*wij*(-N3x*(B16*N3x + B66*N3y) - N3y*(B12*N3x + B26*N3y)) + detJ*r22*wij*(-N3x*(B26*N3y + B66*N3x) - N3y*(B22*N3y + B26*N3x))) + r22*(N3*detJ*r23*wij*(E45*N3y + E55*N3x) + detJ*r21*wij*(N3x*(B11*N3x + B16*N3y) + N3y*(B16*N3x + B66*N3y)) + detJ*r22*wij*(N3x*(B12*N3y + B16*N3x) + N3y*(B26*N3y + B66*N3x))) + r23*(-0.5*A66*N3*N3x*alphat*detJ*r22*wij/h + 0.5*A66*N3*N3y*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += r31*(-N3*detJ*r23*wij*(E44*N3y + E45*N3x) + detJ*r21*wij*(-N3x*(B16*N3x + B66*N3y) - N3y*(B12*N3x + B26*N3y)) + detJ*r22*wij*(-N3x*(B26*N3y + B66*N3x) - N3y*(B22*N3y + B26*N3x))) + r32*(N3*detJ*r23*wij*(E45*N3y + E55*N3x) + detJ*r21*wij*(N3x*(B11*N3x + B16*N3y) + N3y*(B16*N3x + B66*N3y)) + detJ*r22*wij*(N3x*(B12*N3y + B16*N3x) + N3y*(B26*N3y + B66*N3x))) + r33*(-0.5*A66*N3*N3x*alphat*detJ*r22*wij/h + 0.5*A66*N3*N3y*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += detJ*r13*r23*wij*(Ew*gamma3*gamma4 + N4x*(E45*N3y + E55*N3x) + N4y*(E44*N3y + E45*N3x)) + r11*(detJ*r21*wij*(0.25*A66*N3y*N4y*alphat/h + Eu*gamma3*gamma4 + N4x*(A11*N3x + A16*N3y) + N4y*(A16*N3x + A66*N3y)) + detJ*r22*wij*(-0.25*A66*N3x*N4y*alphat/h + N4x*(A12*N3y + A16*N3x) + N4y*(A26*N3y + A66*N3x))) + r12*(detJ*r21*wij*(-0.25*A66*N3y*N4x*alphat/h + N4x*(A16*N3x + A66*N3y) + N4y*(A12*N3x + A26*N3y)) + detJ*r22*wij*(0.25*A66*N3x*N4x*alphat/h + Ev*gamma3*gamma4 + N4x*(A26*N3y + A66*N3x) + N4y*(A22*N3y + A26*N3x)))
            k += 1
            KC0v[k] += detJ*r23**2*wij*(Ew*gamma3*gamma4 + N4x*(E45*N3y + E55*N3x) + N4y*(E44*N3y + E45*N3x)) + r21*(detJ*r21*wij*(0.25*A66*N3y*N4y*alphat/h + Eu*gamma3*gamma4 + N4x*(A11*N3x + A16*N3y) + N4y*(A16*N3x + A66*N3y)) + detJ*r22*wij*(-0.25*A66*N3x*N4y*alphat/h + N4x*(A12*N3y + A16*N3x) + N4y*(A26*N3y + A66*N3x))) + r22*(detJ*r21*wij*(-0.25*A66*N3y*N4x*alphat/h + N4x*(A16*N3x + A66*N3y) + N4y*(A12*N3x + A26*N3y)) + detJ*r22*wij*(0.25*A66*N3x*N4x*alphat/h + Ev*gamma3*gamma4 + N4x*(A26*N3y + A66*N3x) + N4y*(A22*N3y + A26*N3x)))
            k += 1
            KC0v[k] += detJ*r23*r33*wij*(Ew*gamma3*gamma4 + N4x*(E45*N3y + E55*N3x) + N4y*(E44*N3y + E45*N3x)) + r31*(detJ*r21*wij*(0.25*A66*N3y*N4y*alphat/h + Eu*gamma3*gamma4 + N4x*(A11*N3x + A16*N3y) + N4y*(A16*N3x + A66*N3y)) + detJ*r22*wij*(-0.25*A66*N3x*N4y*alphat/h + N4x*(A12*N3y + A16*N3x) + N4y*(A26*N3y + A66*N3x))) + r32*(detJ*r21*wij*(-0.25*A66*N3y*N4x*alphat/h + N4x*(A16*N3x + A66*N3y) + N4y*(A12*N3x + A26*N3y)) + detJ*r22*wij*(0.25*A66*N3x*N4x*alphat/h + Ev*gamma3*gamma4 + N4x*(A26*N3y + A66*N3x) + N4y*(A22*N3y + A26*N3x)))
            k += 1
            KC0v[k] += r11*(-N4*detJ*r23*wij*(E44*N3y + E45*N3x) + detJ*r21*wij*(-N4x*(B16*N3x + B66*N3y) - N4y*(B12*N3x + B26*N3y)) + detJ*r22*wij*(-N4x*(B26*N3y + B66*N3x) - N4y*(B22*N3y + B26*N3x))) + r12*(N4*detJ*r23*wij*(E45*N3y + E55*N3x) + detJ*r21*wij*(N4x*(B11*N3x + B16*N3y) + N4y*(B16*N3x + B66*N3y)) + detJ*r22*wij*(N4x*(B12*N3y + B16*N3x) + N4y*(B26*N3y + B66*N3x))) + r13*(-0.5*A66*N3x*N4*alphat*detJ*r22*wij/h + 0.5*A66*N3y*N4*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += r21*(-N4*detJ*r23*wij*(E44*N3y + E45*N3x) + detJ*r21*wij*(-N4x*(B16*N3x + B66*N3y) - N4y*(B12*N3x + B26*N3y)) + detJ*r22*wij*(-N4x*(B26*N3y + B66*N3x) - N4y*(B22*N3y + B26*N3x))) + r22*(N4*detJ*r23*wij*(E45*N3y + E55*N3x) + detJ*r21*wij*(N4x*(B11*N3x + B16*N3y) + N4y*(B16*N3x + B66*N3y)) + detJ*r22*wij*(N4x*(B12*N3y + B16*N3x) + N4y*(B26*N3y + B66*N3x))) + r23*(-0.5*A66*N3x*N4*alphat*detJ*r22*wij/h + 0.5*A66*N3y*N4*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += r31*(-N4*detJ*r23*wij*(E44*N3y + E45*N3x) + detJ*r21*wij*(-N4x*(B16*N3x + B66*N3y) - N4y*(B12*N3x + B26*N3y)) + detJ*r22*wij*(-N4x*(B26*N3y + B66*N3x) - N4y*(B22*N3y + B26*N3x))) + r32*(N4*detJ*r23*wij*(E45*N3y + E55*N3x) + detJ*r21*wij*(N4x*(B11*N3x + B16*N3y) + N4y*(B16*N3x + B66*N3y)) + detJ*r22*wij*(N4x*(B12*N3y + B16*N3x) + N4y*(B26*N3y + B66*N3x))) + r33*(-0.5*A66*N3x*N4*alphat*detJ*r22*wij/h + 0.5*A66*N3y*N4*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += detJ*r13*r33*wij*(Ew*gamma1*gamma3 + N1x*(E45*N3y + E55*N3x) + N1y*(E44*N3y + E45*N3x)) + r11*(detJ*r31*wij*(0.25*A66*N1y*N3y*alphat/h + Eu*gamma1*gamma3 + N1x*(A11*N3x + A16*N3y) + N1y*(A16*N3x + A66*N3y)) + detJ*r32*wij*(-0.25*A66*N1y*N3x*alphat/h + N1x*(A12*N3y + A16*N3x) + N1y*(A26*N3y + A66*N3x))) + r12*(detJ*r31*wij*(-0.25*A66*N1x*N3y*alphat/h + N1x*(A16*N3x + A66*N3y) + N1y*(A12*N3x + A26*N3y)) + detJ*r32*wij*(0.25*A66*N1x*N3x*alphat/h + Ev*gamma1*gamma3 + N1x*(A26*N3y + A66*N3x) + N1y*(A22*N3y + A26*N3x)))
            k += 1
            KC0v[k] += detJ*r23*r33*wij*(Ew*gamma1*gamma3 + N1x*(E45*N3y + E55*N3x) + N1y*(E44*N3y + E45*N3x)) + r21*(detJ*r31*wij*(0.25*A66*N1y*N3y*alphat/h + Eu*gamma1*gamma3 + N1x*(A11*N3x + A16*N3y) + N1y*(A16*N3x + A66*N3y)) + detJ*r32*wij*(-0.25*A66*N1y*N3x*alphat/h + N1x*(A12*N3y + A16*N3x) + N1y*(A26*N3y + A66*N3x))) + r22*(detJ*r31*wij*(-0.25*A66*N1x*N3y*alphat/h + N1x*(A16*N3x + A66*N3y) + N1y*(A12*N3x + A26*N3y)) + detJ*r32*wij*(0.25*A66*N1x*N3x*alphat/h + Ev*gamma1*gamma3 + N1x*(A26*N3y + A66*N3x) + N1y*(A22*N3y + A26*N3x)))
            k += 1
            KC0v[k] += detJ*r33**2*wij*(Ew*gamma1*gamma3 + N1x*(E45*N3y + E55*N3x) + N1y*(E44*N3y + E45*N3x)) + r31*(detJ*r31*wij*(0.25*A66*N1y*N3y*alphat/h + Eu*gamma1*gamma3 + N1x*(A11*N3x + A16*N3y) + N1y*(A16*N3x + A66*N3y)) + detJ*r32*wij*(-0.25*A66*N1y*N3x*alphat/h + N1x*(A12*N3y + A16*N3x) + N1y*(A26*N3y + A66*N3x))) + r32*(detJ*r31*wij*(-0.25*A66*N1x*N3y*alphat/h + N1x*(A16*N3x + A66*N3y) + N1y*(A12*N3x + A26*N3y)) + detJ*r32*wij*(0.25*A66*N1x*N3x*alphat/h + Ev*gamma1*gamma3 + N1x*(A26*N3y + A66*N3x) + N1y*(A22*N3y + A26*N3x)))
            k += 1
            KC0v[k] += r11*(-N1*detJ*r33*wij*(E44*N3y + E45*N3x) + detJ*r31*wij*(-N1x*(B16*N3x + B66*N3y) - N1y*(B12*N3x + B26*N3y)) + detJ*r32*wij*(-N1x*(B26*N3y + B66*N3x) - N1y*(B22*N3y + B26*N3x))) + r12*(N1*detJ*r33*wij*(E45*N3y + E55*N3x) + detJ*r31*wij*(N1x*(B11*N3x + B16*N3y) + N1y*(B16*N3x + B66*N3y)) + detJ*r32*wij*(N1x*(B12*N3y + B16*N3x) + N1y*(B26*N3y + B66*N3x))) + r13*(-0.5*A66*N1*N3x*alphat*detJ*r32*wij/h + 0.5*A66*N1*N3y*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += r21*(-N1*detJ*r33*wij*(E44*N3y + E45*N3x) + detJ*r31*wij*(-N1x*(B16*N3x + B66*N3y) - N1y*(B12*N3x + B26*N3y)) + detJ*r32*wij*(-N1x*(B26*N3y + B66*N3x) - N1y*(B22*N3y + B26*N3x))) + r22*(N1*detJ*r33*wij*(E45*N3y + E55*N3x) + detJ*r31*wij*(N1x*(B11*N3x + B16*N3y) + N1y*(B16*N3x + B66*N3y)) + detJ*r32*wij*(N1x*(B12*N3y + B16*N3x) + N1y*(B26*N3y + B66*N3x))) + r23*(-0.5*A66*N1*N3x*alphat*detJ*r32*wij/h + 0.5*A66*N1*N3y*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += r31*(-N1*detJ*r33*wij*(E44*N3y + E45*N3x) + detJ*r31*wij*(-N1x*(B16*N3x + B66*N3y) - N1y*(B12*N3x + B26*N3y)) + detJ*r32*wij*(-N1x*(B26*N3y + B66*N3x) - N1y*(B22*N3y + B26*N3x))) + r32*(N1*detJ*r33*wij*(E45*N3y + E55*N3x) + detJ*r31*wij*(N1x*(B11*N3x + B16*N3y) + N1y*(B16*N3x + B66*N3y)) + detJ*r32*wij*(N1x*(B12*N3y + B16*N3x) + N1y*(B26*N3y + B66*N3x))) + r33*(-0.5*A66*N1*N3x*alphat*detJ*r32*wij/h + 0.5*A66*N1*N3y*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += detJ*r13*r33*wij*(Ew*gamma2*gamma3 + N2x*(E45*N3y + E55*N3x) + N2y*(E44*N3y + E45*N3x)) + r11*(detJ*r31*wij*(0.25*A66*N2y*N3y*alphat/h + Eu*gamma2*gamma3 + N2x*(A11*N3x + A16*N3y) + N2y*(A16*N3x + A66*N3y)) + detJ*r32*wij*(-0.25*A66*N2y*N3x*alphat/h + N2x*(A12*N3y + A16*N3x) + N2y*(A26*N3y + A66*N3x))) + r12*(detJ*r31*wij*(-0.25*A66*N2x*N3y*alphat/h + N2x*(A16*N3x + A66*N3y) + N2y*(A12*N3x + A26*N3y)) + detJ*r32*wij*(0.25*A66*N2x*N3x*alphat/h + Ev*gamma2*gamma3 + N2x*(A26*N3y + A66*N3x) + N2y*(A22*N3y + A26*N3x)))
            k += 1
            KC0v[k] += detJ*r23*r33*wij*(Ew*gamma2*gamma3 + N2x*(E45*N3y + E55*N3x) + N2y*(E44*N3y + E45*N3x)) + r21*(detJ*r31*wij*(0.25*A66*N2y*N3y*alphat/h + Eu*gamma2*gamma3 + N2x*(A11*N3x + A16*N3y) + N2y*(A16*N3x + A66*N3y)) + detJ*r32*wij*(-0.25*A66*N2y*N3x*alphat/h + N2x*(A12*N3y + A16*N3x) + N2y*(A26*N3y + A66*N3x))) + r22*(detJ*r31*wij*(-0.25*A66*N2x*N3y*alphat/h + N2x*(A16*N3x + A66*N3y) + N2y*(A12*N3x + A26*N3y)) + detJ*r32*wij*(0.25*A66*N2x*N3x*alphat/h + Ev*gamma2*gamma3 + N2x*(A26*N3y + A66*N3x) + N2y*(A22*N3y + A26*N3x)))
            k += 1
            KC0v[k] += detJ*r33**2*wij*(Ew*gamma2*gamma3 + N2x*(E45*N3y + E55*N3x) + N2y*(E44*N3y + E45*N3x)) + r31*(detJ*r31*wij*(0.25*A66*N2y*N3y*alphat/h + Eu*gamma2*gamma3 + N2x*(A11*N3x + A16*N3y) + N2y*(A16*N3x + A66*N3y)) + detJ*r32*wij*(-0.25*A66*N2y*N3x*alphat/h + N2x*(A12*N3y + A16*N3x) + N2y*(A26*N3y + A66*N3x))) + r32*(detJ*r31*wij*(-0.25*A66*N2x*N3y*alphat/h + N2x*(A16*N3x + A66*N3y) + N2y*(A12*N3x + A26*N3y)) + detJ*r32*wij*(0.25*A66*N2x*N3x*alphat/h + Ev*gamma2*gamma3 + N2x*(A26*N3y + A66*N3x) + N2y*(A22*N3y + A26*N3x)))
            k += 1
            KC0v[k] += r11*(-N2*detJ*r33*wij*(E44*N3y + E45*N3x) + detJ*r31*wij*(-N2x*(B16*N3x + B66*N3y) - N2y*(B12*N3x + B26*N3y)) + detJ*r32*wij*(-N2x*(B26*N3y + B66*N3x) - N2y*(B22*N3y + B26*N3x))) + r12*(N2*detJ*r33*wij*(E45*N3y + E55*N3x) + detJ*r31*wij*(N2x*(B11*N3x + B16*N3y) + N2y*(B16*N3x + B66*N3y)) + detJ*r32*wij*(N2x*(B12*N3y + B16*N3x) + N2y*(B26*N3y + B66*N3x))) + r13*(-0.5*A66*N2*N3x*alphat*detJ*r32*wij/h + 0.5*A66*N2*N3y*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += r21*(-N2*detJ*r33*wij*(E44*N3y + E45*N3x) + detJ*r31*wij*(-N2x*(B16*N3x + B66*N3y) - N2y*(B12*N3x + B26*N3y)) + detJ*r32*wij*(-N2x*(B26*N3y + B66*N3x) - N2y*(B22*N3y + B26*N3x))) + r22*(N2*detJ*r33*wij*(E45*N3y + E55*N3x) + detJ*r31*wij*(N2x*(B11*N3x + B16*N3y) + N2y*(B16*N3x + B66*N3y)) + detJ*r32*wij*(N2x*(B12*N3y + B16*N3x) + N2y*(B26*N3y + B66*N3x))) + r23*(-0.5*A66*N2*N3x*alphat*detJ*r32*wij/h + 0.5*A66*N2*N3y*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += r31*(-N2*detJ*r33*wij*(E44*N3y + E45*N3x) + detJ*r31*wij*(-N2x*(B16*N3x + B66*N3y) - N2y*(B12*N3x + B26*N3y)) + detJ*r32*wij*(-N2x*(B26*N3y + B66*N3x) - N2y*(B22*N3y + B26*N3x))) + r32*(N2*detJ*r33*wij*(E45*N3y + E55*N3x) + detJ*r31*wij*(N2x*(B11*N3x + B16*N3y) + N2y*(B16*N3x + B66*N3y)) + detJ*r32*wij*(N2x*(B12*N3y + B16*N3x) + N2y*(B26*N3y + B66*N3x))) + r33*(-0.5*A66*N2*N3x*alphat*detJ*r32*wij/h + 0.5*A66*N2*N3y*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += detJ*r13*r33*wij*(Ew*gamma3**2 + N3x*(E45*N3y + E55*N3x) + N3y*(E44*N3y + E45*N3x)) + r11*(detJ*r31*wij*(0.25*A66*N3y**2*alphat/h + Eu*gamma3**2 + N3x*(A11*N3x + A16*N3y) + N3y*(A16*N3x + A66*N3y)) + detJ*r32*wij*(-0.25*A66*N3x*N3y*alphat/h + N3x*(A12*N3y + A16*N3x) + N3y*(A26*N3y + A66*N3x))) + r12*(detJ*r31*wij*(-0.25*A66*N3x*N3y*alphat/h + N3x*(A16*N3x + A66*N3y) + N3y*(A12*N3x + A26*N3y)) + detJ*r32*wij*(0.25*A66*N3x**2*alphat/h + Ev*gamma3**2 + N3x*(A26*N3y + A66*N3x) + N3y*(A22*N3y + A26*N3x)))
            k += 1
            KC0v[k] += detJ*r23*r33*wij*(Ew*gamma3**2 + N3x*(E45*N3y + E55*N3x) + N3y*(E44*N3y + E45*N3x)) + r21*(detJ*r31*wij*(0.25*A66*N3y**2*alphat/h + Eu*gamma3**2 + N3x*(A11*N3x + A16*N3y) + N3y*(A16*N3x + A66*N3y)) + detJ*r32*wij*(-0.25*A66*N3x*N3y*alphat/h + N3x*(A12*N3y + A16*N3x) + N3y*(A26*N3y + A66*N3x))) + r22*(detJ*r31*wij*(-0.25*A66*N3x*N3y*alphat/h + N3x*(A16*N3x + A66*N3y) + N3y*(A12*N3x + A26*N3y)) + detJ*r32*wij*(0.25*A66*N3x**2*alphat/h + Ev*gamma3**2 + N3x*(A26*N3y + A66*N3x) + N3y*(A22*N3y + A26*N3x)))
            k += 1
            KC0v[k] += detJ*r33**2*wij*(Ew*gamma3**2 + N3x*(E45*N3y + E55*N3x) + N3y*(E44*N3y + E45*N3x)) + r31*(detJ*r31*wij*(0.25*A66*N3y**2*alphat/h + Eu*gamma3**2 + N3x*(A11*N3x + A16*N3y) + N3y*(A16*N3x + A66*N3y)) + detJ*r32*wij*(-0.25*A66*N3x*N3y*alphat/h + N3x*(A12*N3y + A16*N3x) + N3y*(A26*N3y + A66*N3x))) + r32*(detJ*r31*wij*(-0.25*A66*N3x*N3y*alphat/h + N3x*(A16*N3x + A66*N3y) + N3y*(A12*N3x + A26*N3y)) + detJ*r32*wij*(0.25*A66*N3x**2*alphat/h + Ev*gamma3**2 + N3x*(A26*N3y + A66*N3x) + N3y*(A22*N3y + A26*N3x)))
            k += 1
            KC0v[k] += r11*(-N3*detJ*r33*wij*(E44*N3y + E45*N3x) + detJ*r31*wij*(-N3x*(B16*N3x + B66*N3y) - N3y*(B12*N3x + B26*N3y)) + detJ*r32*wij*(-N3x*(B26*N3y + B66*N3x) - N3y*(B22*N3y + B26*N3x))) + r12*(N3*detJ*r33*wij*(E45*N3y + E55*N3x) + detJ*r31*wij*(N3x*(B11*N3x + B16*N3y) + N3y*(B16*N3x + B66*N3y)) + detJ*r32*wij*(N3x*(B12*N3y + B16*N3x) + N3y*(B26*N3y + B66*N3x))) + r13*(-0.5*A66*N3*N3x*alphat*detJ*r32*wij/h + 0.5*A66*N3*N3y*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += r21*(-N3*detJ*r33*wij*(E44*N3y + E45*N3x) + detJ*r31*wij*(-N3x*(B16*N3x + B66*N3y) - N3y*(B12*N3x + B26*N3y)) + detJ*r32*wij*(-N3x*(B26*N3y + B66*N3x) - N3y*(B22*N3y + B26*N3x))) + r22*(N3*detJ*r33*wij*(E45*N3y + E55*N3x) + detJ*r31*wij*(N3x*(B11*N3x + B16*N3y) + N3y*(B16*N3x + B66*N3y)) + detJ*r32*wij*(N3x*(B12*N3y + B16*N3x) + N3y*(B26*N3y + B66*N3x))) + r23*(-0.5*A66*N3*N3x*alphat*detJ*r32*wij/h + 0.5*A66*N3*N3y*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += r31*(-N3*detJ*r33*wij*(E44*N3y + E45*N3x) + detJ*r31*wij*(-N3x*(B16*N3x + B66*N3y) - N3y*(B12*N3x + B26*N3y)) + detJ*r32*wij*(-N3x*(B26*N3y + B66*N3x) - N3y*(B22*N3y + B26*N3x))) + r32*(N3*detJ*r33*wij*(E45*N3y + E55*N3x) + detJ*r31*wij*(N3x*(B11*N3x + B16*N3y) + N3y*(B16*N3x + B66*N3y)) + detJ*r32*wij*(N3x*(B12*N3y + B16*N3x) + N3y*(B26*N3y + B66*N3x))) + r33*(-0.5*A66*N3*N3x*alphat*detJ*r32*wij/h + 0.5*A66*N3*N3y*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += detJ*r13*r33*wij*(Ew*gamma3*gamma4 + N4x*(E45*N3y + E55*N3x) + N4y*(E44*N3y + E45*N3x)) + r11*(detJ*r31*wij*(0.25*A66*N3y*N4y*alphat/h + Eu*gamma3*gamma4 + N4x*(A11*N3x + A16*N3y) + N4y*(A16*N3x + A66*N3y)) + detJ*r32*wij*(-0.25*A66*N3x*N4y*alphat/h + N4x*(A12*N3y + A16*N3x) + N4y*(A26*N3y + A66*N3x))) + r12*(detJ*r31*wij*(-0.25*A66*N3y*N4x*alphat/h + N4x*(A16*N3x + A66*N3y) + N4y*(A12*N3x + A26*N3y)) + detJ*r32*wij*(0.25*A66*N3x*N4x*alphat/h + Ev*gamma3*gamma4 + N4x*(A26*N3y + A66*N3x) + N4y*(A22*N3y + A26*N3x)))
            k += 1
            KC0v[k] += detJ*r23*r33*wij*(Ew*gamma3*gamma4 + N4x*(E45*N3y + E55*N3x) + N4y*(E44*N3y + E45*N3x)) + r21*(detJ*r31*wij*(0.25*A66*N3y*N4y*alphat/h + Eu*gamma3*gamma4 + N4x*(A11*N3x + A16*N3y) + N4y*(A16*N3x + A66*N3y)) + detJ*r32*wij*(-0.25*A66*N3x*N4y*alphat/h + N4x*(A12*N3y + A16*N3x) + N4y*(A26*N3y + A66*N3x))) + r22*(detJ*r31*wij*(-0.25*A66*N3y*N4x*alphat/h + N4x*(A16*N3x + A66*N3y) + N4y*(A12*N3x + A26*N3y)) + detJ*r32*wij*(0.25*A66*N3x*N4x*alphat/h + Ev*gamma3*gamma4 + N4x*(A26*N3y + A66*N3x) + N4y*(A22*N3y + A26*N3x)))
            k += 1
            KC0v[k] += detJ*r33**2*wij*(Ew*gamma3*gamma4 + N4x*(E45*N3y + E55*N3x) + N4y*(E44*N3y + E45*N3x)) + r31*(detJ*r31*wij*(0.25*A66*N3y*N4y*alphat/h + Eu*gamma3*gamma4 + N4x*(A11*N3x + A16*N3y) + N4y*(A16*N3x + A66*N3y)) + detJ*r32*wij*(-0.25*A66*N3x*N4y*alphat/h + N4x*(A12*N3y + A16*N3x) + N4y*(A26*N3y + A66*N3x))) + r32*(detJ*r31*wij*(-0.25*A66*N3y*N4x*alphat/h + N4x*(A16*N3x + A66*N3y) + N4y*(A12*N3x + A26*N3y)) + detJ*r32*wij*(0.25*A66*N3x*N4x*alphat/h + Ev*gamma3*gamma4 + N4x*(A26*N3y + A66*N3x) + N4y*(A22*N3y + A26*N3x)))
            k += 1
            KC0v[k] += r11*(-N4*detJ*r33*wij*(E44*N3y + E45*N3x) + detJ*r31*wij*(-N4x*(B16*N3x + B66*N3y) - N4y*(B12*N3x + B26*N3y)) + detJ*r32*wij*(-N4x*(B26*N3y + B66*N3x) - N4y*(B22*N3y + B26*N3x))) + r12*(N4*detJ*r33*wij*(E45*N3y + E55*N3x) + detJ*r31*wij*(N4x*(B11*N3x + B16*N3y) + N4y*(B16*N3x + B66*N3y)) + detJ*r32*wij*(N4x*(B12*N3y + B16*N3x) + N4y*(B26*N3y + B66*N3x))) + r13*(-0.5*A66*N3x*N4*alphat*detJ*r32*wij/h + 0.5*A66*N3y*N4*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += r21*(-N4*detJ*r33*wij*(E44*N3y + E45*N3x) + detJ*r31*wij*(-N4x*(B16*N3x + B66*N3y) - N4y*(B12*N3x + B26*N3y)) + detJ*r32*wij*(-N4x*(B26*N3y + B66*N3x) - N4y*(B22*N3y + B26*N3x))) + r22*(N4*detJ*r33*wij*(E45*N3y + E55*N3x) + detJ*r31*wij*(N4x*(B11*N3x + B16*N3y) + N4y*(B16*N3x + B66*N3y)) + detJ*r32*wij*(N4x*(B12*N3y + B16*N3x) + N4y*(B26*N3y + B66*N3x))) + r23*(-0.5*A66*N3x*N4*alphat*detJ*r32*wij/h + 0.5*A66*N3y*N4*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += r31*(-N4*detJ*r33*wij*(E44*N3y + E45*N3x) + detJ*r31*wij*(-N4x*(B16*N3x + B66*N3y) - N4y*(B12*N3x + B26*N3y)) + detJ*r32*wij*(-N4x*(B26*N3y + B66*N3x) - N4y*(B22*N3y + B26*N3x))) + r32*(N4*detJ*r33*wij*(E45*N3y + E55*N3x) + detJ*r31*wij*(N4x*(B11*N3x + B16*N3y) + N4y*(B16*N3x + B66*N3y)) + detJ*r32*wij*(N4x*(B12*N3y + B16*N3x) + N4y*(B26*N3y + B66*N3x))) + r33*(-0.5*A66*N3x*N4*alphat*detJ*r32*wij/h + 0.5*A66*N3y*N4*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += r11*(0.5*A66*N1y*N3*alphat*detJ*r13*wij/h + detJ*r11*wij*(N1x*(-B12*N3y - B16*N3x) + N1y*(-B26*N3y - B66*N3x)) + detJ*r12*wij*(N1x*(B11*N3x + B16*N3y) + N1y*(B16*N3x + B66*N3y))) + r12*(-0.5*A66*N1x*N3*alphat*detJ*r13*wij/h + detJ*r11*wij*(N1x*(-B26*N3y - B66*N3x) + N1y*(-B22*N3y - B26*N3x)) + detJ*r12*wij*(N1x*(B16*N3x + B66*N3y) + N1y*(B12*N3x + B26*N3y))) + r13*(detJ*r11*wij*(-E44*N1y*N3 - E45*N1x*N3) + detJ*r12*wij*(E45*N1y*N3 + E55*N1x*N3))
            k += 1
            KC0v[k] += r21*(0.5*A66*N1y*N3*alphat*detJ*r13*wij/h + detJ*r11*wij*(N1x*(-B12*N3y - B16*N3x) + N1y*(-B26*N3y - B66*N3x)) + detJ*r12*wij*(N1x*(B11*N3x + B16*N3y) + N1y*(B16*N3x + B66*N3y))) + r22*(-0.5*A66*N1x*N3*alphat*detJ*r13*wij/h + detJ*r11*wij*(N1x*(-B26*N3y - B66*N3x) + N1y*(-B22*N3y - B26*N3x)) + detJ*r12*wij*(N1x*(B16*N3x + B66*N3y) + N1y*(B12*N3x + B26*N3y))) + r23*(detJ*r11*wij*(-E44*N1y*N3 - E45*N1x*N3) + detJ*r12*wij*(E45*N1y*N3 + E55*N1x*N3))
            k += 1
            KC0v[k] += r31*(0.5*A66*N1y*N3*alphat*detJ*r13*wij/h + detJ*r11*wij*(N1x*(-B12*N3y - B16*N3x) + N1y*(-B26*N3y - B66*N3x)) + detJ*r12*wij*(N1x*(B11*N3x + B16*N3y) + N1y*(B16*N3x + B66*N3y))) + r32*(-0.5*A66*N1x*N3*alphat*detJ*r13*wij/h + detJ*r11*wij*(N1x*(-B26*N3y - B66*N3x) + N1y*(-B22*N3y - B26*N3x)) + detJ*r12*wij*(N1x*(B16*N3x + B66*N3y) + N1y*(B12*N3x + B26*N3y))) + r33*(detJ*r11*wij*(-E44*N1y*N3 - E45*N1x*N3) + detJ*r12*wij*(E45*N1y*N3 + E55*N1x*N3))
            k += 1
            KC0v[k] += A66*N1*N3*alphat*detJ*r13**2*wij/h + r11*(detJ*r11*wij*(E44*N1*N3 + Erx*gamma1*gamma3 - N1x*(-D26*N3y - D66*N3x) - N1y*(-D22*N3y - D26*N3x)) + detJ*r12*wij*(-E45*N1*N3 - N1x*(D16*N3x + D66*N3y) - N1y*(D12*N3x + D26*N3y))) + r12*(detJ*r11*wij*(-E45*N1*N3 + N1x*(-D12*N3y - D16*N3x) + N1y*(-D26*N3y - D66*N3x)) + detJ*r12*wij*(E55*N1*N3 + Ery*gamma1*gamma3 + N1x*(D11*N3x + D16*N3y) + N1y*(D16*N3x + D66*N3y)))
            k += 1
            KC0v[k] += A66*N1*N3*alphat*detJ*r13*r23*wij/h + r21*(detJ*r11*wij*(E44*N1*N3 + Erx*gamma1*gamma3 - N1x*(-D26*N3y - D66*N3x) - N1y*(-D22*N3y - D26*N3x)) + detJ*r12*wij*(-E45*N1*N3 - N1x*(D16*N3x + D66*N3y) - N1y*(D12*N3x + D26*N3y))) + r22*(detJ*r11*wij*(-E45*N1*N3 + N1x*(-D12*N3y - D16*N3x) + N1y*(-D26*N3y - D66*N3x)) + detJ*r12*wij*(E55*N1*N3 + Ery*gamma1*gamma3 + N1x*(D11*N3x + D16*N3y) + N1y*(D16*N3x + D66*N3y)))
            k += 1
            KC0v[k] += A66*N1*N3*alphat*detJ*r13*r33*wij/h + r31*(detJ*r11*wij*(E44*N1*N3 + Erx*gamma1*gamma3 - N1x*(-D26*N3y - D66*N3x) - N1y*(-D22*N3y - D26*N3x)) + detJ*r12*wij*(-E45*N1*N3 - N1x*(D16*N3x + D66*N3y) - N1y*(D12*N3x + D26*N3y))) + r32*(detJ*r11*wij*(-E45*N1*N3 + N1x*(-D12*N3y - D16*N3x) + N1y*(-D26*N3y - D66*N3x)) + detJ*r12*wij*(E55*N1*N3 + Ery*gamma1*gamma3 + N1x*(D11*N3x + D16*N3y) + N1y*(D16*N3x + D66*N3y)))
            k += 1
            KC0v[k] += r11*(0.5*A66*N2y*N3*alphat*detJ*r13*wij/h + detJ*r11*wij*(N2x*(-B12*N3y - B16*N3x) + N2y*(-B26*N3y - B66*N3x)) + detJ*r12*wij*(N2x*(B11*N3x + B16*N3y) + N2y*(B16*N3x + B66*N3y))) + r12*(-0.5*A66*N2x*N3*alphat*detJ*r13*wij/h + detJ*r11*wij*(N2x*(-B26*N3y - B66*N3x) + N2y*(-B22*N3y - B26*N3x)) + detJ*r12*wij*(N2x*(B16*N3x + B66*N3y) + N2y*(B12*N3x + B26*N3y))) + r13*(detJ*r11*wij*(-E44*N2y*N3 - E45*N2x*N3) + detJ*r12*wij*(E45*N2y*N3 + E55*N2x*N3))
            k += 1
            KC0v[k] += r21*(0.5*A66*N2y*N3*alphat*detJ*r13*wij/h + detJ*r11*wij*(N2x*(-B12*N3y - B16*N3x) + N2y*(-B26*N3y - B66*N3x)) + detJ*r12*wij*(N2x*(B11*N3x + B16*N3y) + N2y*(B16*N3x + B66*N3y))) + r22*(-0.5*A66*N2x*N3*alphat*detJ*r13*wij/h + detJ*r11*wij*(N2x*(-B26*N3y - B66*N3x) + N2y*(-B22*N3y - B26*N3x)) + detJ*r12*wij*(N2x*(B16*N3x + B66*N3y) + N2y*(B12*N3x + B26*N3y))) + r23*(detJ*r11*wij*(-E44*N2y*N3 - E45*N2x*N3) + detJ*r12*wij*(E45*N2y*N3 + E55*N2x*N3))
            k += 1
            KC0v[k] += r31*(0.5*A66*N2y*N3*alphat*detJ*r13*wij/h + detJ*r11*wij*(N2x*(-B12*N3y - B16*N3x) + N2y*(-B26*N3y - B66*N3x)) + detJ*r12*wij*(N2x*(B11*N3x + B16*N3y) + N2y*(B16*N3x + B66*N3y))) + r32*(-0.5*A66*N2x*N3*alphat*detJ*r13*wij/h + detJ*r11*wij*(N2x*(-B26*N3y - B66*N3x) + N2y*(-B22*N3y - B26*N3x)) + detJ*r12*wij*(N2x*(B16*N3x + B66*N3y) + N2y*(B12*N3x + B26*N3y))) + r33*(detJ*r11*wij*(-E44*N2y*N3 - E45*N2x*N3) + detJ*r12*wij*(E45*N2y*N3 + E55*N2x*N3))
            k += 1
            KC0v[k] += A66*N2*N3*alphat*detJ*r13**2*wij/h + r11*(detJ*r11*wij*(E44*N2*N3 + Erx*gamma2*gamma3 - N2x*(-D26*N3y - D66*N3x) - N2y*(-D22*N3y - D26*N3x)) + detJ*r12*wij*(-E45*N2*N3 - N2x*(D16*N3x + D66*N3y) - N2y*(D12*N3x + D26*N3y))) + r12*(detJ*r11*wij*(-E45*N2*N3 + N2x*(-D12*N3y - D16*N3x) + N2y*(-D26*N3y - D66*N3x)) + detJ*r12*wij*(E55*N2*N3 + Ery*gamma2*gamma3 + N2x*(D11*N3x + D16*N3y) + N2y*(D16*N3x + D66*N3y)))
            k += 1
            KC0v[k] += A66*N2*N3*alphat*detJ*r13*r23*wij/h + r21*(detJ*r11*wij*(E44*N2*N3 + Erx*gamma2*gamma3 - N2x*(-D26*N3y - D66*N3x) - N2y*(-D22*N3y - D26*N3x)) + detJ*r12*wij*(-E45*N2*N3 - N2x*(D16*N3x + D66*N3y) - N2y*(D12*N3x + D26*N3y))) + r22*(detJ*r11*wij*(-E45*N2*N3 + N2x*(-D12*N3y - D16*N3x) + N2y*(-D26*N3y - D66*N3x)) + detJ*r12*wij*(E55*N2*N3 + Ery*gamma2*gamma3 + N2x*(D11*N3x + D16*N3y) + N2y*(D16*N3x + D66*N3y)))
            k += 1
            KC0v[k] += A66*N2*N3*alphat*detJ*r13*r33*wij/h + r31*(detJ*r11*wij*(E44*N2*N3 + Erx*gamma2*gamma3 - N2x*(-D26*N3y - D66*N3x) - N2y*(-D22*N3y - D26*N3x)) + detJ*r12*wij*(-E45*N2*N3 - N2x*(D16*N3x + D66*N3y) - N2y*(D12*N3x + D26*N3y))) + r32*(detJ*r11*wij*(-E45*N2*N3 + N2x*(-D12*N3y - D16*N3x) + N2y*(-D26*N3y - D66*N3x)) + detJ*r12*wij*(E55*N2*N3 + Ery*gamma2*gamma3 + N2x*(D11*N3x + D16*N3y) + N2y*(D16*N3x + D66*N3y)))
            k += 1
            KC0v[k] += r11*(0.5*A66*N3*N3y*alphat*detJ*r13*wij/h + detJ*r11*wij*(N3x*(-B12*N3y - B16*N3x) + N3y*(-B26*N3y - B66*N3x)) + detJ*r12*wij*(N3x*(B11*N3x + B16*N3y) + N3y*(B16*N3x + B66*N3y))) + r12*(-0.5*A66*N3*N3x*alphat*detJ*r13*wij/h + detJ*r11*wij*(N3x*(-B26*N3y - B66*N3x) + N3y*(-B22*N3y - B26*N3x)) + detJ*r12*wij*(N3x*(B16*N3x + B66*N3y) + N3y*(B12*N3x + B26*N3y))) + r13*(detJ*r11*wij*(-E44*N3*N3y - E45*N3*N3x) + detJ*r12*wij*(E45*N3*N3y + E55*N3*N3x))
            k += 1
            KC0v[k] += r21*(0.5*A66*N3*N3y*alphat*detJ*r13*wij/h + detJ*r11*wij*(N3x*(-B12*N3y - B16*N3x) + N3y*(-B26*N3y - B66*N3x)) + detJ*r12*wij*(N3x*(B11*N3x + B16*N3y) + N3y*(B16*N3x + B66*N3y))) + r22*(-0.5*A66*N3*N3x*alphat*detJ*r13*wij/h + detJ*r11*wij*(N3x*(-B26*N3y - B66*N3x) + N3y*(-B22*N3y - B26*N3x)) + detJ*r12*wij*(N3x*(B16*N3x + B66*N3y) + N3y*(B12*N3x + B26*N3y))) + r23*(detJ*r11*wij*(-E44*N3*N3y - E45*N3*N3x) + detJ*r12*wij*(E45*N3*N3y + E55*N3*N3x))
            k += 1
            KC0v[k] += r31*(0.5*A66*N3*N3y*alphat*detJ*r13*wij/h + detJ*r11*wij*(N3x*(-B12*N3y - B16*N3x) + N3y*(-B26*N3y - B66*N3x)) + detJ*r12*wij*(N3x*(B11*N3x + B16*N3y) + N3y*(B16*N3x + B66*N3y))) + r32*(-0.5*A66*N3*N3x*alphat*detJ*r13*wij/h + detJ*r11*wij*(N3x*(-B26*N3y - B66*N3x) + N3y*(-B22*N3y - B26*N3x)) + detJ*r12*wij*(N3x*(B16*N3x + B66*N3y) + N3y*(B12*N3x + B26*N3y))) + r33*(detJ*r11*wij*(-E44*N3*N3y - E45*N3*N3x) + detJ*r12*wij*(E45*N3*N3y + E55*N3*N3x))
            k += 1
            KC0v[k] += A66*N3**2*alphat*detJ*r13**2*wij/h + r11*(detJ*r11*wij*(E44*N3**2 + Erx*gamma3**2 - N3x*(-D26*N3y - D66*N3x) - N3y*(-D22*N3y - D26*N3x)) + detJ*r12*wij*(-E45*N3**2 - N3x*(D16*N3x + D66*N3y) - N3y*(D12*N3x + D26*N3y))) + r12*(detJ*r11*wij*(-E45*N3**2 + N3x*(-D12*N3y - D16*N3x) + N3y*(-D26*N3y - D66*N3x)) + detJ*r12*wij*(E55*N3**2 + Ery*gamma3**2 + N3x*(D11*N3x + D16*N3y) + N3y*(D16*N3x + D66*N3y)))
            k += 1
            KC0v[k] += A66*N3**2*alphat*detJ*r13*r23*wij/h + r21*(detJ*r11*wij*(E44*N3**2 + Erx*gamma3**2 - N3x*(-D26*N3y - D66*N3x) - N3y*(-D22*N3y - D26*N3x)) + detJ*r12*wij*(-E45*N3**2 - N3x*(D16*N3x + D66*N3y) - N3y*(D12*N3x + D26*N3y))) + r22*(detJ*r11*wij*(-E45*N3**2 + N3x*(-D12*N3y - D16*N3x) + N3y*(-D26*N3y - D66*N3x)) + detJ*r12*wij*(E55*N3**2 + Ery*gamma3**2 + N3x*(D11*N3x + D16*N3y) + N3y*(D16*N3x + D66*N3y)))
            k += 1
            KC0v[k] += A66*N3**2*alphat*detJ*r13*r33*wij/h + r31*(detJ*r11*wij*(E44*N3**2 + Erx*gamma3**2 - N3x*(-D26*N3y - D66*N3x) - N3y*(-D22*N3y - D26*N3x)) + detJ*r12*wij*(-E45*N3**2 - N3x*(D16*N3x + D66*N3y) - N3y*(D12*N3x + D26*N3y))) + r32*(detJ*r11*wij*(-E45*N3**2 + N3x*(-D12*N3y - D16*N3x) + N3y*(-D26*N3y - D66*N3x)) + detJ*r12*wij*(E55*N3**2 + Ery*gamma3**2 + N3x*(D11*N3x + D16*N3y) + N3y*(D16*N3x + D66*N3y)))
            k += 1
            KC0v[k] += r11*(0.5*A66*N3*N4y*alphat*detJ*r13*wij/h + detJ*r11*wij*(N4x*(-B12*N3y - B16*N3x) + N4y*(-B26*N3y - B66*N3x)) + detJ*r12*wij*(N4x*(B11*N3x + B16*N3y) + N4y*(B16*N3x + B66*N3y))) + r12*(-0.5*A66*N3*N4x*alphat*detJ*r13*wij/h + detJ*r11*wij*(N4x*(-B26*N3y - B66*N3x) + N4y*(-B22*N3y - B26*N3x)) + detJ*r12*wij*(N4x*(B16*N3x + B66*N3y) + N4y*(B12*N3x + B26*N3y))) + r13*(detJ*r11*wij*(-E44*N3*N4y - E45*N3*N4x) + detJ*r12*wij*(E45*N3*N4y + E55*N3*N4x))
            k += 1
            KC0v[k] += r21*(0.5*A66*N3*N4y*alphat*detJ*r13*wij/h + detJ*r11*wij*(N4x*(-B12*N3y - B16*N3x) + N4y*(-B26*N3y - B66*N3x)) + detJ*r12*wij*(N4x*(B11*N3x + B16*N3y) + N4y*(B16*N3x + B66*N3y))) + r22*(-0.5*A66*N3*N4x*alphat*detJ*r13*wij/h + detJ*r11*wij*(N4x*(-B26*N3y - B66*N3x) + N4y*(-B22*N3y - B26*N3x)) + detJ*r12*wij*(N4x*(B16*N3x + B66*N3y) + N4y*(B12*N3x + B26*N3y))) + r23*(detJ*r11*wij*(-E44*N3*N4y - E45*N3*N4x) + detJ*r12*wij*(E45*N3*N4y + E55*N3*N4x))
            k += 1
            KC0v[k] += r31*(0.5*A66*N3*N4y*alphat*detJ*r13*wij/h + detJ*r11*wij*(N4x*(-B12*N3y - B16*N3x) + N4y*(-B26*N3y - B66*N3x)) + detJ*r12*wij*(N4x*(B11*N3x + B16*N3y) + N4y*(B16*N3x + B66*N3y))) + r32*(-0.5*A66*N3*N4x*alphat*detJ*r13*wij/h + detJ*r11*wij*(N4x*(-B26*N3y - B66*N3x) + N4y*(-B22*N3y - B26*N3x)) + detJ*r12*wij*(N4x*(B16*N3x + B66*N3y) + N4y*(B12*N3x + B26*N3y))) + r33*(detJ*r11*wij*(-E44*N3*N4y - E45*N3*N4x) + detJ*r12*wij*(E45*N3*N4y + E55*N3*N4x))
            k += 1
            KC0v[k] += A66*N3*N4*alphat*detJ*r13**2*wij/h + r11*(detJ*r11*wij*(E44*N3*N4 + Erx*gamma3*gamma4 - N4x*(-D26*N3y - D66*N3x) - N4y*(-D22*N3y - D26*N3x)) + detJ*r12*wij*(-E45*N3*N4 - N4x*(D16*N3x + D66*N3y) - N4y*(D12*N3x + D26*N3y))) + r12*(detJ*r11*wij*(-E45*N3*N4 + N4x*(-D12*N3y - D16*N3x) + N4y*(-D26*N3y - D66*N3x)) + detJ*r12*wij*(E55*N3*N4 + Ery*gamma3*gamma4 + N4x*(D11*N3x + D16*N3y) + N4y*(D16*N3x + D66*N3y)))
            k += 1
            KC0v[k] += A66*N3*N4*alphat*detJ*r13*r23*wij/h + r21*(detJ*r11*wij*(E44*N3*N4 + Erx*gamma3*gamma4 - N4x*(-D26*N3y - D66*N3x) - N4y*(-D22*N3y - D26*N3x)) + detJ*r12*wij*(-E45*N3*N4 - N4x*(D16*N3x + D66*N3y) - N4y*(D12*N3x + D26*N3y))) + r22*(detJ*r11*wij*(-E45*N3*N4 + N4x*(-D12*N3y - D16*N3x) + N4y*(-D26*N3y - D66*N3x)) + detJ*r12*wij*(E55*N3*N4 + Ery*gamma3*gamma4 + N4x*(D11*N3x + D16*N3y) + N4y*(D16*N3x + D66*N3y)))
            k += 1
            KC0v[k] += A66*N3*N4*alphat*detJ*r13*r33*wij/h + r31*(detJ*r11*wij*(E44*N3*N4 + Erx*gamma3*gamma4 - N4x*(-D26*N3y - D66*N3x) - N4y*(-D22*N3y - D26*N3x)) + detJ*r12*wij*(-E45*N3*N4 - N4x*(D16*N3x + D66*N3y) - N4y*(D12*N3x + D26*N3y))) + r32*(detJ*r11*wij*(-E45*N3*N4 + N4x*(-D12*N3y - D16*N3x) + N4y*(-D26*N3y - D66*N3x)) + detJ*r12*wij*(E55*N3*N4 + Ery*gamma3*gamma4 + N4x*(D11*N3x + D16*N3y) + N4y*(D16*N3x + D66*N3y)))
            k += 1
            KC0v[k] += r11*(0.5*A66*N1y*N3*alphat*detJ*r23*wij/h + detJ*r21*wij*(N1x*(-B12*N3y - B16*N3x) + N1y*(-B26*N3y - B66*N3x)) + detJ*r22*wij*(N1x*(B11*N3x + B16*N3y) + N1y*(B16*N3x + B66*N3y))) + r12*(-0.5*A66*N1x*N3*alphat*detJ*r23*wij/h + detJ*r21*wij*(N1x*(-B26*N3y - B66*N3x) + N1y*(-B22*N3y - B26*N3x)) + detJ*r22*wij*(N1x*(B16*N3x + B66*N3y) + N1y*(B12*N3x + B26*N3y))) + r13*(detJ*r21*wij*(-E44*N1y*N3 - E45*N1x*N3) + detJ*r22*wij*(E45*N1y*N3 + E55*N1x*N3))
            k += 1
            KC0v[k] += r21*(0.5*A66*N1y*N3*alphat*detJ*r23*wij/h + detJ*r21*wij*(N1x*(-B12*N3y - B16*N3x) + N1y*(-B26*N3y - B66*N3x)) + detJ*r22*wij*(N1x*(B11*N3x + B16*N3y) + N1y*(B16*N3x + B66*N3y))) + r22*(-0.5*A66*N1x*N3*alphat*detJ*r23*wij/h + detJ*r21*wij*(N1x*(-B26*N3y - B66*N3x) + N1y*(-B22*N3y - B26*N3x)) + detJ*r22*wij*(N1x*(B16*N3x + B66*N3y) + N1y*(B12*N3x + B26*N3y))) + r23*(detJ*r21*wij*(-E44*N1y*N3 - E45*N1x*N3) + detJ*r22*wij*(E45*N1y*N3 + E55*N1x*N3))
            k += 1
            KC0v[k] += r31*(0.5*A66*N1y*N3*alphat*detJ*r23*wij/h + detJ*r21*wij*(N1x*(-B12*N3y - B16*N3x) + N1y*(-B26*N3y - B66*N3x)) + detJ*r22*wij*(N1x*(B11*N3x + B16*N3y) + N1y*(B16*N3x + B66*N3y))) + r32*(-0.5*A66*N1x*N3*alphat*detJ*r23*wij/h + detJ*r21*wij*(N1x*(-B26*N3y - B66*N3x) + N1y*(-B22*N3y - B26*N3x)) + detJ*r22*wij*(N1x*(B16*N3x + B66*N3y) + N1y*(B12*N3x + B26*N3y))) + r33*(detJ*r21*wij*(-E44*N1y*N3 - E45*N1x*N3) + detJ*r22*wij*(E45*N1y*N3 + E55*N1x*N3))
            k += 1
            KC0v[k] += A66*N1*N3*alphat*detJ*r13*r23*wij/h + r11*(detJ*r21*wij*(E44*N1*N3 + Erx*gamma1*gamma3 - N1x*(-D26*N3y - D66*N3x) - N1y*(-D22*N3y - D26*N3x)) + detJ*r22*wij*(-E45*N1*N3 - N1x*(D16*N3x + D66*N3y) - N1y*(D12*N3x + D26*N3y))) + r12*(detJ*r21*wij*(-E45*N1*N3 + N1x*(-D12*N3y - D16*N3x) + N1y*(-D26*N3y - D66*N3x)) + detJ*r22*wij*(E55*N1*N3 + Ery*gamma1*gamma3 + N1x*(D11*N3x + D16*N3y) + N1y*(D16*N3x + D66*N3y)))
            k += 1
            KC0v[k] += A66*N1*N3*alphat*detJ*r23**2*wij/h + r21*(detJ*r21*wij*(E44*N1*N3 + Erx*gamma1*gamma3 - N1x*(-D26*N3y - D66*N3x) - N1y*(-D22*N3y - D26*N3x)) + detJ*r22*wij*(-E45*N1*N3 - N1x*(D16*N3x + D66*N3y) - N1y*(D12*N3x + D26*N3y))) + r22*(detJ*r21*wij*(-E45*N1*N3 + N1x*(-D12*N3y - D16*N3x) + N1y*(-D26*N3y - D66*N3x)) + detJ*r22*wij*(E55*N1*N3 + Ery*gamma1*gamma3 + N1x*(D11*N3x + D16*N3y) + N1y*(D16*N3x + D66*N3y)))
            k += 1
            KC0v[k] += A66*N1*N3*alphat*detJ*r23*r33*wij/h + r31*(detJ*r21*wij*(E44*N1*N3 + Erx*gamma1*gamma3 - N1x*(-D26*N3y - D66*N3x) - N1y*(-D22*N3y - D26*N3x)) + detJ*r22*wij*(-E45*N1*N3 - N1x*(D16*N3x + D66*N3y) - N1y*(D12*N3x + D26*N3y))) + r32*(detJ*r21*wij*(-E45*N1*N3 + N1x*(-D12*N3y - D16*N3x) + N1y*(-D26*N3y - D66*N3x)) + detJ*r22*wij*(E55*N1*N3 + Ery*gamma1*gamma3 + N1x*(D11*N3x + D16*N3y) + N1y*(D16*N3x + D66*N3y)))
            k += 1
            KC0v[k] += r11*(0.5*A66*N2y*N3*alphat*detJ*r23*wij/h + detJ*r21*wij*(N2x*(-B12*N3y - B16*N3x) + N2y*(-B26*N3y - B66*N3x)) + detJ*r22*wij*(N2x*(B11*N3x + B16*N3y) + N2y*(B16*N3x + B66*N3y))) + r12*(-0.5*A66*N2x*N3*alphat*detJ*r23*wij/h + detJ*r21*wij*(N2x*(-B26*N3y - B66*N3x) + N2y*(-B22*N3y - B26*N3x)) + detJ*r22*wij*(N2x*(B16*N3x + B66*N3y) + N2y*(B12*N3x + B26*N3y))) + r13*(detJ*r21*wij*(-E44*N2y*N3 - E45*N2x*N3) + detJ*r22*wij*(E45*N2y*N3 + E55*N2x*N3))
            k += 1
            KC0v[k] += r21*(0.5*A66*N2y*N3*alphat*detJ*r23*wij/h + detJ*r21*wij*(N2x*(-B12*N3y - B16*N3x) + N2y*(-B26*N3y - B66*N3x)) + detJ*r22*wij*(N2x*(B11*N3x + B16*N3y) + N2y*(B16*N3x + B66*N3y))) + r22*(-0.5*A66*N2x*N3*alphat*detJ*r23*wij/h + detJ*r21*wij*(N2x*(-B26*N3y - B66*N3x) + N2y*(-B22*N3y - B26*N3x)) + detJ*r22*wij*(N2x*(B16*N3x + B66*N3y) + N2y*(B12*N3x + B26*N3y))) + r23*(detJ*r21*wij*(-E44*N2y*N3 - E45*N2x*N3) + detJ*r22*wij*(E45*N2y*N3 + E55*N2x*N3))
            k += 1
            KC0v[k] += r31*(0.5*A66*N2y*N3*alphat*detJ*r23*wij/h + detJ*r21*wij*(N2x*(-B12*N3y - B16*N3x) + N2y*(-B26*N3y - B66*N3x)) + detJ*r22*wij*(N2x*(B11*N3x + B16*N3y) + N2y*(B16*N3x + B66*N3y))) + r32*(-0.5*A66*N2x*N3*alphat*detJ*r23*wij/h + detJ*r21*wij*(N2x*(-B26*N3y - B66*N3x) + N2y*(-B22*N3y - B26*N3x)) + detJ*r22*wij*(N2x*(B16*N3x + B66*N3y) + N2y*(B12*N3x + B26*N3y))) + r33*(detJ*r21*wij*(-E44*N2y*N3 - E45*N2x*N3) + detJ*r22*wij*(E45*N2y*N3 + E55*N2x*N3))
            k += 1
            KC0v[k] += A66*N2*N3*alphat*detJ*r13*r23*wij/h + r11*(detJ*r21*wij*(E44*N2*N3 + Erx*gamma2*gamma3 - N2x*(-D26*N3y - D66*N3x) - N2y*(-D22*N3y - D26*N3x)) + detJ*r22*wij*(-E45*N2*N3 - N2x*(D16*N3x + D66*N3y) - N2y*(D12*N3x + D26*N3y))) + r12*(detJ*r21*wij*(-E45*N2*N3 + N2x*(-D12*N3y - D16*N3x) + N2y*(-D26*N3y - D66*N3x)) + detJ*r22*wij*(E55*N2*N3 + Ery*gamma2*gamma3 + N2x*(D11*N3x + D16*N3y) + N2y*(D16*N3x + D66*N3y)))
            k += 1
            KC0v[k] += A66*N2*N3*alphat*detJ*r23**2*wij/h + r21*(detJ*r21*wij*(E44*N2*N3 + Erx*gamma2*gamma3 - N2x*(-D26*N3y - D66*N3x) - N2y*(-D22*N3y - D26*N3x)) + detJ*r22*wij*(-E45*N2*N3 - N2x*(D16*N3x + D66*N3y) - N2y*(D12*N3x + D26*N3y))) + r22*(detJ*r21*wij*(-E45*N2*N3 + N2x*(-D12*N3y - D16*N3x) + N2y*(-D26*N3y - D66*N3x)) + detJ*r22*wij*(E55*N2*N3 + Ery*gamma2*gamma3 + N2x*(D11*N3x + D16*N3y) + N2y*(D16*N3x + D66*N3y)))
            k += 1
            KC0v[k] += A66*N2*N3*alphat*detJ*r23*r33*wij/h + r31*(detJ*r21*wij*(E44*N2*N3 + Erx*gamma2*gamma3 - N2x*(-D26*N3y - D66*N3x) - N2y*(-D22*N3y - D26*N3x)) + detJ*r22*wij*(-E45*N2*N3 - N2x*(D16*N3x + D66*N3y) - N2y*(D12*N3x + D26*N3y))) + r32*(detJ*r21*wij*(-E45*N2*N3 + N2x*(-D12*N3y - D16*N3x) + N2y*(-D26*N3y - D66*N3x)) + detJ*r22*wij*(E55*N2*N3 + Ery*gamma2*gamma3 + N2x*(D11*N3x + D16*N3y) + N2y*(D16*N3x + D66*N3y)))
            k += 1
            KC0v[k] += r11*(0.5*A66*N3*N3y*alphat*detJ*r23*wij/h + detJ*r21*wij*(N3x*(-B12*N3y - B16*N3x) + N3y*(-B26*N3y - B66*N3x)) + detJ*r22*wij*(N3x*(B11*N3x + B16*N3y) + N3y*(B16*N3x + B66*N3y))) + r12*(-0.5*A66*N3*N3x*alphat*detJ*r23*wij/h + detJ*r21*wij*(N3x*(-B26*N3y - B66*N3x) + N3y*(-B22*N3y - B26*N3x)) + detJ*r22*wij*(N3x*(B16*N3x + B66*N3y) + N3y*(B12*N3x + B26*N3y))) + r13*(detJ*r21*wij*(-E44*N3*N3y - E45*N3*N3x) + detJ*r22*wij*(E45*N3*N3y + E55*N3*N3x))
            k += 1
            KC0v[k] += r21*(0.5*A66*N3*N3y*alphat*detJ*r23*wij/h + detJ*r21*wij*(N3x*(-B12*N3y - B16*N3x) + N3y*(-B26*N3y - B66*N3x)) + detJ*r22*wij*(N3x*(B11*N3x + B16*N3y) + N3y*(B16*N3x + B66*N3y))) + r22*(-0.5*A66*N3*N3x*alphat*detJ*r23*wij/h + detJ*r21*wij*(N3x*(-B26*N3y - B66*N3x) + N3y*(-B22*N3y - B26*N3x)) + detJ*r22*wij*(N3x*(B16*N3x + B66*N3y) + N3y*(B12*N3x + B26*N3y))) + r23*(detJ*r21*wij*(-E44*N3*N3y - E45*N3*N3x) + detJ*r22*wij*(E45*N3*N3y + E55*N3*N3x))
            k += 1
            KC0v[k] += r31*(0.5*A66*N3*N3y*alphat*detJ*r23*wij/h + detJ*r21*wij*(N3x*(-B12*N3y - B16*N3x) + N3y*(-B26*N3y - B66*N3x)) + detJ*r22*wij*(N3x*(B11*N3x + B16*N3y) + N3y*(B16*N3x + B66*N3y))) + r32*(-0.5*A66*N3*N3x*alphat*detJ*r23*wij/h + detJ*r21*wij*(N3x*(-B26*N3y - B66*N3x) + N3y*(-B22*N3y - B26*N3x)) + detJ*r22*wij*(N3x*(B16*N3x + B66*N3y) + N3y*(B12*N3x + B26*N3y))) + r33*(detJ*r21*wij*(-E44*N3*N3y - E45*N3*N3x) + detJ*r22*wij*(E45*N3*N3y + E55*N3*N3x))
            k += 1
            KC0v[k] += A66*N3**2*alphat*detJ*r13*r23*wij/h + r11*(detJ*r21*wij*(E44*N3**2 + Erx*gamma3**2 - N3x*(-D26*N3y - D66*N3x) - N3y*(-D22*N3y - D26*N3x)) + detJ*r22*wij*(-E45*N3**2 - N3x*(D16*N3x + D66*N3y) - N3y*(D12*N3x + D26*N3y))) + r12*(detJ*r21*wij*(-E45*N3**2 + N3x*(-D12*N3y - D16*N3x) + N3y*(-D26*N3y - D66*N3x)) + detJ*r22*wij*(E55*N3**2 + Ery*gamma3**2 + N3x*(D11*N3x + D16*N3y) + N3y*(D16*N3x + D66*N3y)))
            k += 1
            KC0v[k] += A66*N3**2*alphat*detJ*r23**2*wij/h + r21*(detJ*r21*wij*(E44*N3**2 + Erx*gamma3**2 - N3x*(-D26*N3y - D66*N3x) - N3y*(-D22*N3y - D26*N3x)) + detJ*r22*wij*(-E45*N3**2 - N3x*(D16*N3x + D66*N3y) - N3y*(D12*N3x + D26*N3y))) + r22*(detJ*r21*wij*(-E45*N3**2 + N3x*(-D12*N3y - D16*N3x) + N3y*(-D26*N3y - D66*N3x)) + detJ*r22*wij*(E55*N3**2 + Ery*gamma3**2 + N3x*(D11*N3x + D16*N3y) + N3y*(D16*N3x + D66*N3y)))
            k += 1
            KC0v[k] += A66*N3**2*alphat*detJ*r23*r33*wij/h + r31*(detJ*r21*wij*(E44*N3**2 + Erx*gamma3**2 - N3x*(-D26*N3y - D66*N3x) - N3y*(-D22*N3y - D26*N3x)) + detJ*r22*wij*(-E45*N3**2 - N3x*(D16*N3x + D66*N3y) - N3y*(D12*N3x + D26*N3y))) + r32*(detJ*r21*wij*(-E45*N3**2 + N3x*(-D12*N3y - D16*N3x) + N3y*(-D26*N3y - D66*N3x)) + detJ*r22*wij*(E55*N3**2 + Ery*gamma3**2 + N3x*(D11*N3x + D16*N3y) + N3y*(D16*N3x + D66*N3y)))
            k += 1
            KC0v[k] += r11*(0.5*A66*N3*N4y*alphat*detJ*r23*wij/h + detJ*r21*wij*(N4x*(-B12*N3y - B16*N3x) + N4y*(-B26*N3y - B66*N3x)) + detJ*r22*wij*(N4x*(B11*N3x + B16*N3y) + N4y*(B16*N3x + B66*N3y))) + r12*(-0.5*A66*N3*N4x*alphat*detJ*r23*wij/h + detJ*r21*wij*(N4x*(-B26*N3y - B66*N3x) + N4y*(-B22*N3y - B26*N3x)) + detJ*r22*wij*(N4x*(B16*N3x + B66*N3y) + N4y*(B12*N3x + B26*N3y))) + r13*(detJ*r21*wij*(-E44*N3*N4y - E45*N3*N4x) + detJ*r22*wij*(E45*N3*N4y + E55*N3*N4x))
            k += 1
            KC0v[k] += r21*(0.5*A66*N3*N4y*alphat*detJ*r23*wij/h + detJ*r21*wij*(N4x*(-B12*N3y - B16*N3x) + N4y*(-B26*N3y - B66*N3x)) + detJ*r22*wij*(N4x*(B11*N3x + B16*N3y) + N4y*(B16*N3x + B66*N3y))) + r22*(-0.5*A66*N3*N4x*alphat*detJ*r23*wij/h + detJ*r21*wij*(N4x*(-B26*N3y - B66*N3x) + N4y*(-B22*N3y - B26*N3x)) + detJ*r22*wij*(N4x*(B16*N3x + B66*N3y) + N4y*(B12*N3x + B26*N3y))) + r23*(detJ*r21*wij*(-E44*N3*N4y - E45*N3*N4x) + detJ*r22*wij*(E45*N3*N4y + E55*N3*N4x))
            k += 1
            KC0v[k] += r31*(0.5*A66*N3*N4y*alphat*detJ*r23*wij/h + detJ*r21*wij*(N4x*(-B12*N3y - B16*N3x) + N4y*(-B26*N3y - B66*N3x)) + detJ*r22*wij*(N4x*(B11*N3x + B16*N3y) + N4y*(B16*N3x + B66*N3y))) + r32*(-0.5*A66*N3*N4x*alphat*detJ*r23*wij/h + detJ*r21*wij*(N4x*(-B26*N3y - B66*N3x) + N4y*(-B22*N3y - B26*N3x)) + detJ*r22*wij*(N4x*(B16*N3x + B66*N3y) + N4y*(B12*N3x + B26*N3y))) + r33*(detJ*r21*wij*(-E44*N3*N4y - E45*N3*N4x) + detJ*r22*wij*(E45*N3*N4y + E55*N3*N4x))
            k += 1
            KC0v[k] += A66*N3*N4*alphat*detJ*r13*r23*wij/h + r11*(detJ*r21*wij*(E44*N3*N4 + Erx*gamma3*gamma4 - N4x*(-D26*N3y - D66*N3x) - N4y*(-D22*N3y - D26*N3x)) + detJ*r22*wij*(-E45*N3*N4 - N4x*(D16*N3x + D66*N3y) - N4y*(D12*N3x + D26*N3y))) + r12*(detJ*r21*wij*(-E45*N3*N4 + N4x*(-D12*N3y - D16*N3x) + N4y*(-D26*N3y - D66*N3x)) + detJ*r22*wij*(E55*N3*N4 + Ery*gamma3*gamma4 + N4x*(D11*N3x + D16*N3y) + N4y*(D16*N3x + D66*N3y)))
            k += 1
            KC0v[k] += A66*N3*N4*alphat*detJ*r23**2*wij/h + r21*(detJ*r21*wij*(E44*N3*N4 + Erx*gamma3*gamma4 - N4x*(-D26*N3y - D66*N3x) - N4y*(-D22*N3y - D26*N3x)) + detJ*r22*wij*(-E45*N3*N4 - N4x*(D16*N3x + D66*N3y) - N4y*(D12*N3x + D26*N3y))) + r22*(detJ*r21*wij*(-E45*N3*N4 + N4x*(-D12*N3y - D16*N3x) + N4y*(-D26*N3y - D66*N3x)) + detJ*r22*wij*(E55*N3*N4 + Ery*gamma3*gamma4 + N4x*(D11*N3x + D16*N3y) + N4y*(D16*N3x + D66*N3y)))
            k += 1
            KC0v[k] += A66*N3*N4*alphat*detJ*r23*r33*wij/h + r31*(detJ*r21*wij*(E44*N3*N4 + Erx*gamma3*gamma4 - N4x*(-D26*N3y - D66*N3x) - N4y*(-D22*N3y - D26*N3x)) + detJ*r22*wij*(-E45*N3*N4 - N4x*(D16*N3x + D66*N3y) - N4y*(D12*N3x + D26*N3y))) + r32*(detJ*r21*wij*(-E45*N3*N4 + N4x*(-D12*N3y - D16*N3x) + N4y*(-D26*N3y - D66*N3x)) + detJ*r22*wij*(E55*N3*N4 + Ery*gamma3*gamma4 + N4x*(D11*N3x + D16*N3y) + N4y*(D16*N3x + D66*N3y)))
            k += 1
            KC0v[k] += r11*(0.5*A66*N1y*N3*alphat*detJ*r33*wij/h + detJ*r31*wij*(N1x*(-B12*N3y - B16*N3x) + N1y*(-B26*N3y - B66*N3x)) + detJ*r32*wij*(N1x*(B11*N3x + B16*N3y) + N1y*(B16*N3x + B66*N3y))) + r12*(-0.5*A66*N1x*N3*alphat*detJ*r33*wij/h + detJ*r31*wij*(N1x*(-B26*N3y - B66*N3x) + N1y*(-B22*N3y - B26*N3x)) + detJ*r32*wij*(N1x*(B16*N3x + B66*N3y) + N1y*(B12*N3x + B26*N3y))) + r13*(detJ*r31*wij*(-E44*N1y*N3 - E45*N1x*N3) + detJ*r32*wij*(E45*N1y*N3 + E55*N1x*N3))
            k += 1
            KC0v[k] += r21*(0.5*A66*N1y*N3*alphat*detJ*r33*wij/h + detJ*r31*wij*(N1x*(-B12*N3y - B16*N3x) + N1y*(-B26*N3y - B66*N3x)) + detJ*r32*wij*(N1x*(B11*N3x + B16*N3y) + N1y*(B16*N3x + B66*N3y))) + r22*(-0.5*A66*N1x*N3*alphat*detJ*r33*wij/h + detJ*r31*wij*(N1x*(-B26*N3y - B66*N3x) + N1y*(-B22*N3y - B26*N3x)) + detJ*r32*wij*(N1x*(B16*N3x + B66*N3y) + N1y*(B12*N3x + B26*N3y))) + r23*(detJ*r31*wij*(-E44*N1y*N3 - E45*N1x*N3) + detJ*r32*wij*(E45*N1y*N3 + E55*N1x*N3))
            k += 1
            KC0v[k] += r31*(0.5*A66*N1y*N3*alphat*detJ*r33*wij/h + detJ*r31*wij*(N1x*(-B12*N3y - B16*N3x) + N1y*(-B26*N3y - B66*N3x)) + detJ*r32*wij*(N1x*(B11*N3x + B16*N3y) + N1y*(B16*N3x + B66*N3y))) + r32*(-0.5*A66*N1x*N3*alphat*detJ*r33*wij/h + detJ*r31*wij*(N1x*(-B26*N3y - B66*N3x) + N1y*(-B22*N3y - B26*N3x)) + detJ*r32*wij*(N1x*(B16*N3x + B66*N3y) + N1y*(B12*N3x + B26*N3y))) + r33*(detJ*r31*wij*(-E44*N1y*N3 - E45*N1x*N3) + detJ*r32*wij*(E45*N1y*N3 + E55*N1x*N3))
            k += 1
            KC0v[k] += A66*N1*N3*alphat*detJ*r13*r33*wij/h + r11*(detJ*r31*wij*(E44*N1*N3 + Erx*gamma1*gamma3 - N1x*(-D26*N3y - D66*N3x) - N1y*(-D22*N3y - D26*N3x)) + detJ*r32*wij*(-E45*N1*N3 - N1x*(D16*N3x + D66*N3y) - N1y*(D12*N3x + D26*N3y))) + r12*(detJ*r31*wij*(-E45*N1*N3 + N1x*(-D12*N3y - D16*N3x) + N1y*(-D26*N3y - D66*N3x)) + detJ*r32*wij*(E55*N1*N3 + Ery*gamma1*gamma3 + N1x*(D11*N3x + D16*N3y) + N1y*(D16*N3x + D66*N3y)))
            k += 1
            KC0v[k] += A66*N1*N3*alphat*detJ*r23*r33*wij/h + r21*(detJ*r31*wij*(E44*N1*N3 + Erx*gamma1*gamma3 - N1x*(-D26*N3y - D66*N3x) - N1y*(-D22*N3y - D26*N3x)) + detJ*r32*wij*(-E45*N1*N3 - N1x*(D16*N3x + D66*N3y) - N1y*(D12*N3x + D26*N3y))) + r22*(detJ*r31*wij*(-E45*N1*N3 + N1x*(-D12*N3y - D16*N3x) + N1y*(-D26*N3y - D66*N3x)) + detJ*r32*wij*(E55*N1*N3 + Ery*gamma1*gamma3 + N1x*(D11*N3x + D16*N3y) + N1y*(D16*N3x + D66*N3y)))
            k += 1
            KC0v[k] += A66*N1*N3*alphat*detJ*r33**2*wij/h + r31*(detJ*r31*wij*(E44*N1*N3 + Erx*gamma1*gamma3 - N1x*(-D26*N3y - D66*N3x) - N1y*(-D22*N3y - D26*N3x)) + detJ*r32*wij*(-E45*N1*N3 - N1x*(D16*N3x + D66*N3y) - N1y*(D12*N3x + D26*N3y))) + r32*(detJ*r31*wij*(-E45*N1*N3 + N1x*(-D12*N3y - D16*N3x) + N1y*(-D26*N3y - D66*N3x)) + detJ*r32*wij*(E55*N1*N3 + Ery*gamma1*gamma3 + N1x*(D11*N3x + D16*N3y) + N1y*(D16*N3x + D66*N3y)))
            k += 1
            KC0v[k] += r11*(0.5*A66*N2y*N3*alphat*detJ*r33*wij/h + detJ*r31*wij*(N2x*(-B12*N3y - B16*N3x) + N2y*(-B26*N3y - B66*N3x)) + detJ*r32*wij*(N2x*(B11*N3x + B16*N3y) + N2y*(B16*N3x + B66*N3y))) + r12*(-0.5*A66*N2x*N3*alphat*detJ*r33*wij/h + detJ*r31*wij*(N2x*(-B26*N3y - B66*N3x) + N2y*(-B22*N3y - B26*N3x)) + detJ*r32*wij*(N2x*(B16*N3x + B66*N3y) + N2y*(B12*N3x + B26*N3y))) + r13*(detJ*r31*wij*(-E44*N2y*N3 - E45*N2x*N3) + detJ*r32*wij*(E45*N2y*N3 + E55*N2x*N3))
            k += 1
            KC0v[k] += r21*(0.5*A66*N2y*N3*alphat*detJ*r33*wij/h + detJ*r31*wij*(N2x*(-B12*N3y - B16*N3x) + N2y*(-B26*N3y - B66*N3x)) + detJ*r32*wij*(N2x*(B11*N3x + B16*N3y) + N2y*(B16*N3x + B66*N3y))) + r22*(-0.5*A66*N2x*N3*alphat*detJ*r33*wij/h + detJ*r31*wij*(N2x*(-B26*N3y - B66*N3x) + N2y*(-B22*N3y - B26*N3x)) + detJ*r32*wij*(N2x*(B16*N3x + B66*N3y) + N2y*(B12*N3x + B26*N3y))) + r23*(detJ*r31*wij*(-E44*N2y*N3 - E45*N2x*N3) + detJ*r32*wij*(E45*N2y*N3 + E55*N2x*N3))
            k += 1
            KC0v[k] += r31*(0.5*A66*N2y*N3*alphat*detJ*r33*wij/h + detJ*r31*wij*(N2x*(-B12*N3y - B16*N3x) + N2y*(-B26*N3y - B66*N3x)) + detJ*r32*wij*(N2x*(B11*N3x + B16*N3y) + N2y*(B16*N3x + B66*N3y))) + r32*(-0.5*A66*N2x*N3*alphat*detJ*r33*wij/h + detJ*r31*wij*(N2x*(-B26*N3y - B66*N3x) + N2y*(-B22*N3y - B26*N3x)) + detJ*r32*wij*(N2x*(B16*N3x + B66*N3y) + N2y*(B12*N3x + B26*N3y))) + r33*(detJ*r31*wij*(-E44*N2y*N3 - E45*N2x*N3) + detJ*r32*wij*(E45*N2y*N3 + E55*N2x*N3))
            k += 1
            KC0v[k] += A66*N2*N3*alphat*detJ*r13*r33*wij/h + r11*(detJ*r31*wij*(E44*N2*N3 + Erx*gamma2*gamma3 - N2x*(-D26*N3y - D66*N3x) - N2y*(-D22*N3y - D26*N3x)) + detJ*r32*wij*(-E45*N2*N3 - N2x*(D16*N3x + D66*N3y) - N2y*(D12*N3x + D26*N3y))) + r12*(detJ*r31*wij*(-E45*N2*N3 + N2x*(-D12*N3y - D16*N3x) + N2y*(-D26*N3y - D66*N3x)) + detJ*r32*wij*(E55*N2*N3 + Ery*gamma2*gamma3 + N2x*(D11*N3x + D16*N3y) + N2y*(D16*N3x + D66*N3y)))
            k += 1
            KC0v[k] += A66*N2*N3*alphat*detJ*r23*r33*wij/h + r21*(detJ*r31*wij*(E44*N2*N3 + Erx*gamma2*gamma3 - N2x*(-D26*N3y - D66*N3x) - N2y*(-D22*N3y - D26*N3x)) + detJ*r32*wij*(-E45*N2*N3 - N2x*(D16*N3x + D66*N3y) - N2y*(D12*N3x + D26*N3y))) + r22*(detJ*r31*wij*(-E45*N2*N3 + N2x*(-D12*N3y - D16*N3x) + N2y*(-D26*N3y - D66*N3x)) + detJ*r32*wij*(E55*N2*N3 + Ery*gamma2*gamma3 + N2x*(D11*N3x + D16*N3y) + N2y*(D16*N3x + D66*N3y)))
            k += 1
            KC0v[k] += A66*N2*N3*alphat*detJ*r33**2*wij/h + r31*(detJ*r31*wij*(E44*N2*N3 + Erx*gamma2*gamma3 - N2x*(-D26*N3y - D66*N3x) - N2y*(-D22*N3y - D26*N3x)) + detJ*r32*wij*(-E45*N2*N3 - N2x*(D16*N3x + D66*N3y) - N2y*(D12*N3x + D26*N3y))) + r32*(detJ*r31*wij*(-E45*N2*N3 + N2x*(-D12*N3y - D16*N3x) + N2y*(-D26*N3y - D66*N3x)) + detJ*r32*wij*(E55*N2*N3 + Ery*gamma2*gamma3 + N2x*(D11*N3x + D16*N3y) + N2y*(D16*N3x + D66*N3y)))
            k += 1
            KC0v[k] += r11*(0.5*A66*N3*N3y*alphat*detJ*r33*wij/h + detJ*r31*wij*(N3x*(-B12*N3y - B16*N3x) + N3y*(-B26*N3y - B66*N3x)) + detJ*r32*wij*(N3x*(B11*N3x + B16*N3y) + N3y*(B16*N3x + B66*N3y))) + r12*(-0.5*A66*N3*N3x*alphat*detJ*r33*wij/h + detJ*r31*wij*(N3x*(-B26*N3y - B66*N3x) + N3y*(-B22*N3y - B26*N3x)) + detJ*r32*wij*(N3x*(B16*N3x + B66*N3y) + N3y*(B12*N3x + B26*N3y))) + r13*(detJ*r31*wij*(-E44*N3*N3y - E45*N3*N3x) + detJ*r32*wij*(E45*N3*N3y + E55*N3*N3x))
            k += 1
            KC0v[k] += r21*(0.5*A66*N3*N3y*alphat*detJ*r33*wij/h + detJ*r31*wij*(N3x*(-B12*N3y - B16*N3x) + N3y*(-B26*N3y - B66*N3x)) + detJ*r32*wij*(N3x*(B11*N3x + B16*N3y) + N3y*(B16*N3x + B66*N3y))) + r22*(-0.5*A66*N3*N3x*alphat*detJ*r33*wij/h + detJ*r31*wij*(N3x*(-B26*N3y - B66*N3x) + N3y*(-B22*N3y - B26*N3x)) + detJ*r32*wij*(N3x*(B16*N3x + B66*N3y) + N3y*(B12*N3x + B26*N3y))) + r23*(detJ*r31*wij*(-E44*N3*N3y - E45*N3*N3x) + detJ*r32*wij*(E45*N3*N3y + E55*N3*N3x))
            k += 1
            KC0v[k] += r31*(0.5*A66*N3*N3y*alphat*detJ*r33*wij/h + detJ*r31*wij*(N3x*(-B12*N3y - B16*N3x) + N3y*(-B26*N3y - B66*N3x)) + detJ*r32*wij*(N3x*(B11*N3x + B16*N3y) + N3y*(B16*N3x + B66*N3y))) + r32*(-0.5*A66*N3*N3x*alphat*detJ*r33*wij/h + detJ*r31*wij*(N3x*(-B26*N3y - B66*N3x) + N3y*(-B22*N3y - B26*N3x)) + detJ*r32*wij*(N3x*(B16*N3x + B66*N3y) + N3y*(B12*N3x + B26*N3y))) + r33*(detJ*r31*wij*(-E44*N3*N3y - E45*N3*N3x) + detJ*r32*wij*(E45*N3*N3y + E55*N3*N3x))
            k += 1
            KC0v[k] += A66*N3**2*alphat*detJ*r13*r33*wij/h + r11*(detJ*r31*wij*(E44*N3**2 + Erx*gamma3**2 - N3x*(-D26*N3y - D66*N3x) - N3y*(-D22*N3y - D26*N3x)) + detJ*r32*wij*(-E45*N3**2 - N3x*(D16*N3x + D66*N3y) - N3y*(D12*N3x + D26*N3y))) + r12*(detJ*r31*wij*(-E45*N3**2 + N3x*(-D12*N3y - D16*N3x) + N3y*(-D26*N3y - D66*N3x)) + detJ*r32*wij*(E55*N3**2 + Ery*gamma3**2 + N3x*(D11*N3x + D16*N3y) + N3y*(D16*N3x + D66*N3y)))
            k += 1
            KC0v[k] += A66*N3**2*alphat*detJ*r23*r33*wij/h + r21*(detJ*r31*wij*(E44*N3**2 + Erx*gamma3**2 - N3x*(-D26*N3y - D66*N3x) - N3y*(-D22*N3y - D26*N3x)) + detJ*r32*wij*(-E45*N3**2 - N3x*(D16*N3x + D66*N3y) - N3y*(D12*N3x + D26*N3y))) + r22*(detJ*r31*wij*(-E45*N3**2 + N3x*(-D12*N3y - D16*N3x) + N3y*(-D26*N3y - D66*N3x)) + detJ*r32*wij*(E55*N3**2 + Ery*gamma3**2 + N3x*(D11*N3x + D16*N3y) + N3y*(D16*N3x + D66*N3y)))
            k += 1
            KC0v[k] += A66*N3**2*alphat*detJ*r33**2*wij/h + r31*(detJ*r31*wij*(E44*N3**2 + Erx*gamma3**2 - N3x*(-D26*N3y - D66*N3x) - N3y*(-D22*N3y - D26*N3x)) + detJ*r32*wij*(-E45*N3**2 - N3x*(D16*N3x + D66*N3y) - N3y*(D12*N3x + D26*N3y))) + r32*(detJ*r31*wij*(-E45*N3**2 + N3x*(-D12*N3y - D16*N3x) + N3y*(-D26*N3y - D66*N3x)) + detJ*r32*wij*(E55*N3**2 + Ery*gamma3**2 + N3x*(D11*N3x + D16*N3y) + N3y*(D16*N3x + D66*N3y)))
            k += 1
            KC0v[k] += r11*(0.5*A66*N3*N4y*alphat*detJ*r33*wij/h + detJ*r31*wij*(N4x*(-B12*N3y - B16*N3x) + N4y*(-B26*N3y - B66*N3x)) + detJ*r32*wij*(N4x*(B11*N3x + B16*N3y) + N4y*(B16*N3x + B66*N3y))) + r12*(-0.5*A66*N3*N4x*alphat*detJ*r33*wij/h + detJ*r31*wij*(N4x*(-B26*N3y - B66*N3x) + N4y*(-B22*N3y - B26*N3x)) + detJ*r32*wij*(N4x*(B16*N3x + B66*N3y) + N4y*(B12*N3x + B26*N3y))) + r13*(detJ*r31*wij*(-E44*N3*N4y - E45*N3*N4x) + detJ*r32*wij*(E45*N3*N4y + E55*N3*N4x))
            k += 1
            KC0v[k] += r21*(0.5*A66*N3*N4y*alphat*detJ*r33*wij/h + detJ*r31*wij*(N4x*(-B12*N3y - B16*N3x) + N4y*(-B26*N3y - B66*N3x)) + detJ*r32*wij*(N4x*(B11*N3x + B16*N3y) + N4y*(B16*N3x + B66*N3y))) + r22*(-0.5*A66*N3*N4x*alphat*detJ*r33*wij/h + detJ*r31*wij*(N4x*(-B26*N3y - B66*N3x) + N4y*(-B22*N3y - B26*N3x)) + detJ*r32*wij*(N4x*(B16*N3x + B66*N3y) + N4y*(B12*N3x + B26*N3y))) + r23*(detJ*r31*wij*(-E44*N3*N4y - E45*N3*N4x) + detJ*r32*wij*(E45*N3*N4y + E55*N3*N4x))
            k += 1
            KC0v[k] += r31*(0.5*A66*N3*N4y*alphat*detJ*r33*wij/h + detJ*r31*wij*(N4x*(-B12*N3y - B16*N3x) + N4y*(-B26*N3y - B66*N3x)) + detJ*r32*wij*(N4x*(B11*N3x + B16*N3y) + N4y*(B16*N3x + B66*N3y))) + r32*(-0.5*A66*N3*N4x*alphat*detJ*r33*wij/h + detJ*r31*wij*(N4x*(-B26*N3y - B66*N3x) + N4y*(-B22*N3y - B26*N3x)) + detJ*r32*wij*(N4x*(B16*N3x + B66*N3y) + N4y*(B12*N3x + B26*N3y))) + r33*(detJ*r31*wij*(-E44*N3*N4y - E45*N3*N4x) + detJ*r32*wij*(E45*N3*N4y + E55*N3*N4x))
            k += 1
            KC0v[k] += A66*N3*N4*alphat*detJ*r13*r33*wij/h + r11*(detJ*r31*wij*(E44*N3*N4 + Erx*gamma3*gamma4 - N4x*(-D26*N3y - D66*N3x) - N4y*(-D22*N3y - D26*N3x)) + detJ*r32*wij*(-E45*N3*N4 - N4x*(D16*N3x + D66*N3y) - N4y*(D12*N3x + D26*N3y))) + r12*(detJ*r31*wij*(-E45*N3*N4 + N4x*(-D12*N3y - D16*N3x) + N4y*(-D26*N3y - D66*N3x)) + detJ*r32*wij*(E55*N3*N4 + Ery*gamma3*gamma4 + N4x*(D11*N3x + D16*N3y) + N4y*(D16*N3x + D66*N3y)))
            k += 1
            KC0v[k] += A66*N3*N4*alphat*detJ*r23*r33*wij/h + r21*(detJ*r31*wij*(E44*N3*N4 + Erx*gamma3*gamma4 - N4x*(-D26*N3y - D66*N3x) - N4y*(-D22*N3y - D26*N3x)) + detJ*r32*wij*(-E45*N3*N4 - N4x*(D16*N3x + D66*N3y) - N4y*(D12*N3x + D26*N3y))) + r22*(detJ*r31*wij*(-E45*N3*N4 + N4x*(-D12*N3y - D16*N3x) + N4y*(-D26*N3y - D66*N3x)) + detJ*r32*wij*(E55*N3*N4 + Ery*gamma3*gamma4 + N4x*(D11*N3x + D16*N3y) + N4y*(D16*N3x + D66*N3y)))
            k += 1
            KC0v[k] += A66*N3*N4*alphat*detJ*r33**2*wij/h + r31*(detJ*r31*wij*(E44*N3*N4 + Erx*gamma3*gamma4 - N4x*(-D26*N3y - D66*N3x) - N4y*(-D22*N3y - D26*N3x)) + detJ*r32*wij*(-E45*N3*N4 - N4x*(D16*N3x + D66*N3y) - N4y*(D12*N3x + D26*N3y))) + r32*(detJ*r31*wij*(-E45*N3*N4 + N4x*(-D12*N3y - D16*N3x) + N4y*(-D26*N3y - D66*N3x)) + detJ*r32*wij*(E55*N3*N4 + Ery*gamma3*gamma4 + N4x*(D11*N3x + D16*N3y) + N4y*(D16*N3x + D66*N3y)))
            k += 1
            KC0v[k] += detJ*r13**2*wij*(Ew*gamma1*gamma4 + N1x*(E45*N4y + E55*N4x) + N1y*(E44*N4y + E45*N4x)) + r11*(detJ*r11*wij*(0.25*A66*N1y*N4y*alphat/h + Eu*gamma1*gamma4 + N1x*(A11*N4x + A16*N4y) + N1y*(A16*N4x + A66*N4y)) + detJ*r12*wij*(-0.25*A66*N1y*N4x*alphat/h + N1x*(A12*N4y + A16*N4x) + N1y*(A26*N4y + A66*N4x))) + r12*(detJ*r11*wij*(-0.25*A66*N1x*N4y*alphat/h + N1x*(A16*N4x + A66*N4y) + N1y*(A12*N4x + A26*N4y)) + detJ*r12*wij*(0.25*A66*N1x*N4x*alphat/h + Ev*gamma1*gamma4 + N1x*(A26*N4y + A66*N4x) + N1y*(A22*N4y + A26*N4x)))
            k += 1
            KC0v[k] += detJ*r13*r23*wij*(Ew*gamma1*gamma4 + N1x*(E45*N4y + E55*N4x) + N1y*(E44*N4y + E45*N4x)) + r21*(detJ*r11*wij*(0.25*A66*N1y*N4y*alphat/h + Eu*gamma1*gamma4 + N1x*(A11*N4x + A16*N4y) + N1y*(A16*N4x + A66*N4y)) + detJ*r12*wij*(-0.25*A66*N1y*N4x*alphat/h + N1x*(A12*N4y + A16*N4x) + N1y*(A26*N4y + A66*N4x))) + r22*(detJ*r11*wij*(-0.25*A66*N1x*N4y*alphat/h + N1x*(A16*N4x + A66*N4y) + N1y*(A12*N4x + A26*N4y)) + detJ*r12*wij*(0.25*A66*N1x*N4x*alphat/h + Ev*gamma1*gamma4 + N1x*(A26*N4y + A66*N4x) + N1y*(A22*N4y + A26*N4x)))
            k += 1
            KC0v[k] += detJ*r13*r33*wij*(Ew*gamma1*gamma4 + N1x*(E45*N4y + E55*N4x) + N1y*(E44*N4y + E45*N4x)) + r31*(detJ*r11*wij*(0.25*A66*N1y*N4y*alphat/h + Eu*gamma1*gamma4 + N1x*(A11*N4x + A16*N4y) + N1y*(A16*N4x + A66*N4y)) + detJ*r12*wij*(-0.25*A66*N1y*N4x*alphat/h + N1x*(A12*N4y + A16*N4x) + N1y*(A26*N4y + A66*N4x))) + r32*(detJ*r11*wij*(-0.25*A66*N1x*N4y*alphat/h + N1x*(A16*N4x + A66*N4y) + N1y*(A12*N4x + A26*N4y)) + detJ*r12*wij*(0.25*A66*N1x*N4x*alphat/h + Ev*gamma1*gamma4 + N1x*(A26*N4y + A66*N4x) + N1y*(A22*N4y + A26*N4x)))
            k += 1
            KC0v[k] += r11*(-N1*detJ*r13*wij*(E44*N4y + E45*N4x) + detJ*r11*wij*(-N1x*(B16*N4x + B66*N4y) - N1y*(B12*N4x + B26*N4y)) + detJ*r12*wij*(-N1x*(B26*N4y + B66*N4x) - N1y*(B22*N4y + B26*N4x))) + r12*(N1*detJ*r13*wij*(E45*N4y + E55*N4x) + detJ*r11*wij*(N1x*(B11*N4x + B16*N4y) + N1y*(B16*N4x + B66*N4y)) + detJ*r12*wij*(N1x*(B12*N4y + B16*N4x) + N1y*(B26*N4y + B66*N4x))) + r13*(-0.5*A66*N1*N4x*alphat*detJ*r12*wij/h + 0.5*A66*N1*N4y*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += r21*(-N1*detJ*r13*wij*(E44*N4y + E45*N4x) + detJ*r11*wij*(-N1x*(B16*N4x + B66*N4y) - N1y*(B12*N4x + B26*N4y)) + detJ*r12*wij*(-N1x*(B26*N4y + B66*N4x) - N1y*(B22*N4y + B26*N4x))) + r22*(N1*detJ*r13*wij*(E45*N4y + E55*N4x) + detJ*r11*wij*(N1x*(B11*N4x + B16*N4y) + N1y*(B16*N4x + B66*N4y)) + detJ*r12*wij*(N1x*(B12*N4y + B16*N4x) + N1y*(B26*N4y + B66*N4x))) + r23*(-0.5*A66*N1*N4x*alphat*detJ*r12*wij/h + 0.5*A66*N1*N4y*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += r31*(-N1*detJ*r13*wij*(E44*N4y + E45*N4x) + detJ*r11*wij*(-N1x*(B16*N4x + B66*N4y) - N1y*(B12*N4x + B26*N4y)) + detJ*r12*wij*(-N1x*(B26*N4y + B66*N4x) - N1y*(B22*N4y + B26*N4x))) + r32*(N1*detJ*r13*wij*(E45*N4y + E55*N4x) + detJ*r11*wij*(N1x*(B11*N4x + B16*N4y) + N1y*(B16*N4x + B66*N4y)) + detJ*r12*wij*(N1x*(B12*N4y + B16*N4x) + N1y*(B26*N4y + B66*N4x))) + r33*(-0.5*A66*N1*N4x*alphat*detJ*r12*wij/h + 0.5*A66*N1*N4y*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += detJ*r13**2*wij*(Ew*gamma2*gamma4 + N2x*(E45*N4y + E55*N4x) + N2y*(E44*N4y + E45*N4x)) + r11*(detJ*r11*wij*(0.25*A66*N2y*N4y*alphat/h + Eu*gamma2*gamma4 + N2x*(A11*N4x + A16*N4y) + N2y*(A16*N4x + A66*N4y)) + detJ*r12*wij*(-0.25*A66*N2y*N4x*alphat/h + N2x*(A12*N4y + A16*N4x) + N2y*(A26*N4y + A66*N4x))) + r12*(detJ*r11*wij*(-0.25*A66*N2x*N4y*alphat/h + N2x*(A16*N4x + A66*N4y) + N2y*(A12*N4x + A26*N4y)) + detJ*r12*wij*(0.25*A66*N2x*N4x*alphat/h + Ev*gamma2*gamma4 + N2x*(A26*N4y + A66*N4x) + N2y*(A22*N4y + A26*N4x)))
            k += 1
            KC0v[k] += detJ*r13*r23*wij*(Ew*gamma2*gamma4 + N2x*(E45*N4y + E55*N4x) + N2y*(E44*N4y + E45*N4x)) + r21*(detJ*r11*wij*(0.25*A66*N2y*N4y*alphat/h + Eu*gamma2*gamma4 + N2x*(A11*N4x + A16*N4y) + N2y*(A16*N4x + A66*N4y)) + detJ*r12*wij*(-0.25*A66*N2y*N4x*alphat/h + N2x*(A12*N4y + A16*N4x) + N2y*(A26*N4y + A66*N4x))) + r22*(detJ*r11*wij*(-0.25*A66*N2x*N4y*alphat/h + N2x*(A16*N4x + A66*N4y) + N2y*(A12*N4x + A26*N4y)) + detJ*r12*wij*(0.25*A66*N2x*N4x*alphat/h + Ev*gamma2*gamma4 + N2x*(A26*N4y + A66*N4x) + N2y*(A22*N4y + A26*N4x)))
            k += 1
            KC0v[k] += detJ*r13*r33*wij*(Ew*gamma2*gamma4 + N2x*(E45*N4y + E55*N4x) + N2y*(E44*N4y + E45*N4x)) + r31*(detJ*r11*wij*(0.25*A66*N2y*N4y*alphat/h + Eu*gamma2*gamma4 + N2x*(A11*N4x + A16*N4y) + N2y*(A16*N4x + A66*N4y)) + detJ*r12*wij*(-0.25*A66*N2y*N4x*alphat/h + N2x*(A12*N4y + A16*N4x) + N2y*(A26*N4y + A66*N4x))) + r32*(detJ*r11*wij*(-0.25*A66*N2x*N4y*alphat/h + N2x*(A16*N4x + A66*N4y) + N2y*(A12*N4x + A26*N4y)) + detJ*r12*wij*(0.25*A66*N2x*N4x*alphat/h + Ev*gamma2*gamma4 + N2x*(A26*N4y + A66*N4x) + N2y*(A22*N4y + A26*N4x)))
            k += 1
            KC0v[k] += r11*(-N2*detJ*r13*wij*(E44*N4y + E45*N4x) + detJ*r11*wij*(-N2x*(B16*N4x + B66*N4y) - N2y*(B12*N4x + B26*N4y)) + detJ*r12*wij*(-N2x*(B26*N4y + B66*N4x) - N2y*(B22*N4y + B26*N4x))) + r12*(N2*detJ*r13*wij*(E45*N4y + E55*N4x) + detJ*r11*wij*(N2x*(B11*N4x + B16*N4y) + N2y*(B16*N4x + B66*N4y)) + detJ*r12*wij*(N2x*(B12*N4y + B16*N4x) + N2y*(B26*N4y + B66*N4x))) + r13*(-0.5*A66*N2*N4x*alphat*detJ*r12*wij/h + 0.5*A66*N2*N4y*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += r21*(-N2*detJ*r13*wij*(E44*N4y + E45*N4x) + detJ*r11*wij*(-N2x*(B16*N4x + B66*N4y) - N2y*(B12*N4x + B26*N4y)) + detJ*r12*wij*(-N2x*(B26*N4y + B66*N4x) - N2y*(B22*N4y + B26*N4x))) + r22*(N2*detJ*r13*wij*(E45*N4y + E55*N4x) + detJ*r11*wij*(N2x*(B11*N4x + B16*N4y) + N2y*(B16*N4x + B66*N4y)) + detJ*r12*wij*(N2x*(B12*N4y + B16*N4x) + N2y*(B26*N4y + B66*N4x))) + r23*(-0.5*A66*N2*N4x*alphat*detJ*r12*wij/h + 0.5*A66*N2*N4y*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += r31*(-N2*detJ*r13*wij*(E44*N4y + E45*N4x) + detJ*r11*wij*(-N2x*(B16*N4x + B66*N4y) - N2y*(B12*N4x + B26*N4y)) + detJ*r12*wij*(-N2x*(B26*N4y + B66*N4x) - N2y*(B22*N4y + B26*N4x))) + r32*(N2*detJ*r13*wij*(E45*N4y + E55*N4x) + detJ*r11*wij*(N2x*(B11*N4x + B16*N4y) + N2y*(B16*N4x + B66*N4y)) + detJ*r12*wij*(N2x*(B12*N4y + B16*N4x) + N2y*(B26*N4y + B66*N4x))) + r33*(-0.5*A66*N2*N4x*alphat*detJ*r12*wij/h + 0.5*A66*N2*N4y*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += detJ*r13**2*wij*(Ew*gamma3*gamma4 + N3x*(E45*N4y + E55*N4x) + N3y*(E44*N4y + E45*N4x)) + r11*(detJ*r11*wij*(0.25*A66*N3y*N4y*alphat/h + Eu*gamma3*gamma4 + N3x*(A11*N4x + A16*N4y) + N3y*(A16*N4x + A66*N4y)) + detJ*r12*wij*(-0.25*A66*N3y*N4x*alphat/h + N3x*(A12*N4y + A16*N4x) + N3y*(A26*N4y + A66*N4x))) + r12*(detJ*r11*wij*(-0.25*A66*N3x*N4y*alphat/h + N3x*(A16*N4x + A66*N4y) + N3y*(A12*N4x + A26*N4y)) + detJ*r12*wij*(0.25*A66*N3x*N4x*alphat/h + Ev*gamma3*gamma4 + N3x*(A26*N4y + A66*N4x) + N3y*(A22*N4y + A26*N4x)))
            k += 1
            KC0v[k] += detJ*r13*r23*wij*(Ew*gamma3*gamma4 + N3x*(E45*N4y + E55*N4x) + N3y*(E44*N4y + E45*N4x)) + r21*(detJ*r11*wij*(0.25*A66*N3y*N4y*alphat/h + Eu*gamma3*gamma4 + N3x*(A11*N4x + A16*N4y) + N3y*(A16*N4x + A66*N4y)) + detJ*r12*wij*(-0.25*A66*N3y*N4x*alphat/h + N3x*(A12*N4y + A16*N4x) + N3y*(A26*N4y + A66*N4x))) + r22*(detJ*r11*wij*(-0.25*A66*N3x*N4y*alphat/h + N3x*(A16*N4x + A66*N4y) + N3y*(A12*N4x + A26*N4y)) + detJ*r12*wij*(0.25*A66*N3x*N4x*alphat/h + Ev*gamma3*gamma4 + N3x*(A26*N4y + A66*N4x) + N3y*(A22*N4y + A26*N4x)))
            k += 1
            KC0v[k] += detJ*r13*r33*wij*(Ew*gamma3*gamma4 + N3x*(E45*N4y + E55*N4x) + N3y*(E44*N4y + E45*N4x)) + r31*(detJ*r11*wij*(0.25*A66*N3y*N4y*alphat/h + Eu*gamma3*gamma4 + N3x*(A11*N4x + A16*N4y) + N3y*(A16*N4x + A66*N4y)) + detJ*r12*wij*(-0.25*A66*N3y*N4x*alphat/h + N3x*(A12*N4y + A16*N4x) + N3y*(A26*N4y + A66*N4x))) + r32*(detJ*r11*wij*(-0.25*A66*N3x*N4y*alphat/h + N3x*(A16*N4x + A66*N4y) + N3y*(A12*N4x + A26*N4y)) + detJ*r12*wij*(0.25*A66*N3x*N4x*alphat/h + Ev*gamma3*gamma4 + N3x*(A26*N4y + A66*N4x) + N3y*(A22*N4y + A26*N4x)))
            k += 1
            KC0v[k] += r11*(-N3*detJ*r13*wij*(E44*N4y + E45*N4x) + detJ*r11*wij*(-N3x*(B16*N4x + B66*N4y) - N3y*(B12*N4x + B26*N4y)) + detJ*r12*wij*(-N3x*(B26*N4y + B66*N4x) - N3y*(B22*N4y + B26*N4x))) + r12*(N3*detJ*r13*wij*(E45*N4y + E55*N4x) + detJ*r11*wij*(N3x*(B11*N4x + B16*N4y) + N3y*(B16*N4x + B66*N4y)) + detJ*r12*wij*(N3x*(B12*N4y + B16*N4x) + N3y*(B26*N4y + B66*N4x))) + r13*(-0.5*A66*N3*N4x*alphat*detJ*r12*wij/h + 0.5*A66*N3*N4y*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += r21*(-N3*detJ*r13*wij*(E44*N4y + E45*N4x) + detJ*r11*wij*(-N3x*(B16*N4x + B66*N4y) - N3y*(B12*N4x + B26*N4y)) + detJ*r12*wij*(-N3x*(B26*N4y + B66*N4x) - N3y*(B22*N4y + B26*N4x))) + r22*(N3*detJ*r13*wij*(E45*N4y + E55*N4x) + detJ*r11*wij*(N3x*(B11*N4x + B16*N4y) + N3y*(B16*N4x + B66*N4y)) + detJ*r12*wij*(N3x*(B12*N4y + B16*N4x) + N3y*(B26*N4y + B66*N4x))) + r23*(-0.5*A66*N3*N4x*alphat*detJ*r12*wij/h + 0.5*A66*N3*N4y*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += r31*(-N3*detJ*r13*wij*(E44*N4y + E45*N4x) + detJ*r11*wij*(-N3x*(B16*N4x + B66*N4y) - N3y*(B12*N4x + B26*N4y)) + detJ*r12*wij*(-N3x*(B26*N4y + B66*N4x) - N3y*(B22*N4y + B26*N4x))) + r32*(N3*detJ*r13*wij*(E45*N4y + E55*N4x) + detJ*r11*wij*(N3x*(B11*N4x + B16*N4y) + N3y*(B16*N4x + B66*N4y)) + detJ*r12*wij*(N3x*(B12*N4y + B16*N4x) + N3y*(B26*N4y + B66*N4x))) + r33*(-0.5*A66*N3*N4x*alphat*detJ*r12*wij/h + 0.5*A66*N3*N4y*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += detJ*r13**2*wij*(Ew*gamma4**2 + N4x*(E45*N4y + E55*N4x) + N4y*(E44*N4y + E45*N4x)) + r11*(detJ*r11*wij*(0.25*A66*N4y**2*alphat/h + Eu*gamma4**2 + N4x*(A11*N4x + A16*N4y) + N4y*(A16*N4x + A66*N4y)) + detJ*r12*wij*(-0.25*A66*N4x*N4y*alphat/h + N4x*(A12*N4y + A16*N4x) + N4y*(A26*N4y + A66*N4x))) + r12*(detJ*r11*wij*(-0.25*A66*N4x*N4y*alphat/h + N4x*(A16*N4x + A66*N4y) + N4y*(A12*N4x + A26*N4y)) + detJ*r12*wij*(0.25*A66*N4x**2*alphat/h + Ev*gamma4**2 + N4x*(A26*N4y + A66*N4x) + N4y*(A22*N4y + A26*N4x)))
            k += 1
            KC0v[k] += detJ*r13*r23*wij*(Ew*gamma4**2 + N4x*(E45*N4y + E55*N4x) + N4y*(E44*N4y + E45*N4x)) + r21*(detJ*r11*wij*(0.25*A66*N4y**2*alphat/h + Eu*gamma4**2 + N4x*(A11*N4x + A16*N4y) + N4y*(A16*N4x + A66*N4y)) + detJ*r12*wij*(-0.25*A66*N4x*N4y*alphat/h + N4x*(A12*N4y + A16*N4x) + N4y*(A26*N4y + A66*N4x))) + r22*(detJ*r11*wij*(-0.25*A66*N4x*N4y*alphat/h + N4x*(A16*N4x + A66*N4y) + N4y*(A12*N4x + A26*N4y)) + detJ*r12*wij*(0.25*A66*N4x**2*alphat/h + Ev*gamma4**2 + N4x*(A26*N4y + A66*N4x) + N4y*(A22*N4y + A26*N4x)))
            k += 1
            KC0v[k] += detJ*r13*r33*wij*(Ew*gamma4**2 + N4x*(E45*N4y + E55*N4x) + N4y*(E44*N4y + E45*N4x)) + r31*(detJ*r11*wij*(0.25*A66*N4y**2*alphat/h + Eu*gamma4**2 + N4x*(A11*N4x + A16*N4y) + N4y*(A16*N4x + A66*N4y)) + detJ*r12*wij*(-0.25*A66*N4x*N4y*alphat/h + N4x*(A12*N4y + A16*N4x) + N4y*(A26*N4y + A66*N4x))) + r32*(detJ*r11*wij*(-0.25*A66*N4x*N4y*alphat/h + N4x*(A16*N4x + A66*N4y) + N4y*(A12*N4x + A26*N4y)) + detJ*r12*wij*(0.25*A66*N4x**2*alphat/h + Ev*gamma4**2 + N4x*(A26*N4y + A66*N4x) + N4y*(A22*N4y + A26*N4x)))
            k += 1
            KC0v[k] += r11*(-N4*detJ*r13*wij*(E44*N4y + E45*N4x) + detJ*r11*wij*(-N4x*(B16*N4x + B66*N4y) - N4y*(B12*N4x + B26*N4y)) + detJ*r12*wij*(-N4x*(B26*N4y + B66*N4x) - N4y*(B22*N4y + B26*N4x))) + r12*(N4*detJ*r13*wij*(E45*N4y + E55*N4x) + detJ*r11*wij*(N4x*(B11*N4x + B16*N4y) + N4y*(B16*N4x + B66*N4y)) + detJ*r12*wij*(N4x*(B12*N4y + B16*N4x) + N4y*(B26*N4y + B66*N4x))) + r13*(-0.5*A66*N4*N4x*alphat*detJ*r12*wij/h + 0.5*A66*N4*N4y*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += r21*(-N4*detJ*r13*wij*(E44*N4y + E45*N4x) + detJ*r11*wij*(-N4x*(B16*N4x + B66*N4y) - N4y*(B12*N4x + B26*N4y)) + detJ*r12*wij*(-N4x*(B26*N4y + B66*N4x) - N4y*(B22*N4y + B26*N4x))) + r22*(N4*detJ*r13*wij*(E45*N4y + E55*N4x) + detJ*r11*wij*(N4x*(B11*N4x + B16*N4y) + N4y*(B16*N4x + B66*N4y)) + detJ*r12*wij*(N4x*(B12*N4y + B16*N4x) + N4y*(B26*N4y + B66*N4x))) + r23*(-0.5*A66*N4*N4x*alphat*detJ*r12*wij/h + 0.5*A66*N4*N4y*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += r31*(-N4*detJ*r13*wij*(E44*N4y + E45*N4x) + detJ*r11*wij*(-N4x*(B16*N4x + B66*N4y) - N4y*(B12*N4x + B26*N4y)) + detJ*r12*wij*(-N4x*(B26*N4y + B66*N4x) - N4y*(B22*N4y + B26*N4x))) + r32*(N4*detJ*r13*wij*(E45*N4y + E55*N4x) + detJ*r11*wij*(N4x*(B11*N4x + B16*N4y) + N4y*(B16*N4x + B66*N4y)) + detJ*r12*wij*(N4x*(B12*N4y + B16*N4x) + N4y*(B26*N4y + B66*N4x))) + r33*(-0.5*A66*N4*N4x*alphat*detJ*r12*wij/h + 0.5*A66*N4*N4y*alphat*detJ*r11*wij/h)
            k += 1
            KC0v[k] += detJ*r13*r23*wij*(Ew*gamma1*gamma4 + N1x*(E45*N4y + E55*N4x) + N1y*(E44*N4y + E45*N4x)) + r11*(detJ*r21*wij*(0.25*A66*N1y*N4y*alphat/h + Eu*gamma1*gamma4 + N1x*(A11*N4x + A16*N4y) + N1y*(A16*N4x + A66*N4y)) + detJ*r22*wij*(-0.25*A66*N1y*N4x*alphat/h + N1x*(A12*N4y + A16*N4x) + N1y*(A26*N4y + A66*N4x))) + r12*(detJ*r21*wij*(-0.25*A66*N1x*N4y*alphat/h + N1x*(A16*N4x + A66*N4y) + N1y*(A12*N4x + A26*N4y)) + detJ*r22*wij*(0.25*A66*N1x*N4x*alphat/h + Ev*gamma1*gamma4 + N1x*(A26*N4y + A66*N4x) + N1y*(A22*N4y + A26*N4x)))
            k += 1
            KC0v[k] += detJ*r23**2*wij*(Ew*gamma1*gamma4 + N1x*(E45*N4y + E55*N4x) + N1y*(E44*N4y + E45*N4x)) + r21*(detJ*r21*wij*(0.25*A66*N1y*N4y*alphat/h + Eu*gamma1*gamma4 + N1x*(A11*N4x + A16*N4y) + N1y*(A16*N4x + A66*N4y)) + detJ*r22*wij*(-0.25*A66*N1y*N4x*alphat/h + N1x*(A12*N4y + A16*N4x) + N1y*(A26*N4y + A66*N4x))) + r22*(detJ*r21*wij*(-0.25*A66*N1x*N4y*alphat/h + N1x*(A16*N4x + A66*N4y) + N1y*(A12*N4x + A26*N4y)) + detJ*r22*wij*(0.25*A66*N1x*N4x*alphat/h + Ev*gamma1*gamma4 + N1x*(A26*N4y + A66*N4x) + N1y*(A22*N4y + A26*N4x)))
            k += 1
            KC0v[k] += detJ*r23*r33*wij*(Ew*gamma1*gamma4 + N1x*(E45*N4y + E55*N4x) + N1y*(E44*N4y + E45*N4x)) + r31*(detJ*r21*wij*(0.25*A66*N1y*N4y*alphat/h + Eu*gamma1*gamma4 + N1x*(A11*N4x + A16*N4y) + N1y*(A16*N4x + A66*N4y)) + detJ*r22*wij*(-0.25*A66*N1y*N4x*alphat/h + N1x*(A12*N4y + A16*N4x) + N1y*(A26*N4y + A66*N4x))) + r32*(detJ*r21*wij*(-0.25*A66*N1x*N4y*alphat/h + N1x*(A16*N4x + A66*N4y) + N1y*(A12*N4x + A26*N4y)) + detJ*r22*wij*(0.25*A66*N1x*N4x*alphat/h + Ev*gamma1*gamma4 + N1x*(A26*N4y + A66*N4x) + N1y*(A22*N4y + A26*N4x)))
            k += 1
            KC0v[k] += r11*(-N1*detJ*r23*wij*(E44*N4y + E45*N4x) + detJ*r21*wij*(-N1x*(B16*N4x + B66*N4y) - N1y*(B12*N4x + B26*N4y)) + detJ*r22*wij*(-N1x*(B26*N4y + B66*N4x) - N1y*(B22*N4y + B26*N4x))) + r12*(N1*detJ*r23*wij*(E45*N4y + E55*N4x) + detJ*r21*wij*(N1x*(B11*N4x + B16*N4y) + N1y*(B16*N4x + B66*N4y)) + detJ*r22*wij*(N1x*(B12*N4y + B16*N4x) + N1y*(B26*N4y + B66*N4x))) + r13*(-0.5*A66*N1*N4x*alphat*detJ*r22*wij/h + 0.5*A66*N1*N4y*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += r21*(-N1*detJ*r23*wij*(E44*N4y + E45*N4x) + detJ*r21*wij*(-N1x*(B16*N4x + B66*N4y) - N1y*(B12*N4x + B26*N4y)) + detJ*r22*wij*(-N1x*(B26*N4y + B66*N4x) - N1y*(B22*N4y + B26*N4x))) + r22*(N1*detJ*r23*wij*(E45*N4y + E55*N4x) + detJ*r21*wij*(N1x*(B11*N4x + B16*N4y) + N1y*(B16*N4x + B66*N4y)) + detJ*r22*wij*(N1x*(B12*N4y + B16*N4x) + N1y*(B26*N4y + B66*N4x))) + r23*(-0.5*A66*N1*N4x*alphat*detJ*r22*wij/h + 0.5*A66*N1*N4y*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += r31*(-N1*detJ*r23*wij*(E44*N4y + E45*N4x) + detJ*r21*wij*(-N1x*(B16*N4x + B66*N4y) - N1y*(B12*N4x + B26*N4y)) + detJ*r22*wij*(-N1x*(B26*N4y + B66*N4x) - N1y*(B22*N4y + B26*N4x))) + r32*(N1*detJ*r23*wij*(E45*N4y + E55*N4x) + detJ*r21*wij*(N1x*(B11*N4x + B16*N4y) + N1y*(B16*N4x + B66*N4y)) + detJ*r22*wij*(N1x*(B12*N4y + B16*N4x) + N1y*(B26*N4y + B66*N4x))) + r33*(-0.5*A66*N1*N4x*alphat*detJ*r22*wij/h + 0.5*A66*N1*N4y*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += detJ*r13*r23*wij*(Ew*gamma2*gamma4 + N2x*(E45*N4y + E55*N4x) + N2y*(E44*N4y + E45*N4x)) + r11*(detJ*r21*wij*(0.25*A66*N2y*N4y*alphat/h + Eu*gamma2*gamma4 + N2x*(A11*N4x + A16*N4y) + N2y*(A16*N4x + A66*N4y)) + detJ*r22*wij*(-0.25*A66*N2y*N4x*alphat/h + N2x*(A12*N4y + A16*N4x) + N2y*(A26*N4y + A66*N4x))) + r12*(detJ*r21*wij*(-0.25*A66*N2x*N4y*alphat/h + N2x*(A16*N4x + A66*N4y) + N2y*(A12*N4x + A26*N4y)) + detJ*r22*wij*(0.25*A66*N2x*N4x*alphat/h + Ev*gamma2*gamma4 + N2x*(A26*N4y + A66*N4x) + N2y*(A22*N4y + A26*N4x)))
            k += 1
            KC0v[k] += detJ*r23**2*wij*(Ew*gamma2*gamma4 + N2x*(E45*N4y + E55*N4x) + N2y*(E44*N4y + E45*N4x)) + r21*(detJ*r21*wij*(0.25*A66*N2y*N4y*alphat/h + Eu*gamma2*gamma4 + N2x*(A11*N4x + A16*N4y) + N2y*(A16*N4x + A66*N4y)) + detJ*r22*wij*(-0.25*A66*N2y*N4x*alphat/h + N2x*(A12*N4y + A16*N4x) + N2y*(A26*N4y + A66*N4x))) + r22*(detJ*r21*wij*(-0.25*A66*N2x*N4y*alphat/h + N2x*(A16*N4x + A66*N4y) + N2y*(A12*N4x + A26*N4y)) + detJ*r22*wij*(0.25*A66*N2x*N4x*alphat/h + Ev*gamma2*gamma4 + N2x*(A26*N4y + A66*N4x) + N2y*(A22*N4y + A26*N4x)))
            k += 1
            KC0v[k] += detJ*r23*r33*wij*(Ew*gamma2*gamma4 + N2x*(E45*N4y + E55*N4x) + N2y*(E44*N4y + E45*N4x)) + r31*(detJ*r21*wij*(0.25*A66*N2y*N4y*alphat/h + Eu*gamma2*gamma4 + N2x*(A11*N4x + A16*N4y) + N2y*(A16*N4x + A66*N4y)) + detJ*r22*wij*(-0.25*A66*N2y*N4x*alphat/h + N2x*(A12*N4y + A16*N4x) + N2y*(A26*N4y + A66*N4x))) + r32*(detJ*r21*wij*(-0.25*A66*N2x*N4y*alphat/h + N2x*(A16*N4x + A66*N4y) + N2y*(A12*N4x + A26*N4y)) + detJ*r22*wij*(0.25*A66*N2x*N4x*alphat/h + Ev*gamma2*gamma4 + N2x*(A26*N4y + A66*N4x) + N2y*(A22*N4y + A26*N4x)))
            k += 1
            KC0v[k] += r11*(-N2*detJ*r23*wij*(E44*N4y + E45*N4x) + detJ*r21*wij*(-N2x*(B16*N4x + B66*N4y) - N2y*(B12*N4x + B26*N4y)) + detJ*r22*wij*(-N2x*(B26*N4y + B66*N4x) - N2y*(B22*N4y + B26*N4x))) + r12*(N2*detJ*r23*wij*(E45*N4y + E55*N4x) + detJ*r21*wij*(N2x*(B11*N4x + B16*N4y) + N2y*(B16*N4x + B66*N4y)) + detJ*r22*wij*(N2x*(B12*N4y + B16*N4x) + N2y*(B26*N4y + B66*N4x))) + r13*(-0.5*A66*N2*N4x*alphat*detJ*r22*wij/h + 0.5*A66*N2*N4y*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += r21*(-N2*detJ*r23*wij*(E44*N4y + E45*N4x) + detJ*r21*wij*(-N2x*(B16*N4x + B66*N4y) - N2y*(B12*N4x + B26*N4y)) + detJ*r22*wij*(-N2x*(B26*N4y + B66*N4x) - N2y*(B22*N4y + B26*N4x))) + r22*(N2*detJ*r23*wij*(E45*N4y + E55*N4x) + detJ*r21*wij*(N2x*(B11*N4x + B16*N4y) + N2y*(B16*N4x + B66*N4y)) + detJ*r22*wij*(N2x*(B12*N4y + B16*N4x) + N2y*(B26*N4y + B66*N4x))) + r23*(-0.5*A66*N2*N4x*alphat*detJ*r22*wij/h + 0.5*A66*N2*N4y*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += r31*(-N2*detJ*r23*wij*(E44*N4y + E45*N4x) + detJ*r21*wij*(-N2x*(B16*N4x + B66*N4y) - N2y*(B12*N4x + B26*N4y)) + detJ*r22*wij*(-N2x*(B26*N4y + B66*N4x) - N2y*(B22*N4y + B26*N4x))) + r32*(N2*detJ*r23*wij*(E45*N4y + E55*N4x) + detJ*r21*wij*(N2x*(B11*N4x + B16*N4y) + N2y*(B16*N4x + B66*N4y)) + detJ*r22*wij*(N2x*(B12*N4y + B16*N4x) + N2y*(B26*N4y + B66*N4x))) + r33*(-0.5*A66*N2*N4x*alphat*detJ*r22*wij/h + 0.5*A66*N2*N4y*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += detJ*r13*r23*wij*(Ew*gamma3*gamma4 + N3x*(E45*N4y + E55*N4x) + N3y*(E44*N4y + E45*N4x)) + r11*(detJ*r21*wij*(0.25*A66*N3y*N4y*alphat/h + Eu*gamma3*gamma4 + N3x*(A11*N4x + A16*N4y) + N3y*(A16*N4x + A66*N4y)) + detJ*r22*wij*(-0.25*A66*N3y*N4x*alphat/h + N3x*(A12*N4y + A16*N4x) + N3y*(A26*N4y + A66*N4x))) + r12*(detJ*r21*wij*(-0.25*A66*N3x*N4y*alphat/h + N3x*(A16*N4x + A66*N4y) + N3y*(A12*N4x + A26*N4y)) + detJ*r22*wij*(0.25*A66*N3x*N4x*alphat/h + Ev*gamma3*gamma4 + N3x*(A26*N4y + A66*N4x) + N3y*(A22*N4y + A26*N4x)))
            k += 1
            KC0v[k] += detJ*r23**2*wij*(Ew*gamma3*gamma4 + N3x*(E45*N4y + E55*N4x) + N3y*(E44*N4y + E45*N4x)) + r21*(detJ*r21*wij*(0.25*A66*N3y*N4y*alphat/h + Eu*gamma3*gamma4 + N3x*(A11*N4x + A16*N4y) + N3y*(A16*N4x + A66*N4y)) + detJ*r22*wij*(-0.25*A66*N3y*N4x*alphat/h + N3x*(A12*N4y + A16*N4x) + N3y*(A26*N4y + A66*N4x))) + r22*(detJ*r21*wij*(-0.25*A66*N3x*N4y*alphat/h + N3x*(A16*N4x + A66*N4y) + N3y*(A12*N4x + A26*N4y)) + detJ*r22*wij*(0.25*A66*N3x*N4x*alphat/h + Ev*gamma3*gamma4 + N3x*(A26*N4y + A66*N4x) + N3y*(A22*N4y + A26*N4x)))
            k += 1
            KC0v[k] += detJ*r23*r33*wij*(Ew*gamma3*gamma4 + N3x*(E45*N4y + E55*N4x) + N3y*(E44*N4y + E45*N4x)) + r31*(detJ*r21*wij*(0.25*A66*N3y*N4y*alphat/h + Eu*gamma3*gamma4 + N3x*(A11*N4x + A16*N4y) + N3y*(A16*N4x + A66*N4y)) + detJ*r22*wij*(-0.25*A66*N3y*N4x*alphat/h + N3x*(A12*N4y + A16*N4x) + N3y*(A26*N4y + A66*N4x))) + r32*(detJ*r21*wij*(-0.25*A66*N3x*N4y*alphat/h + N3x*(A16*N4x + A66*N4y) + N3y*(A12*N4x + A26*N4y)) + detJ*r22*wij*(0.25*A66*N3x*N4x*alphat/h + Ev*gamma3*gamma4 + N3x*(A26*N4y + A66*N4x) + N3y*(A22*N4y + A26*N4x)))
            k += 1
            KC0v[k] += r11*(-N3*detJ*r23*wij*(E44*N4y + E45*N4x) + detJ*r21*wij*(-N3x*(B16*N4x + B66*N4y) - N3y*(B12*N4x + B26*N4y)) + detJ*r22*wij*(-N3x*(B26*N4y + B66*N4x) - N3y*(B22*N4y + B26*N4x))) + r12*(N3*detJ*r23*wij*(E45*N4y + E55*N4x) + detJ*r21*wij*(N3x*(B11*N4x + B16*N4y) + N3y*(B16*N4x + B66*N4y)) + detJ*r22*wij*(N3x*(B12*N4y + B16*N4x) + N3y*(B26*N4y + B66*N4x))) + r13*(-0.5*A66*N3*N4x*alphat*detJ*r22*wij/h + 0.5*A66*N3*N4y*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += r21*(-N3*detJ*r23*wij*(E44*N4y + E45*N4x) + detJ*r21*wij*(-N3x*(B16*N4x + B66*N4y) - N3y*(B12*N4x + B26*N4y)) + detJ*r22*wij*(-N3x*(B26*N4y + B66*N4x) - N3y*(B22*N4y + B26*N4x))) + r22*(N3*detJ*r23*wij*(E45*N4y + E55*N4x) + detJ*r21*wij*(N3x*(B11*N4x + B16*N4y) + N3y*(B16*N4x + B66*N4y)) + detJ*r22*wij*(N3x*(B12*N4y + B16*N4x) + N3y*(B26*N4y + B66*N4x))) + r23*(-0.5*A66*N3*N4x*alphat*detJ*r22*wij/h + 0.5*A66*N3*N4y*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += r31*(-N3*detJ*r23*wij*(E44*N4y + E45*N4x) + detJ*r21*wij*(-N3x*(B16*N4x + B66*N4y) - N3y*(B12*N4x + B26*N4y)) + detJ*r22*wij*(-N3x*(B26*N4y + B66*N4x) - N3y*(B22*N4y + B26*N4x))) + r32*(N3*detJ*r23*wij*(E45*N4y + E55*N4x) + detJ*r21*wij*(N3x*(B11*N4x + B16*N4y) + N3y*(B16*N4x + B66*N4y)) + detJ*r22*wij*(N3x*(B12*N4y + B16*N4x) + N3y*(B26*N4y + B66*N4x))) + r33*(-0.5*A66*N3*N4x*alphat*detJ*r22*wij/h + 0.5*A66*N3*N4y*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += detJ*r13*r23*wij*(Ew*gamma4**2 + N4x*(E45*N4y + E55*N4x) + N4y*(E44*N4y + E45*N4x)) + r11*(detJ*r21*wij*(0.25*A66*N4y**2*alphat/h + Eu*gamma4**2 + N4x*(A11*N4x + A16*N4y) + N4y*(A16*N4x + A66*N4y)) + detJ*r22*wij*(-0.25*A66*N4x*N4y*alphat/h + N4x*(A12*N4y + A16*N4x) + N4y*(A26*N4y + A66*N4x))) + r12*(detJ*r21*wij*(-0.25*A66*N4x*N4y*alphat/h + N4x*(A16*N4x + A66*N4y) + N4y*(A12*N4x + A26*N4y)) + detJ*r22*wij*(0.25*A66*N4x**2*alphat/h + Ev*gamma4**2 + N4x*(A26*N4y + A66*N4x) + N4y*(A22*N4y + A26*N4x)))
            k += 1
            KC0v[k] += detJ*r23**2*wij*(Ew*gamma4**2 + N4x*(E45*N4y + E55*N4x) + N4y*(E44*N4y + E45*N4x)) + r21*(detJ*r21*wij*(0.25*A66*N4y**2*alphat/h + Eu*gamma4**2 + N4x*(A11*N4x + A16*N4y) + N4y*(A16*N4x + A66*N4y)) + detJ*r22*wij*(-0.25*A66*N4x*N4y*alphat/h + N4x*(A12*N4y + A16*N4x) + N4y*(A26*N4y + A66*N4x))) + r22*(detJ*r21*wij*(-0.25*A66*N4x*N4y*alphat/h + N4x*(A16*N4x + A66*N4y) + N4y*(A12*N4x + A26*N4y)) + detJ*r22*wij*(0.25*A66*N4x**2*alphat/h + Ev*gamma4**2 + N4x*(A26*N4y + A66*N4x) + N4y*(A22*N4y + A26*N4x)))
            k += 1
            KC0v[k] += detJ*r23*r33*wij*(Ew*gamma4**2 + N4x*(E45*N4y + E55*N4x) + N4y*(E44*N4y + E45*N4x)) + r31*(detJ*r21*wij*(0.25*A66*N4y**2*alphat/h + Eu*gamma4**2 + N4x*(A11*N4x + A16*N4y) + N4y*(A16*N4x + A66*N4y)) + detJ*r22*wij*(-0.25*A66*N4x*N4y*alphat/h + N4x*(A12*N4y + A16*N4x) + N4y*(A26*N4y + A66*N4x))) + r32*(detJ*r21*wij*(-0.25*A66*N4x*N4y*alphat/h + N4x*(A16*N4x + A66*N4y) + N4y*(A12*N4x + A26*N4y)) + detJ*r22*wij*(0.25*A66*N4x**2*alphat/h + Ev*gamma4**2 + N4x*(A26*N4y + A66*N4x) + N4y*(A22*N4y + A26*N4x)))
            k += 1
            KC0v[k] += r11*(-N4*detJ*r23*wij*(E44*N4y + E45*N4x) + detJ*r21*wij*(-N4x*(B16*N4x + B66*N4y) - N4y*(B12*N4x + B26*N4y)) + detJ*r22*wij*(-N4x*(B26*N4y + B66*N4x) - N4y*(B22*N4y + B26*N4x))) + r12*(N4*detJ*r23*wij*(E45*N4y + E55*N4x) + detJ*r21*wij*(N4x*(B11*N4x + B16*N4y) + N4y*(B16*N4x + B66*N4y)) + detJ*r22*wij*(N4x*(B12*N4y + B16*N4x) + N4y*(B26*N4y + B66*N4x))) + r13*(-0.5*A66*N4*N4x*alphat*detJ*r22*wij/h + 0.5*A66*N4*N4y*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += r21*(-N4*detJ*r23*wij*(E44*N4y + E45*N4x) + detJ*r21*wij*(-N4x*(B16*N4x + B66*N4y) - N4y*(B12*N4x + B26*N4y)) + detJ*r22*wij*(-N4x*(B26*N4y + B66*N4x) - N4y*(B22*N4y + B26*N4x))) + r22*(N4*detJ*r23*wij*(E45*N4y + E55*N4x) + detJ*r21*wij*(N4x*(B11*N4x + B16*N4y) + N4y*(B16*N4x + B66*N4y)) + detJ*r22*wij*(N4x*(B12*N4y + B16*N4x) + N4y*(B26*N4y + B66*N4x))) + r23*(-0.5*A66*N4*N4x*alphat*detJ*r22*wij/h + 0.5*A66*N4*N4y*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += r31*(-N4*detJ*r23*wij*(E44*N4y + E45*N4x) + detJ*r21*wij*(-N4x*(B16*N4x + B66*N4y) - N4y*(B12*N4x + B26*N4y)) + detJ*r22*wij*(-N4x*(B26*N4y + B66*N4x) - N4y*(B22*N4y + B26*N4x))) + r32*(N4*detJ*r23*wij*(E45*N4y + E55*N4x) + detJ*r21*wij*(N4x*(B11*N4x + B16*N4y) + N4y*(B16*N4x + B66*N4y)) + detJ*r22*wij*(N4x*(B12*N4y + B16*N4x) + N4y*(B26*N4y + B66*N4x))) + r33*(-0.5*A66*N4*N4x*alphat*detJ*r22*wij/h + 0.5*A66*N4*N4y*alphat*detJ*r21*wij/h)
            k += 1
            KC0v[k] += detJ*r13*r33*wij*(Ew*gamma1*gamma4 + N1x*(E45*N4y + E55*N4x) + N1y*(E44*N4y + E45*N4x)) + r11*(detJ*r31*wij*(0.25*A66*N1y*N4y*alphat/h + Eu*gamma1*gamma4 + N1x*(A11*N4x + A16*N4y) + N1y*(A16*N4x + A66*N4y)) + detJ*r32*wij*(-0.25*A66*N1y*N4x*alphat/h + N1x*(A12*N4y + A16*N4x) + N1y*(A26*N4y + A66*N4x))) + r12*(detJ*r31*wij*(-0.25*A66*N1x*N4y*alphat/h + N1x*(A16*N4x + A66*N4y) + N1y*(A12*N4x + A26*N4y)) + detJ*r32*wij*(0.25*A66*N1x*N4x*alphat/h + Ev*gamma1*gamma4 + N1x*(A26*N4y + A66*N4x) + N1y*(A22*N4y + A26*N4x)))
            k += 1
            KC0v[k] += detJ*r23*r33*wij*(Ew*gamma1*gamma4 + N1x*(E45*N4y + E55*N4x) + N1y*(E44*N4y + E45*N4x)) + r21*(detJ*r31*wij*(0.25*A66*N1y*N4y*alphat/h + Eu*gamma1*gamma4 + N1x*(A11*N4x + A16*N4y) + N1y*(A16*N4x + A66*N4y)) + detJ*r32*wij*(-0.25*A66*N1y*N4x*alphat/h + N1x*(A12*N4y + A16*N4x) + N1y*(A26*N4y + A66*N4x))) + r22*(detJ*r31*wij*(-0.25*A66*N1x*N4y*alphat/h + N1x*(A16*N4x + A66*N4y) + N1y*(A12*N4x + A26*N4y)) + detJ*r32*wij*(0.25*A66*N1x*N4x*alphat/h + Ev*gamma1*gamma4 + N1x*(A26*N4y + A66*N4x) + N1y*(A22*N4y + A26*N4x)))
            k += 1
            KC0v[k] += detJ*r33**2*wij*(Ew*gamma1*gamma4 + N1x*(E45*N4y + E55*N4x) + N1y*(E44*N4y + E45*N4x)) + r31*(detJ*r31*wij*(0.25*A66*N1y*N4y*alphat/h + Eu*gamma1*gamma4 + N1x*(A11*N4x + A16*N4y) + N1y*(A16*N4x + A66*N4y)) + detJ*r32*wij*(-0.25*A66*N1y*N4x*alphat/h + N1x*(A12*N4y + A16*N4x) + N1y*(A26*N4y + A66*N4x))) + r32*(detJ*r31*wij*(-0.25*A66*N1x*N4y*alphat/h + N1x*(A16*N4x + A66*N4y) + N1y*(A12*N4x + A26*N4y)) + detJ*r32*wij*(0.25*A66*N1x*N4x*alphat/h + Ev*gamma1*gamma4 + N1x*(A26*N4y + A66*N4x) + N1y*(A22*N4y + A26*N4x)))
            k += 1
            KC0v[k] += r11*(-N1*detJ*r33*wij*(E44*N4y + E45*N4x) + detJ*r31*wij*(-N1x*(B16*N4x + B66*N4y) - N1y*(B12*N4x + B26*N4y)) + detJ*r32*wij*(-N1x*(B26*N4y + B66*N4x) - N1y*(B22*N4y + B26*N4x))) + r12*(N1*detJ*r33*wij*(E45*N4y + E55*N4x) + detJ*r31*wij*(N1x*(B11*N4x + B16*N4y) + N1y*(B16*N4x + B66*N4y)) + detJ*r32*wij*(N1x*(B12*N4y + B16*N4x) + N1y*(B26*N4y + B66*N4x))) + r13*(-0.5*A66*N1*N4x*alphat*detJ*r32*wij/h + 0.5*A66*N1*N4y*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += r21*(-N1*detJ*r33*wij*(E44*N4y + E45*N4x) + detJ*r31*wij*(-N1x*(B16*N4x + B66*N4y) - N1y*(B12*N4x + B26*N4y)) + detJ*r32*wij*(-N1x*(B26*N4y + B66*N4x) - N1y*(B22*N4y + B26*N4x))) + r22*(N1*detJ*r33*wij*(E45*N4y + E55*N4x) + detJ*r31*wij*(N1x*(B11*N4x + B16*N4y) + N1y*(B16*N4x + B66*N4y)) + detJ*r32*wij*(N1x*(B12*N4y + B16*N4x) + N1y*(B26*N4y + B66*N4x))) + r23*(-0.5*A66*N1*N4x*alphat*detJ*r32*wij/h + 0.5*A66*N1*N4y*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += r31*(-N1*detJ*r33*wij*(E44*N4y + E45*N4x) + detJ*r31*wij*(-N1x*(B16*N4x + B66*N4y) - N1y*(B12*N4x + B26*N4y)) + detJ*r32*wij*(-N1x*(B26*N4y + B66*N4x) - N1y*(B22*N4y + B26*N4x))) + r32*(N1*detJ*r33*wij*(E45*N4y + E55*N4x) + detJ*r31*wij*(N1x*(B11*N4x + B16*N4y) + N1y*(B16*N4x + B66*N4y)) + detJ*r32*wij*(N1x*(B12*N4y + B16*N4x) + N1y*(B26*N4y + B66*N4x))) + r33*(-0.5*A66*N1*N4x*alphat*detJ*r32*wij/h + 0.5*A66*N1*N4y*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += detJ*r13*r33*wij*(Ew*gamma2*gamma4 + N2x*(E45*N4y + E55*N4x) + N2y*(E44*N4y + E45*N4x)) + r11*(detJ*r31*wij*(0.25*A66*N2y*N4y*alphat/h + Eu*gamma2*gamma4 + N2x*(A11*N4x + A16*N4y) + N2y*(A16*N4x + A66*N4y)) + detJ*r32*wij*(-0.25*A66*N2y*N4x*alphat/h + N2x*(A12*N4y + A16*N4x) + N2y*(A26*N4y + A66*N4x))) + r12*(detJ*r31*wij*(-0.25*A66*N2x*N4y*alphat/h + N2x*(A16*N4x + A66*N4y) + N2y*(A12*N4x + A26*N4y)) + detJ*r32*wij*(0.25*A66*N2x*N4x*alphat/h + Ev*gamma2*gamma4 + N2x*(A26*N4y + A66*N4x) + N2y*(A22*N4y + A26*N4x)))
            k += 1
            KC0v[k] += detJ*r23*r33*wij*(Ew*gamma2*gamma4 + N2x*(E45*N4y + E55*N4x) + N2y*(E44*N4y + E45*N4x)) + r21*(detJ*r31*wij*(0.25*A66*N2y*N4y*alphat/h + Eu*gamma2*gamma4 + N2x*(A11*N4x + A16*N4y) + N2y*(A16*N4x + A66*N4y)) + detJ*r32*wij*(-0.25*A66*N2y*N4x*alphat/h + N2x*(A12*N4y + A16*N4x) + N2y*(A26*N4y + A66*N4x))) + r22*(detJ*r31*wij*(-0.25*A66*N2x*N4y*alphat/h + N2x*(A16*N4x + A66*N4y) + N2y*(A12*N4x + A26*N4y)) + detJ*r32*wij*(0.25*A66*N2x*N4x*alphat/h + Ev*gamma2*gamma4 + N2x*(A26*N4y + A66*N4x) + N2y*(A22*N4y + A26*N4x)))
            k += 1
            KC0v[k] += detJ*r33**2*wij*(Ew*gamma2*gamma4 + N2x*(E45*N4y + E55*N4x) + N2y*(E44*N4y + E45*N4x)) + r31*(detJ*r31*wij*(0.25*A66*N2y*N4y*alphat/h + Eu*gamma2*gamma4 + N2x*(A11*N4x + A16*N4y) + N2y*(A16*N4x + A66*N4y)) + detJ*r32*wij*(-0.25*A66*N2y*N4x*alphat/h + N2x*(A12*N4y + A16*N4x) + N2y*(A26*N4y + A66*N4x))) + r32*(detJ*r31*wij*(-0.25*A66*N2x*N4y*alphat/h + N2x*(A16*N4x + A66*N4y) + N2y*(A12*N4x + A26*N4y)) + detJ*r32*wij*(0.25*A66*N2x*N4x*alphat/h + Ev*gamma2*gamma4 + N2x*(A26*N4y + A66*N4x) + N2y*(A22*N4y + A26*N4x)))
            k += 1
            KC0v[k] += r11*(-N2*detJ*r33*wij*(E44*N4y + E45*N4x) + detJ*r31*wij*(-N2x*(B16*N4x + B66*N4y) - N2y*(B12*N4x + B26*N4y)) + detJ*r32*wij*(-N2x*(B26*N4y + B66*N4x) - N2y*(B22*N4y + B26*N4x))) + r12*(N2*detJ*r33*wij*(E45*N4y + E55*N4x) + detJ*r31*wij*(N2x*(B11*N4x + B16*N4y) + N2y*(B16*N4x + B66*N4y)) + detJ*r32*wij*(N2x*(B12*N4y + B16*N4x) + N2y*(B26*N4y + B66*N4x))) + r13*(-0.5*A66*N2*N4x*alphat*detJ*r32*wij/h + 0.5*A66*N2*N4y*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += r21*(-N2*detJ*r33*wij*(E44*N4y + E45*N4x) + detJ*r31*wij*(-N2x*(B16*N4x + B66*N4y) - N2y*(B12*N4x + B26*N4y)) + detJ*r32*wij*(-N2x*(B26*N4y + B66*N4x) - N2y*(B22*N4y + B26*N4x))) + r22*(N2*detJ*r33*wij*(E45*N4y + E55*N4x) + detJ*r31*wij*(N2x*(B11*N4x + B16*N4y) + N2y*(B16*N4x + B66*N4y)) + detJ*r32*wij*(N2x*(B12*N4y + B16*N4x) + N2y*(B26*N4y + B66*N4x))) + r23*(-0.5*A66*N2*N4x*alphat*detJ*r32*wij/h + 0.5*A66*N2*N4y*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += r31*(-N2*detJ*r33*wij*(E44*N4y + E45*N4x) + detJ*r31*wij*(-N2x*(B16*N4x + B66*N4y) - N2y*(B12*N4x + B26*N4y)) + detJ*r32*wij*(-N2x*(B26*N4y + B66*N4x) - N2y*(B22*N4y + B26*N4x))) + r32*(N2*detJ*r33*wij*(E45*N4y + E55*N4x) + detJ*r31*wij*(N2x*(B11*N4x + B16*N4y) + N2y*(B16*N4x + B66*N4y)) + detJ*r32*wij*(N2x*(B12*N4y + B16*N4x) + N2y*(B26*N4y + B66*N4x))) + r33*(-0.5*A66*N2*N4x*alphat*detJ*r32*wij/h + 0.5*A66*N2*N4y*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += detJ*r13*r33*wij*(Ew*gamma3*gamma4 + N3x*(E45*N4y + E55*N4x) + N3y*(E44*N4y + E45*N4x)) + r11*(detJ*r31*wij*(0.25*A66*N3y*N4y*alphat/h + Eu*gamma3*gamma4 + N3x*(A11*N4x + A16*N4y) + N3y*(A16*N4x + A66*N4y)) + detJ*r32*wij*(-0.25*A66*N3y*N4x*alphat/h + N3x*(A12*N4y + A16*N4x) + N3y*(A26*N4y + A66*N4x))) + r12*(detJ*r31*wij*(-0.25*A66*N3x*N4y*alphat/h + N3x*(A16*N4x + A66*N4y) + N3y*(A12*N4x + A26*N4y)) + detJ*r32*wij*(0.25*A66*N3x*N4x*alphat/h + Ev*gamma3*gamma4 + N3x*(A26*N4y + A66*N4x) + N3y*(A22*N4y + A26*N4x)))
            k += 1
            KC0v[k] += detJ*r23*r33*wij*(Ew*gamma3*gamma4 + N3x*(E45*N4y + E55*N4x) + N3y*(E44*N4y + E45*N4x)) + r21*(detJ*r31*wij*(0.25*A66*N3y*N4y*alphat/h + Eu*gamma3*gamma4 + N3x*(A11*N4x + A16*N4y) + N3y*(A16*N4x + A66*N4y)) + detJ*r32*wij*(-0.25*A66*N3y*N4x*alphat/h + N3x*(A12*N4y + A16*N4x) + N3y*(A26*N4y + A66*N4x))) + r22*(detJ*r31*wij*(-0.25*A66*N3x*N4y*alphat/h + N3x*(A16*N4x + A66*N4y) + N3y*(A12*N4x + A26*N4y)) + detJ*r32*wij*(0.25*A66*N3x*N4x*alphat/h + Ev*gamma3*gamma4 + N3x*(A26*N4y + A66*N4x) + N3y*(A22*N4y + A26*N4x)))
            k += 1
            KC0v[k] += detJ*r33**2*wij*(Ew*gamma3*gamma4 + N3x*(E45*N4y + E55*N4x) + N3y*(E44*N4y + E45*N4x)) + r31*(detJ*r31*wij*(0.25*A66*N3y*N4y*alphat/h + Eu*gamma3*gamma4 + N3x*(A11*N4x + A16*N4y) + N3y*(A16*N4x + A66*N4y)) + detJ*r32*wij*(-0.25*A66*N3y*N4x*alphat/h + N3x*(A12*N4y + A16*N4x) + N3y*(A26*N4y + A66*N4x))) + r32*(detJ*r31*wij*(-0.25*A66*N3x*N4y*alphat/h + N3x*(A16*N4x + A66*N4y) + N3y*(A12*N4x + A26*N4y)) + detJ*r32*wij*(0.25*A66*N3x*N4x*alphat/h + Ev*gamma3*gamma4 + N3x*(A26*N4y + A66*N4x) + N3y*(A22*N4y + A26*N4x)))
            k += 1
            KC0v[k] += r11*(-N3*detJ*r33*wij*(E44*N4y + E45*N4x) + detJ*r31*wij*(-N3x*(B16*N4x + B66*N4y) - N3y*(B12*N4x + B26*N4y)) + detJ*r32*wij*(-N3x*(B26*N4y + B66*N4x) - N3y*(B22*N4y + B26*N4x))) + r12*(N3*detJ*r33*wij*(E45*N4y + E55*N4x) + detJ*r31*wij*(N3x*(B11*N4x + B16*N4y) + N3y*(B16*N4x + B66*N4y)) + detJ*r32*wij*(N3x*(B12*N4y + B16*N4x) + N3y*(B26*N4y + B66*N4x))) + r13*(-0.5*A66*N3*N4x*alphat*detJ*r32*wij/h + 0.5*A66*N3*N4y*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += r21*(-N3*detJ*r33*wij*(E44*N4y + E45*N4x) + detJ*r31*wij*(-N3x*(B16*N4x + B66*N4y) - N3y*(B12*N4x + B26*N4y)) + detJ*r32*wij*(-N3x*(B26*N4y + B66*N4x) - N3y*(B22*N4y + B26*N4x))) + r22*(N3*detJ*r33*wij*(E45*N4y + E55*N4x) + detJ*r31*wij*(N3x*(B11*N4x + B16*N4y) + N3y*(B16*N4x + B66*N4y)) + detJ*r32*wij*(N3x*(B12*N4y + B16*N4x) + N3y*(B26*N4y + B66*N4x))) + r23*(-0.5*A66*N3*N4x*alphat*detJ*r32*wij/h + 0.5*A66*N3*N4y*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += r31*(-N3*detJ*r33*wij*(E44*N4y + E45*N4x) + detJ*r31*wij*(-N3x*(B16*N4x + B66*N4y) - N3y*(B12*N4x + B26*N4y)) + detJ*r32*wij*(-N3x*(B26*N4y + B66*N4x) - N3y*(B22*N4y + B26*N4x))) + r32*(N3*detJ*r33*wij*(E45*N4y + E55*N4x) + detJ*r31*wij*(N3x*(B11*N4x + B16*N4y) + N3y*(B16*N4x + B66*N4y)) + detJ*r32*wij*(N3x*(B12*N4y + B16*N4x) + N3y*(B26*N4y + B66*N4x))) + r33*(-0.5*A66*N3*N4x*alphat*detJ*r32*wij/h + 0.5*A66*N3*N4y*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += detJ*r13*r33*wij*(Ew*gamma4**2 + N4x*(E45*N4y + E55*N4x) + N4y*(E44*N4y + E45*N4x)) + r11*(detJ*r31*wij*(0.25*A66*N4y**2*alphat/h + Eu*gamma4**2 + N4x*(A11*N4x + A16*N4y) + N4y*(A16*N4x + A66*N4y)) + detJ*r32*wij*(-0.25*A66*N4x*N4y*alphat/h + N4x*(A12*N4y + A16*N4x) + N4y*(A26*N4y + A66*N4x))) + r12*(detJ*r31*wij*(-0.25*A66*N4x*N4y*alphat/h + N4x*(A16*N4x + A66*N4y) + N4y*(A12*N4x + A26*N4y)) + detJ*r32*wij*(0.25*A66*N4x**2*alphat/h + Ev*gamma4**2 + N4x*(A26*N4y + A66*N4x) + N4y*(A22*N4y + A26*N4x)))
            k += 1
            KC0v[k] += detJ*r23*r33*wij*(Ew*gamma4**2 + N4x*(E45*N4y + E55*N4x) + N4y*(E44*N4y + E45*N4x)) + r21*(detJ*r31*wij*(0.25*A66*N4y**2*alphat/h + Eu*gamma4**2 + N4x*(A11*N4x + A16*N4y) + N4y*(A16*N4x + A66*N4y)) + detJ*r32*wij*(-0.25*A66*N4x*N4y*alphat/h + N4x*(A12*N4y + A16*N4x) + N4y*(A26*N4y + A66*N4x))) + r22*(detJ*r31*wij*(-0.25*A66*N4x*N4y*alphat/h + N4x*(A16*N4x + A66*N4y) + N4y*(A12*N4x + A26*N4y)) + detJ*r32*wij*(0.25*A66*N4x**2*alphat/h + Ev*gamma4**2 + N4x*(A26*N4y + A66*N4x) + N4y*(A22*N4y + A26*N4x)))
            k += 1
            KC0v[k] += detJ*r33**2*wij*(Ew*gamma4**2 + N4x*(E45*N4y + E55*N4x) + N4y*(E44*N4y + E45*N4x)) + r31*(detJ*r31*wij*(0.25*A66*N4y**2*alphat/h + Eu*gamma4**2 + N4x*(A11*N4x + A16*N4y) + N4y*(A16*N4x + A66*N4y)) + detJ*r32*wij*(-0.25*A66*N4x*N4y*alphat/h + N4x*(A12*N4y + A16*N4x) + N4y*(A26*N4y + A66*N4x))) + r32*(detJ*r31*wij*(-0.25*A66*N4x*N4y*alphat/h + N4x*(A16*N4x + A66*N4y) + N4y*(A12*N4x + A26*N4y)) + detJ*r32*wij*(0.25*A66*N4x**2*alphat/h + Ev*gamma4**2 + N4x*(A26*N4y + A66*N4x) + N4y*(A22*N4y + A26*N4x)))
            k += 1
            KC0v[k] += r11*(-N4*detJ*r33*wij*(E44*N4y + E45*N4x) + detJ*r31*wij*(-N4x*(B16*N4x + B66*N4y) - N4y*(B12*N4x + B26*N4y)) + detJ*r32*wij*(-N4x*(B26*N4y + B66*N4x) - N4y*(B22*N4y + B26*N4x))) + r12*(N4*detJ*r33*wij*(E45*N4y + E55*N4x) + detJ*r31*wij*(N4x*(B11*N4x + B16*N4y) + N4y*(B16*N4x + B66*N4y)) + detJ*r32*wij*(N4x*(B12*N4y + B16*N4x) + N4y*(B26*N4y + B66*N4x))) + r13*(-0.5*A66*N4*N4x*alphat*detJ*r32*wij/h + 0.5*A66*N4*N4y*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += r21*(-N4*detJ*r33*wij*(E44*N4y + E45*N4x) + detJ*r31*wij*(-N4x*(B16*N4x + B66*N4y) - N4y*(B12*N4x + B26*N4y)) + detJ*r32*wij*(-N4x*(B26*N4y + B66*N4x) - N4y*(B22*N4y + B26*N4x))) + r22*(N4*detJ*r33*wij*(E45*N4y + E55*N4x) + detJ*r31*wij*(N4x*(B11*N4x + B16*N4y) + N4y*(B16*N4x + B66*N4y)) + detJ*r32*wij*(N4x*(B12*N4y + B16*N4x) + N4y*(B26*N4y + B66*N4x))) + r23*(-0.5*A66*N4*N4x*alphat*detJ*r32*wij/h + 0.5*A66*N4*N4y*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += r31*(-N4*detJ*r33*wij*(E44*N4y + E45*N4x) + detJ*r31*wij*(-N4x*(B16*N4x + B66*N4y) - N4y*(B12*N4x + B26*N4y)) + detJ*r32*wij*(-N4x*(B26*N4y + B66*N4x) - N4y*(B22*N4y + B26*N4x))) + r32*(N4*detJ*r33*wij*(E45*N4y + E55*N4x) + detJ*r31*wij*(N4x*(B11*N4x + B16*N4y) + N4y*(B16*N4x + B66*N4y)) + detJ*r32*wij*(N4x*(B12*N4y + B16*N4x) + N4y*(B26*N4y + B66*N4x))) + r33*(-0.5*A66*N4*N4x*alphat*detJ*r32*wij/h + 0.5*A66*N4*N4y*alphat*detJ*r31*wij/h)
            k += 1
            KC0v[k] += r11*(0.5*A66*N1y*N4*alphat*detJ*r13*wij/h + detJ*r11*wij*(N1x*(-B12*N4y - B16*N4x) + N1y*(-B26*N4y - B66*N4x)) + detJ*r12*wij*(N1x*(B11*N4x + B16*N4y) + N1y*(B16*N4x + B66*N4y))) + r12*(-0.5*A66*N1x*N4*alphat*detJ*r13*wij/h + detJ*r11*wij*(N1x*(-B26*N4y - B66*N4x) + N1y*(-B22*N4y - B26*N4x)) + detJ*r12*wij*(N1x*(B16*N4x + B66*N4y) + N1y*(B12*N4x + B26*N4y))) + r13*(detJ*r11*wij*(-E44*N1y*N4 - E45*N1x*N4) + detJ*r12*wij*(E45*N1y*N4 + E55*N1x*N4))
            k += 1
            KC0v[k] += r21*(0.5*A66*N1y*N4*alphat*detJ*r13*wij/h + detJ*r11*wij*(N1x*(-B12*N4y - B16*N4x) + N1y*(-B26*N4y - B66*N4x)) + detJ*r12*wij*(N1x*(B11*N4x + B16*N4y) + N1y*(B16*N4x + B66*N4y))) + r22*(-0.5*A66*N1x*N4*alphat*detJ*r13*wij/h + detJ*r11*wij*(N1x*(-B26*N4y - B66*N4x) + N1y*(-B22*N4y - B26*N4x)) + detJ*r12*wij*(N1x*(B16*N4x + B66*N4y) + N1y*(B12*N4x + B26*N4y))) + r23*(detJ*r11*wij*(-E44*N1y*N4 - E45*N1x*N4) + detJ*r12*wij*(E45*N1y*N4 + E55*N1x*N4))
            k += 1
            KC0v[k] += r31*(0.5*A66*N1y*N4*alphat*detJ*r13*wij/h + detJ*r11*wij*(N1x*(-B12*N4y - B16*N4x) + N1y*(-B26*N4y - B66*N4x)) + detJ*r12*wij*(N1x*(B11*N4x + B16*N4y) + N1y*(B16*N4x + B66*N4y))) + r32*(-0.5*A66*N1x*N4*alphat*detJ*r13*wij/h + detJ*r11*wij*(N1x*(-B26*N4y - B66*N4x) + N1y*(-B22*N4y - B26*N4x)) + detJ*r12*wij*(N1x*(B16*N4x + B66*N4y) + N1y*(B12*N4x + B26*N4y))) + r33*(detJ*r11*wij*(-E44*N1y*N4 - E45*N1x*N4) + detJ*r12*wij*(E45*N1y*N4 + E55*N1x*N4))
            k += 1
            KC0v[k] += A66*N1*N4*alphat*detJ*r13**2*wij/h + r11*(detJ*r11*wij*(E44*N1*N4 + Erx*gamma1*gamma4 - N1x*(-D26*N4y - D66*N4x) - N1y*(-D22*N4y - D26*N4x)) + detJ*r12*wij*(-E45*N1*N4 - N1x*(D16*N4x + D66*N4y) - N1y*(D12*N4x + D26*N4y))) + r12*(detJ*r11*wij*(-E45*N1*N4 + N1x*(-D12*N4y - D16*N4x) + N1y*(-D26*N4y - D66*N4x)) + detJ*r12*wij*(E55*N1*N4 + Ery*gamma1*gamma4 + N1x*(D11*N4x + D16*N4y) + N1y*(D16*N4x + D66*N4y)))
            k += 1
            KC0v[k] += A66*N1*N4*alphat*detJ*r13*r23*wij/h + r21*(detJ*r11*wij*(E44*N1*N4 + Erx*gamma1*gamma4 - N1x*(-D26*N4y - D66*N4x) - N1y*(-D22*N4y - D26*N4x)) + detJ*r12*wij*(-E45*N1*N4 - N1x*(D16*N4x + D66*N4y) - N1y*(D12*N4x + D26*N4y))) + r22*(detJ*r11*wij*(-E45*N1*N4 + N1x*(-D12*N4y - D16*N4x) + N1y*(-D26*N4y - D66*N4x)) + detJ*r12*wij*(E55*N1*N4 + Ery*gamma1*gamma4 + N1x*(D11*N4x + D16*N4y) + N1y*(D16*N4x + D66*N4y)))
            k += 1
            KC0v[k] += A66*N1*N4*alphat*detJ*r13*r33*wij/h + r31*(detJ*r11*wij*(E44*N1*N4 + Erx*gamma1*gamma4 - N1x*(-D26*N4y - D66*N4x) - N1y*(-D22*N4y - D26*N4x)) + detJ*r12*wij*(-E45*N1*N4 - N1x*(D16*N4x + D66*N4y) - N1y*(D12*N4x + D26*N4y))) + r32*(detJ*r11*wij*(-E45*N1*N4 + N1x*(-D12*N4y - D16*N4x) + N1y*(-D26*N4y - D66*N4x)) + detJ*r12*wij*(E55*N1*N4 + Ery*gamma1*gamma4 + N1x*(D11*N4x + D16*N4y) + N1y*(D16*N4x + D66*N4y)))
            k += 1
            KC0v[k] += r11*(0.5*A66*N2y*N4*alphat*detJ*r13*wij/h + detJ*r11*wij*(N2x*(-B12*N4y - B16*N4x) + N2y*(-B26*N4y - B66*N4x)) + detJ*r12*wij*(N2x*(B11*N4x + B16*N4y) + N2y*(B16*N4x + B66*N4y))) + r12*(-0.5*A66*N2x*N4*alphat*detJ*r13*wij/h + detJ*r11*wij*(N2x*(-B26*N4y - B66*N4x) + N2y*(-B22*N4y - B26*N4x)) + detJ*r12*wij*(N2x*(B16*N4x + B66*N4y) + N2y*(B12*N4x + B26*N4y))) + r13*(detJ*r11*wij*(-E44*N2y*N4 - E45*N2x*N4) + detJ*r12*wij*(E45*N2y*N4 + E55*N2x*N4))
            k += 1
            KC0v[k] += r21*(0.5*A66*N2y*N4*alphat*detJ*r13*wij/h + detJ*r11*wij*(N2x*(-B12*N4y - B16*N4x) + N2y*(-B26*N4y - B66*N4x)) + detJ*r12*wij*(N2x*(B11*N4x + B16*N4y) + N2y*(B16*N4x + B66*N4y))) + r22*(-0.5*A66*N2x*N4*alphat*detJ*r13*wij/h + detJ*r11*wij*(N2x*(-B26*N4y - B66*N4x) + N2y*(-B22*N4y - B26*N4x)) + detJ*r12*wij*(N2x*(B16*N4x + B66*N4y) + N2y*(B12*N4x + B26*N4y))) + r23*(detJ*r11*wij*(-E44*N2y*N4 - E45*N2x*N4) + detJ*r12*wij*(E45*N2y*N4 + E55*N2x*N4))
            k += 1
            KC0v[k] += r31*(0.5*A66*N2y*N4*alphat*detJ*r13*wij/h + detJ*r11*wij*(N2x*(-B12*N4y - B16*N4x) + N2y*(-B26*N4y - B66*N4x)) + detJ*r12*wij*(N2x*(B11*N4x + B16*N4y) + N2y*(B16*N4x + B66*N4y))) + r32*(-0.5*A66*N2x*N4*alphat*detJ*r13*wij/h + detJ*r11*wij*(N2x*(-B26*N4y - B66*N4x) + N2y*(-B22*N4y - B26*N4x)) + detJ*r12*wij*(N2x*(B16*N4x + B66*N4y) + N2y*(B12*N4x + B26*N4y))) + r33*(detJ*r11*wij*(-E44*N2y*N4 - E45*N2x*N4) + detJ*r12*wij*(E45*N2y*N4 + E55*N2x*N4))
            k += 1
            KC0v[k] += A66*N2*N4*alphat*detJ*r13**2*wij/h + r11*(detJ*r11*wij*(E44*N2*N4 + Erx*gamma2*gamma4 - N2x*(-D26*N4y - D66*N4x) - N2y*(-D22*N4y - D26*N4x)) + detJ*r12*wij*(-E45*N2*N4 - N2x*(D16*N4x + D66*N4y) - N2y*(D12*N4x + D26*N4y))) + r12*(detJ*r11*wij*(-E45*N2*N4 + N2x*(-D12*N4y - D16*N4x) + N2y*(-D26*N4y - D66*N4x)) + detJ*r12*wij*(E55*N2*N4 + Ery*gamma2*gamma4 + N2x*(D11*N4x + D16*N4y) + N2y*(D16*N4x + D66*N4y)))
            k += 1
            KC0v[k] += A66*N2*N4*alphat*detJ*r13*r23*wij/h + r21*(detJ*r11*wij*(E44*N2*N4 + Erx*gamma2*gamma4 - N2x*(-D26*N4y - D66*N4x) - N2y*(-D22*N4y - D26*N4x)) + detJ*r12*wij*(-E45*N2*N4 - N2x*(D16*N4x + D66*N4y) - N2y*(D12*N4x + D26*N4y))) + r22*(detJ*r11*wij*(-E45*N2*N4 + N2x*(-D12*N4y - D16*N4x) + N2y*(-D26*N4y - D66*N4x)) + detJ*r12*wij*(E55*N2*N4 + Ery*gamma2*gamma4 + N2x*(D11*N4x + D16*N4y) + N2y*(D16*N4x + D66*N4y)))
            k += 1
            KC0v[k] += A66*N2*N4*alphat*detJ*r13*r33*wij/h + r31*(detJ*r11*wij*(E44*N2*N4 + Erx*gamma2*gamma4 - N2x*(-D26*N4y - D66*N4x) - N2y*(-D22*N4y - D26*N4x)) + detJ*r12*wij*(-E45*N2*N4 - N2x*(D16*N4x + D66*N4y) - N2y*(D12*N4x + D26*N4y))) + r32*(detJ*r11*wij*(-E45*N2*N4 + N2x*(-D12*N4y - D16*N4x) + N2y*(-D26*N4y - D66*N4x)) + detJ*r12*wij*(E55*N2*N4 + Ery*gamma2*gamma4 + N2x*(D11*N4x + D16*N4y) + N2y*(D16*N4x + D66*N4y)))
            k += 1
            KC0v[k] += r11*(0.5*A66*N3y*N4*alphat*detJ*r13*wij/h + detJ*r11*wij*(N3x*(-B12*N4y - B16*N4x) + N3y*(-B26*N4y - B66*N4x)) + detJ*r12*wij*(N3x*(B11*N4x + B16*N4y) + N3y*(B16*N4x + B66*N4y))) + r12*(-0.5*A66*N3x*N4*alphat*detJ*r13*wij/h + detJ*r11*wij*(N3x*(-B26*N4y - B66*N4x) + N3y*(-B22*N4y - B26*N4x)) + detJ*r12*wij*(N3x*(B16*N4x + B66*N4y) + N3y*(B12*N4x + B26*N4y))) + r13*(detJ*r11*wij*(-E44*N3y*N4 - E45*N3x*N4) + detJ*r12*wij*(E45*N3y*N4 + E55*N3x*N4))
            k += 1
            KC0v[k] += r21*(0.5*A66*N3y*N4*alphat*detJ*r13*wij/h + detJ*r11*wij*(N3x*(-B12*N4y - B16*N4x) + N3y*(-B26*N4y - B66*N4x)) + detJ*r12*wij*(N3x*(B11*N4x + B16*N4y) + N3y*(B16*N4x + B66*N4y))) + r22*(-0.5*A66*N3x*N4*alphat*detJ*r13*wij/h + detJ*r11*wij*(N3x*(-B26*N4y - B66*N4x) + N3y*(-B22*N4y - B26*N4x)) + detJ*r12*wij*(N3x*(B16*N4x + B66*N4y) + N3y*(B12*N4x + B26*N4y))) + r23*(detJ*r11*wij*(-E44*N3y*N4 - E45*N3x*N4) + detJ*r12*wij*(E45*N3y*N4 + E55*N3x*N4))
            k += 1
            KC0v[k] += r31*(0.5*A66*N3y*N4*alphat*detJ*r13*wij/h + detJ*r11*wij*(N3x*(-B12*N4y - B16*N4x) + N3y*(-B26*N4y - B66*N4x)) + detJ*r12*wij*(N3x*(B11*N4x + B16*N4y) + N3y*(B16*N4x + B66*N4y))) + r32*(-0.5*A66*N3x*N4*alphat*detJ*r13*wij/h + detJ*r11*wij*(N3x*(-B26*N4y - B66*N4x) + N3y*(-B22*N4y - B26*N4x)) + detJ*r12*wij*(N3x*(B16*N4x + B66*N4y) + N3y*(B12*N4x + B26*N4y))) + r33*(detJ*r11*wij*(-E44*N3y*N4 - E45*N3x*N4) + detJ*r12*wij*(E45*N3y*N4 + E55*N3x*N4))
            k += 1
            KC0v[k] += A66*N3*N4*alphat*detJ*r13**2*wij/h + r11*(detJ*r11*wij*(E44*N3*N4 + Erx*gamma3*gamma4 - N3x*(-D26*N4y - D66*N4x) - N3y*(-D22*N4y - D26*N4x)) + detJ*r12*wij*(-E45*N3*N4 - N3x*(D16*N4x + D66*N4y) - N3y*(D12*N4x + D26*N4y))) + r12*(detJ*r11*wij*(-E45*N3*N4 + N3x*(-D12*N4y - D16*N4x) + N3y*(-D26*N4y - D66*N4x)) + detJ*r12*wij*(E55*N3*N4 + Ery*gamma3*gamma4 + N3x*(D11*N4x + D16*N4y) + N3y*(D16*N4x + D66*N4y)))
            k += 1
            KC0v[k] += A66*N3*N4*alphat*detJ*r13*r23*wij/h + r21*(detJ*r11*wij*(E44*N3*N4 + Erx*gamma3*gamma4 - N3x*(-D26*N4y - D66*N4x) - N3y*(-D22*N4y - D26*N4x)) + detJ*r12*wij*(-E45*N3*N4 - N3x*(D16*N4x + D66*N4y) - N3y*(D12*N4x + D26*N4y))) + r22*(detJ*r11*wij*(-E45*N3*N4 + N3x*(-D12*N4y - D16*N4x) + N3y*(-D26*N4y - D66*N4x)) + detJ*r12*wij*(E55*N3*N4 + Ery*gamma3*gamma4 + N3x*(D11*N4x + D16*N4y) + N3y*(D16*N4x + D66*N4y)))
            k += 1
            KC0v[k] += A66*N3*N4*alphat*detJ*r13*r33*wij/h + r31*(detJ*r11*wij*(E44*N3*N4 + Erx*gamma3*gamma4 - N3x*(-D26*N4y - D66*N4x) - N3y*(-D22*N4y - D26*N4x)) + detJ*r12*wij*(-E45*N3*N4 - N3x*(D16*N4x + D66*N4y) - N3y*(D12*N4x + D26*N4y))) + r32*(detJ*r11*wij*(-E45*N3*N4 + N3x*(-D12*N4y - D16*N4x) + N3y*(-D26*N4y - D66*N4x)) + detJ*r12*wij*(E55*N3*N4 + Ery*gamma3*gamma4 + N3x*(D11*N4x + D16*N4y) + N3y*(D16*N4x + D66*N4y)))
            k += 1
            KC0v[k] += r11*(0.5*A66*N4*N4y*alphat*detJ*r13*wij/h + detJ*r11*wij*(N4x*(-B12*N4y - B16*N4x) + N4y*(-B26*N4y - B66*N4x)) + detJ*r12*wij*(N4x*(B11*N4x + B16*N4y) + N4y*(B16*N4x + B66*N4y))) + r12*(-0.5*A66*N4*N4x*alphat*detJ*r13*wij/h + detJ*r11*wij*(N4x*(-B26*N4y - B66*N4x) + N4y*(-B22*N4y - B26*N4x)) + detJ*r12*wij*(N4x*(B16*N4x + B66*N4y) + N4y*(B12*N4x + B26*N4y))) + r13*(detJ*r11*wij*(-E44*N4*N4y - E45*N4*N4x) + detJ*r12*wij*(E45*N4*N4y + E55*N4*N4x))
            k += 1
            KC0v[k] += r21*(0.5*A66*N4*N4y*alphat*detJ*r13*wij/h + detJ*r11*wij*(N4x*(-B12*N4y - B16*N4x) + N4y*(-B26*N4y - B66*N4x)) + detJ*r12*wij*(N4x*(B11*N4x + B16*N4y) + N4y*(B16*N4x + B66*N4y))) + r22*(-0.5*A66*N4*N4x*alphat*detJ*r13*wij/h + detJ*r11*wij*(N4x*(-B26*N4y - B66*N4x) + N4y*(-B22*N4y - B26*N4x)) + detJ*r12*wij*(N4x*(B16*N4x + B66*N4y) + N4y*(B12*N4x + B26*N4y))) + r23*(detJ*r11*wij*(-E44*N4*N4y - E45*N4*N4x) + detJ*r12*wij*(E45*N4*N4y + E55*N4*N4x))
            k += 1
            KC0v[k] += r31*(0.5*A66*N4*N4y*alphat*detJ*r13*wij/h + detJ*r11*wij*(N4x*(-B12*N4y - B16*N4x) + N4y*(-B26*N4y - B66*N4x)) + detJ*r12*wij*(N4x*(B11*N4x + B16*N4y) + N4y*(B16*N4x + B66*N4y))) + r32*(-0.5*A66*N4*N4x*alphat*detJ*r13*wij/h + detJ*r11*wij*(N4x*(-B26*N4y - B66*N4x) + N4y*(-B22*N4y - B26*N4x)) + detJ*r12*wij*(N4x*(B16*N4x + B66*N4y) + N4y*(B12*N4x + B26*N4y))) + r33*(detJ*r11*wij*(-E44*N4*N4y - E45*N4*N4x) + detJ*r12*wij*(E45*N4*N4y + E55*N4*N4x))
            k += 1
            KC0v[k] += A66*N4**2*alphat*detJ*r13**2*wij/h + r11*(detJ*r11*wij*(E44*N4**2 + Erx*gamma4**2 - N4x*(-D26*N4y - D66*N4x) - N4y*(-D22*N4y - D26*N4x)) + detJ*r12*wij*(-E45*N4**2 - N4x*(D16*N4x + D66*N4y) - N4y*(D12*N4x + D26*N4y))) + r12*(detJ*r11*wij*(-E45*N4**2 + N4x*(-D12*N4y - D16*N4x) + N4y*(-D26*N4y - D66*N4x)) + detJ*r12*wij*(E55*N4**2 + Ery*gamma4**2 + N4x*(D11*N4x + D16*N4y) + N4y*(D16*N4x + D66*N4y)))
            k += 1
            KC0v[k] += A66*N4**2*alphat*detJ*r13*r23*wij/h + r21*(detJ*r11*wij*(E44*N4**2 + Erx*gamma4**2 - N4x*(-D26*N4y - D66*N4x) - N4y*(-D22*N4y - D26*N4x)) + detJ*r12*wij*(-E45*N4**2 - N4x*(D16*N4x + D66*N4y) - N4y*(D12*N4x + D26*N4y))) + r22*(detJ*r11*wij*(-E45*N4**2 + N4x*(-D12*N4y - D16*N4x) + N4y*(-D26*N4y - D66*N4x)) + detJ*r12*wij*(E55*N4**2 + Ery*gamma4**2 + N4x*(D11*N4x + D16*N4y) + N4y*(D16*N4x + D66*N4y)))
            k += 1
            KC0v[k] += A66*N4**2*alphat*detJ*r13*r33*wij/h + r31*(detJ*r11*wij*(E44*N4**2 + Erx*gamma4**2 - N4x*(-D26*N4y - D66*N4x) - N4y*(-D22*N4y - D26*N4x)) + detJ*r12*wij*(-E45*N4**2 - N4x*(D16*N4x + D66*N4y) - N4y*(D12*N4x + D26*N4y))) + r32*(detJ*r11*wij*(-E45*N4**2 + N4x*(-D12*N4y - D16*N4x) + N4y*(-D26*N4y - D66*N4x)) + detJ*r12*wij*(E55*N4**2 + Ery*gamma4**2 + N4x*(D11*N4x + D16*N4y) + N4y*(D16*N4x + D66*N4y)))
            k += 1
            KC0v[k] += r11*(0.5*A66*N1y*N4*alphat*detJ*r23*wij/h + detJ*r21*wij*(N1x*(-B12*N4y - B16*N4x) + N1y*(-B26*N4y - B66*N4x)) + detJ*r22*wij*(N1x*(B11*N4x + B16*N4y) + N1y*(B16*N4x + B66*N4y))) + r12*(-0.5*A66*N1x*N4*alphat*detJ*r23*wij/h + detJ*r21*wij*(N1x*(-B26*N4y - B66*N4x) + N1y*(-B22*N4y - B26*N4x)) + detJ*r22*wij*(N1x*(B16*N4x + B66*N4y) + N1y*(B12*N4x + B26*N4y))) + r13*(detJ*r21*wij*(-E44*N1y*N4 - E45*N1x*N4) + detJ*r22*wij*(E45*N1y*N4 + E55*N1x*N4))
            k += 1
            KC0v[k] += r21*(0.5*A66*N1y*N4*alphat*detJ*r23*wij/h + detJ*r21*wij*(N1x*(-B12*N4y - B16*N4x) + N1y*(-B26*N4y - B66*N4x)) + detJ*r22*wij*(N1x*(B11*N4x + B16*N4y) + N1y*(B16*N4x + B66*N4y))) + r22*(-0.5*A66*N1x*N4*alphat*detJ*r23*wij/h + detJ*r21*wij*(N1x*(-B26*N4y - B66*N4x) + N1y*(-B22*N4y - B26*N4x)) + detJ*r22*wij*(N1x*(B16*N4x + B66*N4y) + N1y*(B12*N4x + B26*N4y))) + r23*(detJ*r21*wij*(-E44*N1y*N4 - E45*N1x*N4) + detJ*r22*wij*(E45*N1y*N4 + E55*N1x*N4))
            k += 1
            KC0v[k] += r31*(0.5*A66*N1y*N4*alphat*detJ*r23*wij/h + detJ*r21*wij*(N1x*(-B12*N4y - B16*N4x) + N1y*(-B26*N4y - B66*N4x)) + detJ*r22*wij*(N1x*(B11*N4x + B16*N4y) + N1y*(B16*N4x + B66*N4y))) + r32*(-0.5*A66*N1x*N4*alphat*detJ*r23*wij/h + detJ*r21*wij*(N1x*(-B26*N4y - B66*N4x) + N1y*(-B22*N4y - B26*N4x)) + detJ*r22*wij*(N1x*(B16*N4x + B66*N4y) + N1y*(B12*N4x + B26*N4y))) + r33*(detJ*r21*wij*(-E44*N1y*N4 - E45*N1x*N4) + detJ*r22*wij*(E45*N1y*N4 + E55*N1x*N4))
            k += 1
            KC0v[k] += A66*N1*N4*alphat*detJ*r13*r23*wij/h + r11*(detJ*r21*wij*(E44*N1*N4 + Erx*gamma1*gamma4 - N1x*(-D26*N4y - D66*N4x) - N1y*(-D22*N4y - D26*N4x)) + detJ*r22*wij*(-E45*N1*N4 - N1x*(D16*N4x + D66*N4y) - N1y*(D12*N4x + D26*N4y))) + r12*(detJ*r21*wij*(-E45*N1*N4 + N1x*(-D12*N4y - D16*N4x) + N1y*(-D26*N4y - D66*N4x)) + detJ*r22*wij*(E55*N1*N4 + Ery*gamma1*gamma4 + N1x*(D11*N4x + D16*N4y) + N1y*(D16*N4x + D66*N4y)))
            k += 1
            KC0v[k] += A66*N1*N4*alphat*detJ*r23**2*wij/h + r21*(detJ*r21*wij*(E44*N1*N4 + Erx*gamma1*gamma4 - N1x*(-D26*N4y - D66*N4x) - N1y*(-D22*N4y - D26*N4x)) + detJ*r22*wij*(-E45*N1*N4 - N1x*(D16*N4x + D66*N4y) - N1y*(D12*N4x + D26*N4y))) + r22*(detJ*r21*wij*(-E45*N1*N4 + N1x*(-D12*N4y - D16*N4x) + N1y*(-D26*N4y - D66*N4x)) + detJ*r22*wij*(E55*N1*N4 + Ery*gamma1*gamma4 + N1x*(D11*N4x + D16*N4y) + N1y*(D16*N4x + D66*N4y)))
            k += 1
            KC0v[k] += A66*N1*N4*alphat*detJ*r23*r33*wij/h + r31*(detJ*r21*wij*(E44*N1*N4 + Erx*gamma1*gamma4 - N1x*(-D26*N4y - D66*N4x) - N1y*(-D22*N4y - D26*N4x)) + detJ*r22*wij*(-E45*N1*N4 - N1x*(D16*N4x + D66*N4y) - N1y*(D12*N4x + D26*N4y))) + r32*(detJ*r21*wij*(-E45*N1*N4 + N1x*(-D12*N4y - D16*N4x) + N1y*(-D26*N4y - D66*N4x)) + detJ*r22*wij*(E55*N1*N4 + Ery*gamma1*gamma4 + N1x*(D11*N4x + D16*N4y) + N1y*(D16*N4x + D66*N4y)))
            k += 1
            KC0v[k] += r11*(0.5*A66*N2y*N4*alphat*detJ*r23*wij/h + detJ*r21*wij*(N2x*(-B12*N4y - B16*N4x) + N2y*(-B26*N4y - B66*N4x)) + detJ*r22*wij*(N2x*(B11*N4x + B16*N4y) + N2y*(B16*N4x + B66*N4y))) + r12*(-0.5*A66*N2x*N4*alphat*detJ*r23*wij/h + detJ*r21*wij*(N2x*(-B26*N4y - B66*N4x) + N2y*(-B22*N4y - B26*N4x)) + detJ*r22*wij*(N2x*(B16*N4x + B66*N4y) + N2y*(B12*N4x + B26*N4y))) + r13*(detJ*r21*wij*(-E44*N2y*N4 - E45*N2x*N4) + detJ*r22*wij*(E45*N2y*N4 + E55*N2x*N4))
            k += 1
            KC0v[k] += r21*(0.5*A66*N2y*N4*alphat*detJ*r23*wij/h + detJ*r21*wij*(N2x*(-B12*N4y - B16*N4x) + N2y*(-B26*N4y - B66*N4x)) + detJ*r22*wij*(N2x*(B11*N4x + B16*N4y) + N2y*(B16*N4x + B66*N4y))) + r22*(-0.5*A66*N2x*N4*alphat*detJ*r23*wij/h + detJ*r21*wij*(N2x*(-B26*N4y - B66*N4x) + N2y*(-B22*N4y - B26*N4x)) + detJ*r22*wij*(N2x*(B16*N4x + B66*N4y) + N2y*(B12*N4x + B26*N4y))) + r23*(detJ*r21*wij*(-E44*N2y*N4 - E45*N2x*N4) + detJ*r22*wij*(E45*N2y*N4 + E55*N2x*N4))
            k += 1
            KC0v[k] += r31*(0.5*A66*N2y*N4*alphat*detJ*r23*wij/h + detJ*r21*wij*(N2x*(-B12*N4y - B16*N4x) + N2y*(-B26*N4y - B66*N4x)) + detJ*r22*wij*(N2x*(B11*N4x + B16*N4y) + N2y*(B16*N4x + B66*N4y))) + r32*(-0.5*A66*N2x*N4*alphat*detJ*r23*wij/h + detJ*r21*wij*(N2x*(-B26*N4y - B66*N4x) + N2y*(-B22*N4y - B26*N4x)) + detJ*r22*wij*(N2x*(B16*N4x + B66*N4y) + N2y*(B12*N4x + B26*N4y))) + r33*(detJ*r21*wij*(-E44*N2y*N4 - E45*N2x*N4) + detJ*r22*wij*(E45*N2y*N4 + E55*N2x*N4))
            k += 1
            KC0v[k] += A66*N2*N4*alphat*detJ*r13*r23*wij/h + r11*(detJ*r21*wij*(E44*N2*N4 + Erx*gamma2*gamma4 - N2x*(-D26*N4y - D66*N4x) - N2y*(-D22*N4y - D26*N4x)) + detJ*r22*wij*(-E45*N2*N4 - N2x*(D16*N4x + D66*N4y) - N2y*(D12*N4x + D26*N4y))) + r12*(detJ*r21*wij*(-E45*N2*N4 + N2x*(-D12*N4y - D16*N4x) + N2y*(-D26*N4y - D66*N4x)) + detJ*r22*wij*(E55*N2*N4 + Ery*gamma2*gamma4 + N2x*(D11*N4x + D16*N4y) + N2y*(D16*N4x + D66*N4y)))
            k += 1
            KC0v[k] += A66*N2*N4*alphat*detJ*r23**2*wij/h + r21*(detJ*r21*wij*(E44*N2*N4 + Erx*gamma2*gamma4 - N2x*(-D26*N4y - D66*N4x) - N2y*(-D22*N4y - D26*N4x)) + detJ*r22*wij*(-E45*N2*N4 - N2x*(D16*N4x + D66*N4y) - N2y*(D12*N4x + D26*N4y))) + r22*(detJ*r21*wij*(-E45*N2*N4 + N2x*(-D12*N4y - D16*N4x) + N2y*(-D26*N4y - D66*N4x)) + detJ*r22*wij*(E55*N2*N4 + Ery*gamma2*gamma4 + N2x*(D11*N4x + D16*N4y) + N2y*(D16*N4x + D66*N4y)))
            k += 1
            KC0v[k] += A66*N2*N4*alphat*detJ*r23*r33*wij/h + r31*(detJ*r21*wij*(E44*N2*N4 + Erx*gamma2*gamma4 - N2x*(-D26*N4y - D66*N4x) - N2y*(-D22*N4y - D26*N4x)) + detJ*r22*wij*(-E45*N2*N4 - N2x*(D16*N4x + D66*N4y) - N2y*(D12*N4x + D26*N4y))) + r32*(detJ*r21*wij*(-E45*N2*N4 + N2x*(-D12*N4y - D16*N4x) + N2y*(-D26*N4y - D66*N4x)) + detJ*r22*wij*(E55*N2*N4 + Ery*gamma2*gamma4 + N2x*(D11*N4x + D16*N4y) + N2y*(D16*N4x + D66*N4y)))
            k += 1
            KC0v[k] += r11*(0.5*A66*N3y*N4*alphat*detJ*r23*wij/h + detJ*r21*wij*(N3x*(-B12*N4y - B16*N4x) + N3y*(-B26*N4y - B66*N4x)) + detJ*r22*wij*(N3x*(B11*N4x + B16*N4y) + N3y*(B16*N4x + B66*N4y))) + r12*(-0.5*A66*N3x*N4*alphat*detJ*r23*wij/h + detJ*r21*wij*(N3x*(-B26*N4y - B66*N4x) + N3y*(-B22*N4y - B26*N4x)) + detJ*r22*wij*(N3x*(B16*N4x + B66*N4y) + N3y*(B12*N4x + B26*N4y))) + r13*(detJ*r21*wij*(-E44*N3y*N4 - E45*N3x*N4) + detJ*r22*wij*(E45*N3y*N4 + E55*N3x*N4))
            k += 1
            KC0v[k] += r21*(0.5*A66*N3y*N4*alphat*detJ*r23*wij/h + detJ*r21*wij*(N3x*(-B12*N4y - B16*N4x) + N3y*(-B26*N4y - B66*N4x)) + detJ*r22*wij*(N3x*(B11*N4x + B16*N4y) + N3y*(B16*N4x + B66*N4y))) + r22*(-0.5*A66*N3x*N4*alphat*detJ*r23*wij/h + detJ*r21*wij*(N3x*(-B26*N4y - B66*N4x) + N3y*(-B22*N4y - B26*N4x)) + detJ*r22*wij*(N3x*(B16*N4x + B66*N4y) + N3y*(B12*N4x + B26*N4y))) + r23*(detJ*r21*wij*(-E44*N3y*N4 - E45*N3x*N4) + detJ*r22*wij*(E45*N3y*N4 + E55*N3x*N4))
            k += 1
            KC0v[k] += r31*(0.5*A66*N3y*N4*alphat*detJ*r23*wij/h + detJ*r21*wij*(N3x*(-B12*N4y - B16*N4x) + N3y*(-B26*N4y - B66*N4x)) + detJ*r22*wij*(N3x*(B11*N4x + B16*N4y) + N3y*(B16*N4x + B66*N4y))) + r32*(-0.5*A66*N3x*N4*alphat*detJ*r23*wij/h + detJ*r21*wij*(N3x*(-B26*N4y - B66*N4x) + N3y*(-B22*N4y - B26*N4x)) + detJ*r22*wij*(N3x*(B16*N4x + B66*N4y) + N3y*(B12*N4x + B26*N4y))) + r33*(detJ*r21*wij*(-E44*N3y*N4 - E45*N3x*N4) + detJ*r22*wij*(E45*N3y*N4 + E55*N3x*N4))
            k += 1
            KC0v[k] += A66*N3*N4*alphat*detJ*r13*r23*wij/h + r11*(detJ*r21*wij*(E44*N3*N4 + Erx*gamma3*gamma4 - N3x*(-D26*N4y - D66*N4x) - N3y*(-D22*N4y - D26*N4x)) + detJ*r22*wij*(-E45*N3*N4 - N3x*(D16*N4x + D66*N4y) - N3y*(D12*N4x + D26*N4y))) + r12*(detJ*r21*wij*(-E45*N3*N4 + N3x*(-D12*N4y - D16*N4x) + N3y*(-D26*N4y - D66*N4x)) + detJ*r22*wij*(E55*N3*N4 + Ery*gamma3*gamma4 + N3x*(D11*N4x + D16*N4y) + N3y*(D16*N4x + D66*N4y)))
            k += 1
            KC0v[k] += A66*N3*N4*alphat*detJ*r23**2*wij/h + r21*(detJ*r21*wij*(E44*N3*N4 + Erx*gamma3*gamma4 - N3x*(-D26*N4y - D66*N4x) - N3y*(-D22*N4y - D26*N4x)) + detJ*r22*wij*(-E45*N3*N4 - N3x*(D16*N4x + D66*N4y) - N3y*(D12*N4x + D26*N4y))) + r22*(detJ*r21*wij*(-E45*N3*N4 + N3x*(-D12*N4y - D16*N4x) + N3y*(-D26*N4y - D66*N4x)) + detJ*r22*wij*(E55*N3*N4 + Ery*gamma3*gamma4 + N3x*(D11*N4x + D16*N4y) + N3y*(D16*N4x + D66*N4y)))
            k += 1
            KC0v[k] += A66*N3*N4*alphat*detJ*r23*r33*wij/h + r31*(detJ*r21*wij*(E44*N3*N4 + Erx*gamma3*gamma4 - N3x*(-D26*N4y - D66*N4x) - N3y*(-D22*N4y - D26*N4x)) + detJ*r22*wij*(-E45*N3*N4 - N3x*(D16*N4x + D66*N4y) - N3y*(D12*N4x + D26*N4y))) + r32*(detJ*r21*wij*(-E45*N3*N4 + N3x*(-D12*N4y - D16*N4x) + N3y*(-D26*N4y - D66*N4x)) + detJ*r22*wij*(E55*N3*N4 + Ery*gamma3*gamma4 + N3x*(D11*N4x + D16*N4y) + N3y*(D16*N4x + D66*N4y)))
            k += 1
            KC0v[k] += r11*(0.5*A66*N4*N4y*alphat*detJ*r23*wij/h + detJ*r21*wij*(N4x*(-B12*N4y - B16*N4x) + N4y*(-B26*N4y - B66*N4x)) + detJ*r22*wij*(N4x*(B11*N4x + B16*N4y) + N4y*(B16*N4x + B66*N4y))) + r12*(-0.5*A66*N4*N4x*alphat*detJ*r23*wij/h + detJ*r21*wij*(N4x*(-B26*N4y - B66*N4x) + N4y*(-B22*N4y - B26*N4x)) + detJ*r22*wij*(N4x*(B16*N4x + B66*N4y) + N4y*(B12*N4x + B26*N4y))) + r13*(detJ*r21*wij*(-E44*N4*N4y - E45*N4*N4x) + detJ*r22*wij*(E45*N4*N4y + E55*N4*N4x))
            k += 1
            KC0v[k] += r21*(0.5*A66*N4*N4y*alphat*detJ*r23*wij/h + detJ*r21*wij*(N4x*(-B12*N4y - B16*N4x) + N4y*(-B26*N4y - B66*N4x)) + detJ*r22*wij*(N4x*(B11*N4x + B16*N4y) + N4y*(B16*N4x + B66*N4y))) + r22*(-0.5*A66*N4*N4x*alphat*detJ*r23*wij/h + detJ*r21*wij*(N4x*(-B26*N4y - B66*N4x) + N4y*(-B22*N4y - B26*N4x)) + detJ*r22*wij*(N4x*(B16*N4x + B66*N4y) + N4y*(B12*N4x + B26*N4y))) + r23*(detJ*r21*wij*(-E44*N4*N4y - E45*N4*N4x) + detJ*r22*wij*(E45*N4*N4y + E55*N4*N4x))
            k += 1
            KC0v[k] += r31*(0.5*A66*N4*N4y*alphat*detJ*r23*wij/h + detJ*r21*wij*(N4x*(-B12*N4y - B16*N4x) + N4y*(-B26*N4y - B66*N4x)) + detJ*r22*wij*(N4x*(B11*N4x + B16*N4y) + N4y*(B16*N4x + B66*N4y))) + r32*(-0.5*A66*N4*N4x*alphat*detJ*r23*wij/h + detJ*r21*wij*(N4x*(-B26*N4y - B66*N4x) + N4y*(-B22*N4y - B26*N4x)) + detJ*r22*wij*(N4x*(B16*N4x + B66*N4y) + N4y*(B12*N4x + B26*N4y))) + r33*(detJ*r21*wij*(-E44*N4*N4y - E45*N4*N4x) + detJ*r22*wij*(E45*N4*N4y + E55*N4*N4x))
            k += 1
            KC0v[k] += A66*N4**2*alphat*detJ*r13*r23*wij/h + r11*(detJ*r21*wij*(E44*N4**2 + Erx*gamma4**2 - N4x*(-D26*N4y - D66*N4x) - N4y*(-D22*N4y - D26*N4x)) + detJ*r22*wij*(-E45*N4**2 - N4x*(D16*N4x + D66*N4y) - N4y*(D12*N4x + D26*N4y))) + r12*(detJ*r21*wij*(-E45*N4**2 + N4x*(-D12*N4y - D16*N4x) + N4y*(-D26*N4y - D66*N4x)) + detJ*r22*wij*(E55*N4**2 + Ery*gamma4**2 + N4x*(D11*N4x + D16*N4y) + N4y*(D16*N4x + D66*N4y)))
            k += 1
            KC0v[k] += A66*N4**2*alphat*detJ*r23**2*wij/h + r21*(detJ*r21*wij*(E44*N4**2 + Erx*gamma4**2 - N4x*(-D26*N4y - D66*N4x) - N4y*(-D22*N4y - D26*N4x)) + detJ*r22*wij*(-E45*N4**2 - N4x*(D16*N4x + D66*N4y) - N4y*(D12*N4x + D26*N4y))) + r22*(detJ*r21*wij*(-E45*N4**2 + N4x*(-D12*N4y - D16*N4x) + N4y*(-D26*N4y - D66*N4x)) + detJ*r22*wij*(E55*N4**2 + Ery*gamma4**2 + N4x*(D11*N4x + D16*N4y) + N4y*(D16*N4x + D66*N4y)))
            k += 1
            KC0v[k] += A66*N4**2*alphat*detJ*r23*r33*wij/h + r31*(detJ*r21*wij*(E44*N4**2 + Erx*gamma4**2 - N4x*(-D26*N4y - D66*N4x) - N4y*(-D22*N4y - D26*N4x)) + detJ*r22*wij*(-E45*N4**2 - N4x*(D16*N4x + D66*N4y) - N4y*(D12*N4x + D26*N4y))) + r32*(detJ*r21*wij*(-E45*N4**2 + N4x*(-D12*N4y - D16*N4x) + N4y*(-D26*N4y - D66*N4x)) + detJ*r22*wij*(E55*N4**2 + Ery*gamma4**2 + N4x*(D11*N4x + D16*N4y) + N4y*(D16*N4x + D66*N4y)))
            k += 1
            KC0v[k] += r11*(0.5*A66*N1y*N4*alphat*detJ*r33*wij/h + detJ*r31*wij*(N1x*(-B12*N4y - B16*N4x) + N1y*(-B26*N4y - B66*N4x)) + detJ*r32*wij*(N1x*(B11*N4x + B16*N4y) + N1y*(B16*N4x + B66*N4y))) + r12*(-0.5*A66*N1x*N4*alphat*detJ*r33*wij/h + detJ*r31*wij*(N1x*(-B26*N4y - B66*N4x) + N1y*(-B22*N4y - B26*N4x)) + detJ*r32*wij*(N1x*(B16*N4x + B66*N4y) + N1y*(B12*N4x + B26*N4y))) + r13*(detJ*r31*wij*(-E44*N1y*N4 - E45*N1x*N4) + detJ*r32*wij*(E45*N1y*N4 + E55*N1x*N4))
            k += 1
            KC0v[k] += r21*(0.5*A66*N1y*N4*alphat*detJ*r33*wij/h + detJ*r31*wij*(N1x*(-B12*N4y - B16*N4x) + N1y*(-B26*N4y - B66*N4x)) + detJ*r32*wij*(N1x*(B11*N4x + B16*N4y) + N1y*(B16*N4x + B66*N4y))) + r22*(-0.5*A66*N1x*N4*alphat*detJ*r33*wij/h + detJ*r31*wij*(N1x*(-B26*N4y - B66*N4x) + N1y*(-B22*N4y - B26*N4x)) + detJ*r32*wij*(N1x*(B16*N4x + B66*N4y) + N1y*(B12*N4x + B26*N4y))) + r23*(detJ*r31*wij*(-E44*N1y*N4 - E45*N1x*N4) + detJ*r32*wij*(E45*N1y*N4 + E55*N1x*N4))
            k += 1
            KC0v[k] += r31*(0.5*A66*N1y*N4*alphat*detJ*r33*wij/h + detJ*r31*wij*(N1x*(-B12*N4y - B16*N4x) + N1y*(-B26*N4y - B66*N4x)) + detJ*r32*wij*(N1x*(B11*N4x + B16*N4y) + N1y*(B16*N4x + B66*N4y))) + r32*(-0.5*A66*N1x*N4*alphat*detJ*r33*wij/h + detJ*r31*wij*(N1x*(-B26*N4y - B66*N4x) + N1y*(-B22*N4y - B26*N4x)) + detJ*r32*wij*(N1x*(B16*N4x + B66*N4y) + N1y*(B12*N4x + B26*N4y))) + r33*(detJ*r31*wij*(-E44*N1y*N4 - E45*N1x*N4) + detJ*r32*wij*(E45*N1y*N4 + E55*N1x*N4))
            k += 1
            KC0v[k] += A66*N1*N4*alphat*detJ*r13*r33*wij/h + r11*(detJ*r31*wij*(E44*N1*N4 + Erx*gamma1*gamma4 - N1x*(-D26*N4y - D66*N4x) - N1y*(-D22*N4y - D26*N4x)) + detJ*r32*wij*(-E45*N1*N4 - N1x*(D16*N4x + D66*N4y) - N1y*(D12*N4x + D26*N4y))) + r12*(detJ*r31*wij*(-E45*N1*N4 + N1x*(-D12*N4y - D16*N4x) + N1y*(-D26*N4y - D66*N4x)) + detJ*r32*wij*(E55*N1*N4 + Ery*gamma1*gamma4 + N1x*(D11*N4x + D16*N4y) + N1y*(D16*N4x + D66*N4y)))
            k += 1
            KC0v[k] += A66*N1*N4*alphat*detJ*r23*r33*wij/h + r21*(detJ*r31*wij*(E44*N1*N4 + Erx*gamma1*gamma4 - N1x*(-D26*N4y - D66*N4x) - N1y*(-D22*N4y - D26*N4x)) + detJ*r32*wij*(-E45*N1*N4 - N1x*(D16*N4x + D66*N4y) - N1y*(D12*N4x + D26*N4y))) + r22*(detJ*r31*wij*(-E45*N1*N4 + N1x*(-D12*N4y - D16*N4x) + N1y*(-D26*N4y - D66*N4x)) + detJ*r32*wij*(E55*N1*N4 + Ery*gamma1*gamma4 + N1x*(D11*N4x + D16*N4y) + N1y*(D16*N4x + D66*N4y)))
            k += 1
            KC0v[k] += A66*N1*N4*alphat*detJ*r33**2*wij/h + r31*(detJ*r31*wij*(E44*N1*N4 + Erx*gamma1*gamma4 - N1x*(-D26*N4y - D66*N4x) - N1y*(-D22*N4y - D26*N4x)) + detJ*r32*wij*(-E45*N1*N4 - N1x*(D16*N4x + D66*N4y) - N1y*(D12*N4x + D26*N4y))) + r32*(detJ*r31*wij*(-E45*N1*N4 + N1x*(-D12*N4y - D16*N4x) + N1y*(-D26*N4y - D66*N4x)) + detJ*r32*wij*(E55*N1*N4 + Ery*gamma1*gamma4 + N1x*(D11*N4x + D16*N4y) + N1y*(D16*N4x + D66*N4y)))
            k += 1
            KC0v[k] += r11*(0.5*A66*N2y*N4*alphat*detJ*r33*wij/h + detJ*r31*wij*(N2x*(-B12*N4y - B16*N4x) + N2y*(-B26*N4y - B66*N4x)) + detJ*r32*wij*(N2x*(B11*N4x + B16*N4y) + N2y*(B16*N4x + B66*N4y))) + r12*(-0.5*A66*N2x*N4*alphat*detJ*r33*wij/h + detJ*r31*wij*(N2x*(-B26*N4y - B66*N4x) + N2y*(-B22*N4y - B26*N4x)) + detJ*r32*wij*(N2x*(B16*N4x + B66*N4y) + N2y*(B12*N4x + B26*N4y))) + r13*(detJ*r31*wij*(-E44*N2y*N4 - E45*N2x*N4) + detJ*r32*wij*(E45*N2y*N4 + E55*N2x*N4))
            k += 1
            KC0v[k] += r21*(0.5*A66*N2y*N4*alphat*detJ*r33*wij/h + detJ*r31*wij*(N2x*(-B12*N4y - B16*N4x) + N2y*(-B26*N4y - B66*N4x)) + detJ*r32*wij*(N2x*(B11*N4x + B16*N4y) + N2y*(B16*N4x + B66*N4y))) + r22*(-0.5*A66*N2x*N4*alphat*detJ*r33*wij/h + detJ*r31*wij*(N2x*(-B26*N4y - B66*N4x) + N2y*(-B22*N4y - B26*N4x)) + detJ*r32*wij*(N2x*(B16*N4x + B66*N4y) + N2y*(B12*N4x + B26*N4y))) + r23*(detJ*r31*wij*(-E44*N2y*N4 - E45*N2x*N4) + detJ*r32*wij*(E45*N2y*N4 + E55*N2x*N4))
            k += 1
            KC0v[k] += r31*(0.5*A66*N2y*N4*alphat*detJ*r33*wij/h + detJ*r31*wij*(N2x*(-B12*N4y - B16*N4x) + N2y*(-B26*N4y - B66*N4x)) + detJ*r32*wij*(N2x*(B11*N4x + B16*N4y) + N2y*(B16*N4x + B66*N4y))) + r32*(-0.5*A66*N2x*N4*alphat*detJ*r33*wij/h + detJ*r31*wij*(N2x*(-B26*N4y - B66*N4x) + N2y*(-B22*N4y - B26*N4x)) + detJ*r32*wij*(N2x*(B16*N4x + B66*N4y) + N2y*(B12*N4x + B26*N4y))) + r33*(detJ*r31*wij*(-E44*N2y*N4 - E45*N2x*N4) + detJ*r32*wij*(E45*N2y*N4 + E55*N2x*N4))
            k += 1
            KC0v[k] += A66*N2*N4*alphat*detJ*r13*r33*wij/h + r11*(detJ*r31*wij*(E44*N2*N4 + Erx*gamma2*gamma4 - N2x*(-D26*N4y - D66*N4x) - N2y*(-D22*N4y - D26*N4x)) + detJ*r32*wij*(-E45*N2*N4 - N2x*(D16*N4x + D66*N4y) - N2y*(D12*N4x + D26*N4y))) + r12*(detJ*r31*wij*(-E45*N2*N4 + N2x*(-D12*N4y - D16*N4x) + N2y*(-D26*N4y - D66*N4x)) + detJ*r32*wij*(E55*N2*N4 + Ery*gamma2*gamma4 + N2x*(D11*N4x + D16*N4y) + N2y*(D16*N4x + D66*N4y)))
            k += 1
            KC0v[k] += A66*N2*N4*alphat*detJ*r23*r33*wij/h + r21*(detJ*r31*wij*(E44*N2*N4 + Erx*gamma2*gamma4 - N2x*(-D26*N4y - D66*N4x) - N2y*(-D22*N4y - D26*N4x)) + detJ*r32*wij*(-E45*N2*N4 - N2x*(D16*N4x + D66*N4y) - N2y*(D12*N4x + D26*N4y))) + r22*(detJ*r31*wij*(-E45*N2*N4 + N2x*(-D12*N4y - D16*N4x) + N2y*(-D26*N4y - D66*N4x)) + detJ*r32*wij*(E55*N2*N4 + Ery*gamma2*gamma4 + N2x*(D11*N4x + D16*N4y) + N2y*(D16*N4x + D66*N4y)))
            k += 1
            KC0v[k] += A66*N2*N4*alphat*detJ*r33**2*wij/h + r31*(detJ*r31*wij*(E44*N2*N4 + Erx*gamma2*gamma4 - N2x*(-D26*N4y - D66*N4x) - N2y*(-D22*N4y - D26*N4x)) + detJ*r32*wij*(-E45*N2*N4 - N2x*(D16*N4x + D66*N4y) - N2y*(D12*N4x + D26*N4y))) + r32*(detJ*r31*wij*(-E45*N2*N4 + N2x*(-D12*N4y - D16*N4x) + N2y*(-D26*N4y - D66*N4x)) + detJ*r32*wij*(E55*N2*N4 + Ery*gamma2*gamma4 + N2x*(D11*N4x + D16*N4y) + N2y*(D16*N4x + D66*N4y)))
            k += 1
            KC0v[k] += r11*(0.5*A66*N3y*N4*alphat*detJ*r33*wij/h + detJ*r31*wij*(N3x*(-B12*N4y - B16*N4x) + N3y*(-B26*N4y - B66*N4x)) + detJ*r32*wij*(N3x*(B11*N4x + B16*N4y) + N3y*(B16*N4x + B66*N4y))) + r12*(-0.5*A66*N3x*N4*alphat*detJ*r33*wij/h + detJ*r31*wij*(N3x*(-B26*N4y - B66*N4x) + N3y*(-B22*N4y - B26*N4x)) + detJ*r32*wij*(N3x*(B16*N4x + B66*N4y) + N3y*(B12*N4x + B26*N4y))) + r13*(detJ*r31*wij*(-E44*N3y*N4 - E45*N3x*N4) + detJ*r32*wij*(E45*N3y*N4 + E55*N3x*N4))
            k += 1
            KC0v[k] += r21*(0.5*A66*N3y*N4*alphat*detJ*r33*wij/h + detJ*r31*wij*(N3x*(-B12*N4y - B16*N4x) + N3y*(-B26*N4y - B66*N4x)) + detJ*r32*wij*(N3x*(B11*N4x + B16*N4y) + N3y*(B16*N4x + B66*N4y))) + r22*(-0.5*A66*N3x*N4*alphat*detJ*r33*wij/h + detJ*r31*wij*(N3x*(-B26*N4y - B66*N4x) + N3y*(-B22*N4y - B26*N4x)) + detJ*r32*wij*(N3x*(B16*N4x + B66*N4y) + N3y*(B12*N4x + B26*N4y))) + r23*(detJ*r31*wij*(-E44*N3y*N4 - E45*N3x*N4) + detJ*r32*wij*(E45*N3y*N4 + E55*N3x*N4))
            k += 1
            KC0v[k] += r31*(0.5*A66*N3y*N4*alphat*detJ*r33*wij/h + detJ*r31*wij*(N3x*(-B12*N4y - B16*N4x) + N3y*(-B26*N4y - B66*N4x)) + detJ*r32*wij*(N3x*(B11*N4x + B16*N4y) + N3y*(B16*N4x + B66*N4y))) + r32*(-0.5*A66*N3x*N4*alphat*detJ*r33*wij/h + detJ*r31*wij*(N3x*(-B26*N4y - B66*N4x) + N3y*(-B22*N4y - B26*N4x)) + detJ*r32*wij*(N3x*(B16*N4x + B66*N4y) + N3y*(B12*N4x + B26*N4y))) + r33*(detJ*r31*wij*(-E44*N3y*N4 - E45*N3x*N4) + detJ*r32*wij*(E45*N3y*N4 + E55*N3x*N4))
            k += 1
            KC0v[k] += A66*N3*N4*alphat*detJ*r13*r33*wij/h + r11*(detJ*r31*wij*(E44*N3*N4 + Erx*gamma3*gamma4 - N3x*(-D26*N4y - D66*N4x) - N3y*(-D22*N4y - D26*N4x)) + detJ*r32*wij*(-E45*N3*N4 - N3x*(D16*N4x + D66*N4y) - N3y*(D12*N4x + D26*N4y))) + r12*(detJ*r31*wij*(-E45*N3*N4 + N3x*(-D12*N4y - D16*N4x) + N3y*(-D26*N4y - D66*N4x)) + detJ*r32*wij*(E55*N3*N4 + Ery*gamma3*gamma4 + N3x*(D11*N4x + D16*N4y) + N3y*(D16*N4x + D66*N4y)))
            k += 1
            KC0v[k] += A66*N3*N4*alphat*detJ*r23*r33*wij/h + r21*(detJ*r31*wij*(E44*N3*N4 + Erx*gamma3*gamma4 - N3x*(-D26*N4y - D66*N4x) - N3y*(-D22*N4y - D26*N4x)) + detJ*r32*wij*(-E45*N3*N4 - N3x*(D16*N4x + D66*N4y) - N3y*(D12*N4x + D26*N4y))) + r22*(detJ*r31*wij*(-E45*N3*N4 + N3x*(-D12*N4y - D16*N4x) + N3y*(-D26*N4y - D66*N4x)) + detJ*r32*wij*(E55*N3*N4 + Ery*gamma3*gamma4 + N3x*(D11*N4x + D16*N4y) + N3y*(D16*N4x + D66*N4y)))
            k += 1
            KC0v[k] += A66*N3*N4*alphat*detJ*r33**2*wij/h + r31*(detJ*r31*wij*(E44*N3*N4 + Erx*gamma3*gamma4 - N3x*(-D26*N4y - D66*N4x) - N3y*(-D22*N4y - D26*N4x)) + detJ*r32*wij*(-E45*N3*N4 - N3x*(D16*N4x + D66*N4y) - N3y*(D12*N4x + D26*N4y))) + r32*(detJ*r31*wij*(-E45*N3*N4 + N3x*(-D12*N4y - D16*N4x) + N3y*(-D26*N4y - D66*N4x)) + detJ*r32*wij*(E55*N3*N4 + Ery*gamma3*gamma4 + N3x*(D11*N4x + D16*N4y) + N3y*(D16*N4x + D66*N4y)))
            k += 1
            KC0v[k] += r11*(0.5*A66*N4*N4y*alphat*detJ*r33*wij/h + detJ*r31*wij*(N4x*(-B12*N4y - B16*N4x) + N4y*(-B26*N4y - B66*N4x)) + detJ*r32*wij*(N4x*(B11*N4x + B16*N4y) + N4y*(B16*N4x + B66*N4y))) + r12*(-0.5*A66*N4*N4x*alphat*detJ*r33*wij/h + detJ*r31*wij*(N4x*(-B26*N4y - B66*N4x) + N4y*(-B22*N4y - B26*N4x)) + detJ*r32*wij*(N4x*(B16*N4x + B66*N4y) + N4y*(B12*N4x + B26*N4y))) + r13*(detJ*r31*wij*(-E44*N4*N4y - E45*N4*N4x) + detJ*r32*wij*(E45*N4*N4y + E55*N4*N4x))
            k += 1
            KC0v[k] += r21*(0.5*A66*N4*N4y*alphat*detJ*r33*wij/h + detJ*r31*wij*(N4x*(-B12*N4y - B16*N4x) + N4y*(-B26*N4y - B66*N4x)) + detJ*r32*wij*(N4x*(B11*N4x + B16*N4y) + N4y*(B16*N4x + B66*N4y))) + r22*(-0.5*A66*N4*N4x*alphat*detJ*r33*wij/h + detJ*r31*wij*(N4x*(-B26*N4y - B66*N4x) + N4y*(-B22*N4y - B26*N4x)) + detJ*r32*wij*(N4x*(B16*N4x + B66*N4y) + N4y*(B12*N4x + B26*N4y))) + r23*(detJ*r31*wij*(-E44*N4*N4y - E45*N4*N4x) + detJ*r32*wij*(E45*N4*N4y + E55*N4*N4x))
            k += 1
            KC0v[k] += r31*(0.5*A66*N4*N4y*alphat*detJ*r33*wij/h + detJ*r31*wij*(N4x*(-B12*N4y - B16*N4x) + N4y*(-B26*N4y - B66*N4x)) + detJ*r32*wij*(N4x*(B11*N4x + B16*N4y) + N4y*(B16*N4x + B66*N4y))) + r32*(-0.5*A66*N4*N4x*alphat*detJ*r33*wij/h + detJ*r31*wij*(N4x*(-B26*N4y - B66*N4x) + N4y*(-B22*N4y - B26*N4x)) + detJ*r32*wij*(N4x*(B16*N4x + B66*N4y) + N4y*(B12*N4x + B26*N4y))) + r33*(detJ*r31*wij*(-E44*N4*N4y - E45*N4*N4x) + detJ*r32*wij*(E45*N4*N4y + E55*N4*N4x))
            k += 1
            KC0v[k] += A66*N4**2*alphat*detJ*r13*r33*wij/h + r11*(detJ*r31*wij*(E44*N4**2 + Erx*gamma4**2 - N4x*(-D26*N4y - D66*N4x) - N4y*(-D22*N4y - D26*N4x)) + detJ*r32*wij*(-E45*N4**2 - N4x*(D16*N4x + D66*N4y) - N4y*(D12*N4x + D26*N4y))) + r12*(detJ*r31*wij*(-E45*N4**2 + N4x*(-D12*N4y - D16*N4x) + N4y*(-D26*N4y - D66*N4x)) + detJ*r32*wij*(E55*N4**2 + Ery*gamma4**2 + N4x*(D11*N4x + D16*N4y) + N4y*(D16*N4x + D66*N4y)))
            k += 1
            KC0v[k] += A66*N4**2*alphat*detJ*r23*r33*wij/h + r21*(detJ*r31*wij*(E44*N4**2 + Erx*gamma4**2 - N4x*(-D26*N4y - D66*N4x) - N4y*(-D22*N4y - D26*N4x)) + detJ*r32*wij*(-E45*N4**2 - N4x*(D16*N4x + D66*N4y) - N4y*(D12*N4x + D26*N4y))) + r22*(detJ*r31*wij*(-E45*N4**2 + N4x*(-D12*N4y - D16*N4x) + N4y*(-D26*N4y - D66*N4x)) + detJ*r32*wij*(E55*N4**2 + Ery*gamma4**2 + N4x*(D11*N4x + D16*N4y) + N4y*(D16*N4x + D66*N4y)))
            k += 1
            KC0v[k] += A66*N4**2*alphat*detJ*r33**2*wij/h + r31*(detJ*r31*wij*(E44*N4**2 + Erx*gamma4**2 - N4x*(-D26*N4y - D66*N4x) - N4y*(-D22*N4y - D26*N4x)) + detJ*r32*wij*(-E45*N4**2 - N4x*(D16*N4x + D66*N4y) - N4y*(D12*N4x + D26*N4y))) + r32*(detJ*r31*wij*(-E45*N4**2 + N4x*(-D12*N4y - D16*N4x) + N4y*(-D26*N4y - D66*N4x)) + detJ*r32*wij*(E55*N4**2 + Ery*gamma4**2 + N4x*(D11*N4x + D16*N4y) + N4y*(D16*N4x + D66*N4y)))


    cpdef void update_KG(Quad4R self,
            np.ndarray[cINT, ndim=1] KGr,
            np.ndarray[cINT, ndim=1] KGc,
            np.ndarray[cDOUBLE, ndim=1] KGv,
            ShellProp prop,
            int update_KGv_only=0
            ):
        r"""Update sparse vectors for geometric stiffness matrix KG

        Two-point Gauss-Legendre quadrature is used, which showed more accuracy
        for linear buckling load predictions.

        The probe :class:`.Quad4RProbe` attribute of the :class:`Quad4R` object
        must be updated using :func:`.update_probe_ue` with the correct pre-buckling
        displacements before this function is called.

        Properties
        ----------
        KGr : np.array
           Array to store row positions of sparse values
        KGc : np.array
           Array to store column positions of sparse values
        KGv : np.array
            Array to store sparse values
        prop : :class:`ShellProp` object
            Shell property object from where the stiffness and mass attributes
            are read from.
        update_KGv_only : int
            The default `0` means that only `KGv` is updated. Any other value will
            lead to `KGr` and `KGc` also being updated.

        """
        cdef double *ue
        cdef cINT c1, c2, c3, c4, i, j, k
        cdef double x1, x2, x3, x4
        cdef double y1, y2, y3, y4
        cdef double wij, detJ, xi, eta
        cdef double points[2]
        cdef double A11, A12, A16, A22, A26, A66
        cdef double B11, B12, B16, B22, B26, B66
        cdef double r11, r12, r13, r21, r22, r23, r31, r32, r33
        cdef double j11, j12, j21, j22
        cdef double N1, N2, N3, N4
        cdef double N1x, N2x, N3x, N4x, N1y, N2y, N3y, N4y
        cdef double Nxx, Nyy, Nxy

        with nogil:
            A11 = prop.A11
            A12 = prop.A12
            A16 = prop.A16
            A22 = prop.A22
            A26 = prop.A26
            A66 = prop.A66
            B11 = prop.B11
            B12 = prop.B12
            B16 = prop.B16
            B22 = prop.B22
            B26 = prop.B26
            B66 = prop.B66

            #Local to global transformation
            r11 = self.r11
            r12 = self.r12
            r13 = self.r13
            r21 = self.r21
            r22 = self.r22
            r23 = self.r23
            r31 = self.r31
            r32 = self.r32
            r33 = self.r33

            #NOTE ignoring z in local coordinates
            x1 = self.probe.xe[0]
            y1 = self.probe.xe[1]
            #z1 = self.probe.xe[2]
            x2 = self.probe.xe[3]
            y2 = self.probe.xe[4]
            #z2 = self.probe.xe[5]
            x3 = self.probe.xe[6]
            y3 = self.probe.xe[7]
            #z3 = self.probe.xe[8]
            x4 = self.probe.xe[9]
            y4 = self.probe.xe[10]
            #z4 = self.probe.xe[11]

            ue = &self.probe.ue[0]

            if update_KGv_only == 0:
                # positions of nodes 1,2,3,4 in the global matrix
                c1 = self.c1
                c2 = self.c2
                c3 = self.c3
                c4 = self.c4

                k = self.init_k_KG
                KGr[k] = 0+c1
                KGc[k] = 0+c1
                k += 1
                KGr[k] = 0+c1
                KGc[k] = 1+c1
                k += 1
                KGr[k] = 0+c1
                KGc[k] = 2+c1
                k += 1
                KGr[k] = 0+c1
                KGc[k] = 0+c2
                k += 1
                KGr[k] = 0+c1
                KGc[k] = 1+c2
                k += 1
                KGr[k] = 0+c1
                KGc[k] = 2+c2
                k += 1
                KGr[k] = 0+c1
                KGc[k] = 0+c3
                k += 1
                KGr[k] = 0+c1
                KGc[k] = 1+c3
                k += 1
                KGr[k] = 0+c1
                KGc[k] = 2+c3
                k += 1
                KGr[k] = 0+c1
                KGc[k] = 0+c4
                k += 1
                KGr[k] = 0+c1
                KGc[k] = 1+c4
                k += 1
                KGr[k] = 0+c1
                KGc[k] = 2+c4
                k += 1
                KGr[k] = 1+c1
                KGc[k] = 0+c1
                k += 1
                KGr[k] = 1+c1
                KGc[k] = 1+c1
                k += 1
                KGr[k] = 1+c1
                KGc[k] = 2+c1
                k += 1
                KGr[k] = 1+c1
                KGc[k] = 0+c2
                k += 1
                KGr[k] = 1+c1
                KGc[k] = 1+c2
                k += 1
                KGr[k] = 1+c1
                KGc[k] = 2+c2
                k += 1
                KGr[k] = 1+c1
                KGc[k] = 0+c3
                k += 1
                KGr[k] = 1+c1
                KGc[k] = 1+c3
                k += 1
                KGr[k] = 1+c1
                KGc[k] = 2+c3
                k += 1
                KGr[k] = 1+c1
                KGc[k] = 0+c4
                k += 1
                KGr[k] = 1+c1
                KGc[k] = 1+c4
                k += 1
                KGr[k] = 1+c1
                KGc[k] = 2+c4
                k += 1
                KGr[k] = 2+c1
                KGc[k] = 0+c1
                k += 1
                KGr[k] = 2+c1
                KGc[k] = 1+c1
                k += 1
                KGr[k] = 2+c1
                KGc[k] = 2+c1
                k += 1
                KGr[k] = 2+c1
                KGc[k] = 0+c2
                k += 1
                KGr[k] = 2+c1
                KGc[k] = 1+c2
                k += 1
                KGr[k] = 2+c1
                KGc[k] = 2+c2
                k += 1
                KGr[k] = 2+c1
                KGc[k] = 0+c3
                k += 1
                KGr[k] = 2+c1
                KGc[k] = 1+c3
                k += 1
                KGr[k] = 2+c1
                KGc[k] = 2+c3
                k += 1
                KGr[k] = 2+c1
                KGc[k] = 0+c4
                k += 1
                KGr[k] = 2+c1
                KGc[k] = 1+c4
                k += 1
                KGr[k] = 2+c1
                KGc[k] = 2+c4
                k += 1
                KGr[k] = 0+c2
                KGc[k] = 0+c1
                k += 1
                KGr[k] = 0+c2
                KGc[k] = 1+c1
                k += 1
                KGr[k] = 0+c2
                KGc[k] = 2+c1
                k += 1
                KGr[k] = 0+c2
                KGc[k] = 0+c2
                k += 1
                KGr[k] = 0+c2
                KGc[k] = 1+c2
                k += 1
                KGr[k] = 0+c2
                KGc[k] = 2+c2
                k += 1
                KGr[k] = 0+c2
                KGc[k] = 0+c3
                k += 1
                KGr[k] = 0+c2
                KGc[k] = 1+c3
                k += 1
                KGr[k] = 0+c2
                KGc[k] = 2+c3
                k += 1
                KGr[k] = 0+c2
                KGc[k] = 0+c4
                k += 1
                KGr[k] = 0+c2
                KGc[k] = 1+c4
                k += 1
                KGr[k] = 0+c2
                KGc[k] = 2+c4
                k += 1
                KGr[k] = 1+c2
                KGc[k] = 0+c1
                k += 1
                KGr[k] = 1+c2
                KGc[k] = 1+c1
                k += 1
                KGr[k] = 1+c2
                KGc[k] = 2+c1
                k += 1
                KGr[k] = 1+c2
                KGc[k] = 0+c2
                k += 1
                KGr[k] = 1+c2
                KGc[k] = 1+c2
                k += 1
                KGr[k] = 1+c2
                KGc[k] = 2+c2
                k += 1
                KGr[k] = 1+c2
                KGc[k] = 0+c3
                k += 1
                KGr[k] = 1+c2
                KGc[k] = 1+c3
                k += 1
                KGr[k] = 1+c2
                KGc[k] = 2+c3
                k += 1
                KGr[k] = 1+c2
                KGc[k] = 0+c4
                k += 1
                KGr[k] = 1+c2
                KGc[k] = 1+c4
                k += 1
                KGr[k] = 1+c2
                KGc[k] = 2+c4
                k += 1
                KGr[k] = 2+c2
                KGc[k] = 0+c1
                k += 1
                KGr[k] = 2+c2
                KGc[k] = 1+c1
                k += 1
                KGr[k] = 2+c2
                KGc[k] = 2+c1
                k += 1
                KGr[k] = 2+c2
                KGc[k] = 0+c2
                k += 1
                KGr[k] = 2+c2
                KGc[k] = 1+c2
                k += 1
                KGr[k] = 2+c2
                KGc[k] = 2+c2
                k += 1
                KGr[k] = 2+c2
                KGc[k] = 0+c3
                k += 1
                KGr[k] = 2+c2
                KGc[k] = 1+c3
                k += 1
                KGr[k] = 2+c2
                KGc[k] = 2+c3
                k += 1
                KGr[k] = 2+c2
                KGc[k] = 0+c4
                k += 1
                KGr[k] = 2+c2
                KGc[k] = 1+c4
                k += 1
                KGr[k] = 2+c2
                KGc[k] = 2+c4
                k += 1
                KGr[k] = 0+c3
                KGc[k] = 0+c1
                k += 1
                KGr[k] = 0+c3
                KGc[k] = 1+c1
                k += 1
                KGr[k] = 0+c3
                KGc[k] = 2+c1
                k += 1
                KGr[k] = 0+c3
                KGc[k] = 0+c2
                k += 1
                KGr[k] = 0+c3
                KGc[k] = 1+c2
                k += 1
                KGr[k] = 0+c3
                KGc[k] = 2+c2
                k += 1
                KGr[k] = 0+c3
                KGc[k] = 0+c3
                k += 1
                KGr[k] = 0+c3
                KGc[k] = 1+c3
                k += 1
                KGr[k] = 0+c3
                KGc[k] = 2+c3
                k += 1
                KGr[k] = 0+c3
                KGc[k] = 0+c4
                k += 1
                KGr[k] = 0+c3
                KGc[k] = 1+c4
                k += 1
                KGr[k] = 0+c3
                KGc[k] = 2+c4
                k += 1
                KGr[k] = 1+c3
                KGc[k] = 0+c1
                k += 1
                KGr[k] = 1+c3
                KGc[k] = 1+c1
                k += 1
                KGr[k] = 1+c3
                KGc[k] = 2+c1
                k += 1
                KGr[k] = 1+c3
                KGc[k] = 0+c2
                k += 1
                KGr[k] = 1+c3
                KGc[k] = 1+c2
                k += 1
                KGr[k] = 1+c3
                KGc[k] = 2+c2
                k += 1
                KGr[k] = 1+c3
                KGc[k] = 0+c3
                k += 1
                KGr[k] = 1+c3
                KGc[k] = 1+c3
                k += 1
                KGr[k] = 1+c3
                KGc[k] = 2+c3
                k += 1
                KGr[k] = 1+c3
                KGc[k] = 0+c4
                k += 1
                KGr[k] = 1+c3
                KGc[k] = 1+c4
                k += 1
                KGr[k] = 1+c3
                KGc[k] = 2+c4
                k += 1
                KGr[k] = 2+c3
                KGc[k] = 0+c1
                k += 1
                KGr[k] = 2+c3
                KGc[k] = 1+c1
                k += 1
                KGr[k] = 2+c3
                KGc[k] = 2+c1
                k += 1
                KGr[k] = 2+c3
                KGc[k] = 0+c2
                k += 1
                KGr[k] = 2+c3
                KGc[k] = 1+c2
                k += 1
                KGr[k] = 2+c3
                KGc[k] = 2+c2
                k += 1
                KGr[k] = 2+c3
                KGc[k] = 0+c3
                k += 1
                KGr[k] = 2+c3
                KGc[k] = 1+c3
                k += 1
                KGr[k] = 2+c3
                KGc[k] = 2+c3
                k += 1
                KGr[k] = 2+c3
                KGc[k] = 0+c4
                k += 1
                KGr[k] = 2+c3
                KGc[k] = 1+c4
                k += 1
                KGr[k] = 2+c3
                KGc[k] = 2+c4
                k += 1
                KGr[k] = 0+c4
                KGc[k] = 0+c1
                k += 1
                KGr[k] = 0+c4
                KGc[k] = 1+c1
                k += 1
                KGr[k] = 0+c4
                KGc[k] = 2+c1
                k += 1
                KGr[k] = 0+c4
                KGc[k] = 0+c2
                k += 1
                KGr[k] = 0+c4
                KGc[k] = 1+c2
                k += 1
                KGr[k] = 0+c4
                KGc[k] = 2+c2
                k += 1
                KGr[k] = 0+c4
                KGc[k] = 0+c3
                k += 1
                KGr[k] = 0+c4
                KGc[k] = 1+c3
                k += 1
                KGr[k] = 0+c4
                KGc[k] = 2+c3
                k += 1
                KGr[k] = 0+c4
                KGc[k] = 0+c4
                k += 1
                KGr[k] = 0+c4
                KGc[k] = 1+c4
                k += 1
                KGr[k] = 0+c4
                KGc[k] = 2+c4
                k += 1
                KGr[k] = 1+c4
                KGc[k] = 0+c1
                k += 1
                KGr[k] = 1+c4
                KGc[k] = 1+c1
                k += 1
                KGr[k] = 1+c4
                KGc[k] = 2+c1
                k += 1
                KGr[k] = 1+c4
                KGc[k] = 0+c2
                k += 1
                KGr[k] = 1+c4
                KGc[k] = 1+c2
                k += 1
                KGr[k] = 1+c4
                KGc[k] = 2+c2
                k += 1
                KGr[k] = 1+c4
                KGc[k] = 0+c3
                k += 1
                KGr[k] = 1+c4
                KGc[k] = 1+c3
                k += 1
                KGr[k] = 1+c4
                KGc[k] = 2+c3
                k += 1
                KGr[k] = 1+c4
                KGc[k] = 0+c4
                k += 1
                KGr[k] = 1+c4
                KGc[k] = 1+c4
                k += 1
                KGr[k] = 1+c4
                KGc[k] = 2+c4
                k += 1
                KGr[k] = 2+c4
                KGc[k] = 0+c1
                k += 1
                KGr[k] = 2+c4
                KGc[k] = 1+c1
                k += 1
                KGr[k] = 2+c4
                KGc[k] = 2+c1
                k += 1
                KGr[k] = 2+c4
                KGc[k] = 0+c2
                k += 1
                KGr[k] = 2+c4
                KGc[k] = 1+c2
                k += 1
                KGr[k] = 2+c4
                KGc[k] = 2+c2
                k += 1
                KGr[k] = 2+c4
                KGc[k] = 0+c3
                k += 1
                KGr[k] = 2+c4
                KGc[k] = 1+c3
                k += 1
                KGr[k] = 2+c4
                KGc[k] = 2+c3
                k += 1
                KGr[k] = 2+c4
                KGc[k] = 0+c4
                k += 1
                KGr[k] = 2+c4
                KGc[k] = 1+c4
                k += 1
                KGr[k] = 2+c4
                KGc[k] = 2+c4

            #NOTE full integration for KG with two-point Gauss-Legendre quadrature
            wij = 1.
            points[0] = -0.5773502691896257645092
            points[1] = +0.5773502691896257645092

            for i in range(2):
                xi = points[i]
                for j in range(2):
                    eta = points[j]

                    detJ = -0.125*eta*x1*y2 + 0.125*eta*x1*y3 + 0.125*eta*x2*y1 - 0.125*eta*x2*y4 - 0.125*eta*x3*y1 + 0.125*eta*x3*y4 + 0.125*eta*x4*y2 - 0.125*eta*x4*y3 - 0.125*x1*xi*y3 + 0.125*x1*xi*y4 + 0.125*x1*y2 - 0.125*x1*y4 + 0.125*x2*xi*y3 - 0.125*x2*xi*y4 - 0.125*x2*y1 + 0.125*x2*y3 + 0.125*x3*xi*y1 - 0.125*x3*xi*y2 - 0.125*x3*y2 + 0.125*x3*y4 - 0.125*x4*xi*y1 + 0.125*x4*xi*y2 + 0.125*x4*y1 - 0.125*x4*y3

                    j11 = 2.0*(-xi*y1 + xi*y2 - xi*y3 + xi*y4 + y1 + y2 - y3 - y4)/(eta*x1*y2 - eta*x1*y3 - eta*x2*y1 + eta*x2*y4 + eta*x3*y1 - eta*x3*y4 - eta*x4*y2 + eta*x4*y3 + x1*xi*y3 - x1*xi*y4 - x1*y2 + x1*y4 - x2*xi*y3 + x2*xi*y4 + x2*y1 - x2*y3 - x3*xi*y1 + x3*xi*y2 + x3*y2 - x3*y4 + x4*xi*y1 - x4*xi*y2 - x4*y1 + x4*y3)
                    j12 = 2.0*(eta*y1 - eta*y2 + eta*y3 - eta*y4 - y1 + y2 + y3 - y4)/(eta*x1*y2 - eta*x1*y3 - eta*x2*y1 + eta*x2*y4 + eta*x3*y1 - eta*x3*y4 - eta*x4*y2 + eta*x4*y3 + x1*xi*y3 - x1*xi*y4 - x1*y2 + x1*y4 - x2*xi*y3 + x2*xi*y4 + x2*y1 - x2*y3 - x3*xi*y1 + x3*xi*y2 + x3*y2 - x3*y4 + x4*xi*y1 - x4*xi*y2 - x4*y1 + x4*y3)
                    j21 = 2.0*(x1*xi - x1 - x2*xi - x2 + x3*xi + x3 - x4*xi + x4)/(eta*x1*y2 - eta*x1*y3 - eta*x2*y1 + eta*x2*y4 + eta*x3*y1 - eta*x3*y4 - eta*x4*y2 + eta*x4*y3 + x1*xi*y3 - x1*xi*y4 - x1*y2 + x1*y4 - x2*xi*y3 + x2*xi*y4 + x2*y1 - x2*y3 - x3*xi*y1 + x3*xi*y2 + x3*y2 - x3*y4 + x4*xi*y1 - x4*xi*y2 - x4*y1 + x4*y3)
                    j22 = 2.0*(-eta*x1 + eta*x2 - eta*x3 + eta*x4 + x1 - x2 - x3 + x4)/(eta*x1*y2 - eta*x1*y3 - eta*x2*y1 + eta*x2*y4 + eta*x3*y1 - eta*x3*y4 - eta*x4*y2 + eta*x4*y3 + x1*xi*y3 - x1*xi*y4 - x1*y2 + x1*y4 - x2*xi*y3 + x2*xi*y4 + x2*y1 - x2*y3 - x3*xi*y1 + x3*xi*y2 + x3*y2 - x3*y4 + x4*xi*y1 - x4*xi*y2 - x4*y1 + x4*y3)

                    N1 = 0.25*eta*xi - 0.25*eta - 0.25*xi + 0.25
                    N2 = -0.25*eta*xi - 0.25*eta + 0.25*xi + 0.25
                    N3 = 0.25*eta*xi + 0.25*eta + 0.25*xi + 0.25
                    N4 = -0.25*eta*xi + 0.25*eta - 0.25*xi + 0.25

                    N1x = 0.25*j11*(eta - 1) + 0.25*j12*(xi - 1)
                    N2x = -0.25*eta*j11 + 0.25*j11 - 0.25*j12*xi - 0.25*j12
                    N3x = 0.25*j11*(eta + 1) + 0.25*j12*(xi + 1)
                    N4x = -0.25*eta*j11 - 0.25*j11 - 0.25*j12*xi + 0.25*j12

                    N1y = 0.25*j21*(eta - 1) + 0.25*j22*(xi - 1)
                    N2y = -0.25*eta*j21 + 0.25*j21 - 0.25*j22*xi - 0.25*j22
                    N3y = 0.25*j21*(eta + 1) + 0.25*j22*(xi + 1)
                    N4y = -0.25*eta*j21 - 0.25*j21 - 0.25*j22*xi + 0.25*j22

                    Nxx = ue[0]*(A11*N1x + A16*N1y) + ue[10]*(B11*N2x + B16*N2y) + ue[12]*(A11*N3x + A16*N3y) + ue[13]*(A12*N3y + A16*N3x) - ue[15]*(B12*N3y + B16*N3x) + ue[16]*(B11*N3x + B16*N3y) + ue[18]*(A11*N4x + A16*N4y) + ue[19]*(A12*N4y + A16*N4x) + ue[1]*(A12*N1y + A16*N1x) - ue[21]*(B12*N4y + B16*N4x) + ue[22]*(B11*N4x + B16*N4y) - ue[3]*(B12*N1y + B16*N1x) + ue[4]*(B11*N1x + B16*N1y) + ue[6]*(A11*N2x + A16*N2y) + ue[7]*(A12*N2y + A16*N2x) - ue[9]*(B12*N2y + B16*N2x)
                    Nyy = ue[0]*(A12*N1x + A26*N1y) + ue[10]*(B12*N2x + B26*N2y) + ue[12]*(A12*N3x + A26*N3y) + ue[13]*(A22*N3y + A26*N3x) - ue[15]*(B22*N3y + B26*N3x) + ue[16]*(B12*N3x + B26*N3y) + ue[18]*(A12*N4x + A26*N4y) + ue[19]*(A22*N4y + A26*N4x) + ue[1]*(A22*N1y + A26*N1x) - ue[21]*(B22*N4y + B26*N4x) + ue[22]*(B12*N4x + B26*N4y) - ue[3]*(B22*N1y + B26*N1x) + ue[4]*(B12*N1x + B26*N1y) + ue[6]*(A12*N2x + A26*N2y) + ue[7]*(A22*N2y + A26*N2x) - ue[9]*(B22*N2y + B26*N2x)
                    Nxy = ue[0]*(A16*N1x + A66*N1y) + ue[10]*(B16*N2x + B66*N2y) + ue[12]*(A16*N3x + A66*N3y) + ue[13]*(A26*N3y + A66*N3x) - ue[15]*(B26*N3y + B66*N3x) + ue[16]*(B16*N3x + B66*N3y) + ue[18]*(A16*N4x + A66*N4y) + ue[19]*(A26*N4y + A66*N4x) + ue[1]*(A26*N1y + A66*N1x) - ue[21]*(B26*N4y + B66*N4x) + ue[22]*(B16*N4x + B66*N4y) - ue[3]*(B26*N1y + B66*N1x) + ue[4]*(B16*N1x + B66*N1y) + ue[6]*(A16*N2x + A66*N2y) + ue[7]*(A26*N2y + A66*N2x) - ue[9]*(B26*N2y + B66*N2x)
                    with gil:
                        print('Nxx ', Nxx)

                    k = self.init_k_KG
                    KGv[k] += r13**2*(N1x*(N1x*Nxx*detJ*wij + N1y*Nxy*detJ*wij) + N1y*(N1x*Nxy*detJ*wij + N1y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r23*(N1x*(N1x*Nxx*detJ*wij + N1y*Nxy*detJ*wij) + N1y*(N1x*Nxy*detJ*wij + N1y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r33*(N1x*(N1x*Nxx*detJ*wij + N1y*Nxy*detJ*wij) + N1y*(N1x*Nxy*detJ*wij + N1y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13**2*(N2x*(N1x*Nxx*detJ*wij + N1y*Nxy*detJ*wij) + N2y*(N1x*Nxy*detJ*wij + N1y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r23*(N2x*(N1x*Nxx*detJ*wij + N1y*Nxy*detJ*wij) + N2y*(N1x*Nxy*detJ*wij + N1y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r33*(N2x*(N1x*Nxx*detJ*wij + N1y*Nxy*detJ*wij) + N2y*(N1x*Nxy*detJ*wij + N1y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13**2*(N3x*(N1x*Nxx*detJ*wij + N1y*Nxy*detJ*wij) + N3y*(N1x*Nxy*detJ*wij + N1y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r23*(N3x*(N1x*Nxx*detJ*wij + N1y*Nxy*detJ*wij) + N3y*(N1x*Nxy*detJ*wij + N1y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r33*(N3x*(N1x*Nxx*detJ*wij + N1y*Nxy*detJ*wij) + N3y*(N1x*Nxy*detJ*wij + N1y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13**2*(N4x*(N1x*Nxx*detJ*wij + N1y*Nxy*detJ*wij) + N4y*(N1x*Nxy*detJ*wij + N1y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r23*(N4x*(N1x*Nxx*detJ*wij + N1y*Nxy*detJ*wij) + N4y*(N1x*Nxy*detJ*wij + N1y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r33*(N4x*(N1x*Nxx*detJ*wij + N1y*Nxy*detJ*wij) + N4y*(N1x*Nxy*detJ*wij + N1y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r23*(N1x*(N1x*Nxx*detJ*wij + N1y*Nxy*detJ*wij) + N1y*(N1x*Nxy*detJ*wij + N1y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23**2*(N1x*(N1x*Nxx*detJ*wij + N1y*Nxy*detJ*wij) + N1y*(N1x*Nxy*detJ*wij + N1y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23*r33*(N1x*(N1x*Nxx*detJ*wij + N1y*Nxy*detJ*wij) + N1y*(N1x*Nxy*detJ*wij + N1y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r23*(N2x*(N1x*Nxx*detJ*wij + N1y*Nxy*detJ*wij) + N2y*(N1x*Nxy*detJ*wij + N1y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23**2*(N2x*(N1x*Nxx*detJ*wij + N1y*Nxy*detJ*wij) + N2y*(N1x*Nxy*detJ*wij + N1y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23*r33*(N2x*(N1x*Nxx*detJ*wij + N1y*Nxy*detJ*wij) + N2y*(N1x*Nxy*detJ*wij + N1y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r23*(N3x*(N1x*Nxx*detJ*wij + N1y*Nxy*detJ*wij) + N3y*(N1x*Nxy*detJ*wij + N1y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23**2*(N3x*(N1x*Nxx*detJ*wij + N1y*Nxy*detJ*wij) + N3y*(N1x*Nxy*detJ*wij + N1y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23*r33*(N3x*(N1x*Nxx*detJ*wij + N1y*Nxy*detJ*wij) + N3y*(N1x*Nxy*detJ*wij + N1y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r23*(N4x*(N1x*Nxx*detJ*wij + N1y*Nxy*detJ*wij) + N4y*(N1x*Nxy*detJ*wij + N1y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23**2*(N4x*(N1x*Nxx*detJ*wij + N1y*Nxy*detJ*wij) + N4y*(N1x*Nxy*detJ*wij + N1y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23*r33*(N4x*(N1x*Nxx*detJ*wij + N1y*Nxy*detJ*wij) + N4y*(N1x*Nxy*detJ*wij + N1y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r33*(N1x*(N1x*Nxx*detJ*wij + N1y*Nxy*detJ*wij) + N1y*(N1x*Nxy*detJ*wij + N1y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23*r33*(N1x*(N1x*Nxx*detJ*wij + N1y*Nxy*detJ*wij) + N1y*(N1x*Nxy*detJ*wij + N1y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r33**2*(N1x*(N1x*Nxx*detJ*wij + N1y*Nxy*detJ*wij) + N1y*(N1x*Nxy*detJ*wij + N1y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r33*(N2x*(N1x*Nxx*detJ*wij + N1y*Nxy*detJ*wij) + N2y*(N1x*Nxy*detJ*wij + N1y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23*r33*(N2x*(N1x*Nxx*detJ*wij + N1y*Nxy*detJ*wij) + N2y*(N1x*Nxy*detJ*wij + N1y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r33**2*(N2x*(N1x*Nxx*detJ*wij + N1y*Nxy*detJ*wij) + N2y*(N1x*Nxy*detJ*wij + N1y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r33*(N3x*(N1x*Nxx*detJ*wij + N1y*Nxy*detJ*wij) + N3y*(N1x*Nxy*detJ*wij + N1y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23*r33*(N3x*(N1x*Nxx*detJ*wij + N1y*Nxy*detJ*wij) + N3y*(N1x*Nxy*detJ*wij + N1y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r33**2*(N3x*(N1x*Nxx*detJ*wij + N1y*Nxy*detJ*wij) + N3y*(N1x*Nxy*detJ*wij + N1y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r33*(N4x*(N1x*Nxx*detJ*wij + N1y*Nxy*detJ*wij) + N4y*(N1x*Nxy*detJ*wij + N1y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23*r33*(N4x*(N1x*Nxx*detJ*wij + N1y*Nxy*detJ*wij) + N4y*(N1x*Nxy*detJ*wij + N1y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r33**2*(N4x*(N1x*Nxx*detJ*wij + N1y*Nxy*detJ*wij) + N4y*(N1x*Nxy*detJ*wij + N1y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13**2*(N1x*(N2x*Nxx*detJ*wij + N2y*Nxy*detJ*wij) + N1y*(N2x*Nxy*detJ*wij + N2y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r23*(N1x*(N2x*Nxx*detJ*wij + N2y*Nxy*detJ*wij) + N1y*(N2x*Nxy*detJ*wij + N2y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r33*(N1x*(N2x*Nxx*detJ*wij + N2y*Nxy*detJ*wij) + N1y*(N2x*Nxy*detJ*wij + N2y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13**2*(N2x*(N2x*Nxx*detJ*wij + N2y*Nxy*detJ*wij) + N2y*(N2x*Nxy*detJ*wij + N2y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r23*(N2x*(N2x*Nxx*detJ*wij + N2y*Nxy*detJ*wij) + N2y*(N2x*Nxy*detJ*wij + N2y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r33*(N2x*(N2x*Nxx*detJ*wij + N2y*Nxy*detJ*wij) + N2y*(N2x*Nxy*detJ*wij + N2y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13**2*(N3x*(N2x*Nxx*detJ*wij + N2y*Nxy*detJ*wij) + N3y*(N2x*Nxy*detJ*wij + N2y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r23*(N3x*(N2x*Nxx*detJ*wij + N2y*Nxy*detJ*wij) + N3y*(N2x*Nxy*detJ*wij + N2y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r33*(N3x*(N2x*Nxx*detJ*wij + N2y*Nxy*detJ*wij) + N3y*(N2x*Nxy*detJ*wij + N2y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13**2*(N4x*(N2x*Nxx*detJ*wij + N2y*Nxy*detJ*wij) + N4y*(N2x*Nxy*detJ*wij + N2y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r23*(N4x*(N2x*Nxx*detJ*wij + N2y*Nxy*detJ*wij) + N4y*(N2x*Nxy*detJ*wij + N2y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r33*(N4x*(N2x*Nxx*detJ*wij + N2y*Nxy*detJ*wij) + N4y*(N2x*Nxy*detJ*wij + N2y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r23*(N1x*(N2x*Nxx*detJ*wij + N2y*Nxy*detJ*wij) + N1y*(N2x*Nxy*detJ*wij + N2y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23**2*(N1x*(N2x*Nxx*detJ*wij + N2y*Nxy*detJ*wij) + N1y*(N2x*Nxy*detJ*wij + N2y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23*r33*(N1x*(N2x*Nxx*detJ*wij + N2y*Nxy*detJ*wij) + N1y*(N2x*Nxy*detJ*wij + N2y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r23*(N2x*(N2x*Nxx*detJ*wij + N2y*Nxy*detJ*wij) + N2y*(N2x*Nxy*detJ*wij + N2y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23**2*(N2x*(N2x*Nxx*detJ*wij + N2y*Nxy*detJ*wij) + N2y*(N2x*Nxy*detJ*wij + N2y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23*r33*(N2x*(N2x*Nxx*detJ*wij + N2y*Nxy*detJ*wij) + N2y*(N2x*Nxy*detJ*wij + N2y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r23*(N3x*(N2x*Nxx*detJ*wij + N2y*Nxy*detJ*wij) + N3y*(N2x*Nxy*detJ*wij + N2y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23**2*(N3x*(N2x*Nxx*detJ*wij + N2y*Nxy*detJ*wij) + N3y*(N2x*Nxy*detJ*wij + N2y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23*r33*(N3x*(N2x*Nxx*detJ*wij + N2y*Nxy*detJ*wij) + N3y*(N2x*Nxy*detJ*wij + N2y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r23*(N4x*(N2x*Nxx*detJ*wij + N2y*Nxy*detJ*wij) + N4y*(N2x*Nxy*detJ*wij + N2y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23**2*(N4x*(N2x*Nxx*detJ*wij + N2y*Nxy*detJ*wij) + N4y*(N2x*Nxy*detJ*wij + N2y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23*r33*(N4x*(N2x*Nxx*detJ*wij + N2y*Nxy*detJ*wij) + N4y*(N2x*Nxy*detJ*wij + N2y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r33*(N1x*(N2x*Nxx*detJ*wij + N2y*Nxy*detJ*wij) + N1y*(N2x*Nxy*detJ*wij + N2y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23*r33*(N1x*(N2x*Nxx*detJ*wij + N2y*Nxy*detJ*wij) + N1y*(N2x*Nxy*detJ*wij + N2y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r33**2*(N1x*(N2x*Nxx*detJ*wij + N2y*Nxy*detJ*wij) + N1y*(N2x*Nxy*detJ*wij + N2y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r33*(N2x*(N2x*Nxx*detJ*wij + N2y*Nxy*detJ*wij) + N2y*(N2x*Nxy*detJ*wij + N2y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23*r33*(N2x*(N2x*Nxx*detJ*wij + N2y*Nxy*detJ*wij) + N2y*(N2x*Nxy*detJ*wij + N2y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r33**2*(N2x*(N2x*Nxx*detJ*wij + N2y*Nxy*detJ*wij) + N2y*(N2x*Nxy*detJ*wij + N2y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r33*(N3x*(N2x*Nxx*detJ*wij + N2y*Nxy*detJ*wij) + N3y*(N2x*Nxy*detJ*wij + N2y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23*r33*(N3x*(N2x*Nxx*detJ*wij + N2y*Nxy*detJ*wij) + N3y*(N2x*Nxy*detJ*wij + N2y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r33**2*(N3x*(N2x*Nxx*detJ*wij + N2y*Nxy*detJ*wij) + N3y*(N2x*Nxy*detJ*wij + N2y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r33*(N4x*(N2x*Nxx*detJ*wij + N2y*Nxy*detJ*wij) + N4y*(N2x*Nxy*detJ*wij + N2y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23*r33*(N4x*(N2x*Nxx*detJ*wij + N2y*Nxy*detJ*wij) + N4y*(N2x*Nxy*detJ*wij + N2y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r33**2*(N4x*(N2x*Nxx*detJ*wij + N2y*Nxy*detJ*wij) + N4y*(N2x*Nxy*detJ*wij + N2y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13**2*(N1x*(N3x*Nxx*detJ*wij + N3y*Nxy*detJ*wij) + N1y*(N3x*Nxy*detJ*wij + N3y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r23*(N1x*(N3x*Nxx*detJ*wij + N3y*Nxy*detJ*wij) + N1y*(N3x*Nxy*detJ*wij + N3y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r33*(N1x*(N3x*Nxx*detJ*wij + N3y*Nxy*detJ*wij) + N1y*(N3x*Nxy*detJ*wij + N3y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13**2*(N2x*(N3x*Nxx*detJ*wij + N3y*Nxy*detJ*wij) + N2y*(N3x*Nxy*detJ*wij + N3y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r23*(N2x*(N3x*Nxx*detJ*wij + N3y*Nxy*detJ*wij) + N2y*(N3x*Nxy*detJ*wij + N3y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r33*(N2x*(N3x*Nxx*detJ*wij + N3y*Nxy*detJ*wij) + N2y*(N3x*Nxy*detJ*wij + N3y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13**2*(N3x*(N3x*Nxx*detJ*wij + N3y*Nxy*detJ*wij) + N3y*(N3x*Nxy*detJ*wij + N3y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r23*(N3x*(N3x*Nxx*detJ*wij + N3y*Nxy*detJ*wij) + N3y*(N3x*Nxy*detJ*wij + N3y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r33*(N3x*(N3x*Nxx*detJ*wij + N3y*Nxy*detJ*wij) + N3y*(N3x*Nxy*detJ*wij + N3y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13**2*(N4x*(N3x*Nxx*detJ*wij + N3y*Nxy*detJ*wij) + N4y*(N3x*Nxy*detJ*wij + N3y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r23*(N4x*(N3x*Nxx*detJ*wij + N3y*Nxy*detJ*wij) + N4y*(N3x*Nxy*detJ*wij + N3y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r33*(N4x*(N3x*Nxx*detJ*wij + N3y*Nxy*detJ*wij) + N4y*(N3x*Nxy*detJ*wij + N3y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r23*(N1x*(N3x*Nxx*detJ*wij + N3y*Nxy*detJ*wij) + N1y*(N3x*Nxy*detJ*wij + N3y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23**2*(N1x*(N3x*Nxx*detJ*wij + N3y*Nxy*detJ*wij) + N1y*(N3x*Nxy*detJ*wij + N3y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23*r33*(N1x*(N3x*Nxx*detJ*wij + N3y*Nxy*detJ*wij) + N1y*(N3x*Nxy*detJ*wij + N3y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r23*(N2x*(N3x*Nxx*detJ*wij + N3y*Nxy*detJ*wij) + N2y*(N3x*Nxy*detJ*wij + N3y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23**2*(N2x*(N3x*Nxx*detJ*wij + N3y*Nxy*detJ*wij) + N2y*(N3x*Nxy*detJ*wij + N3y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23*r33*(N2x*(N3x*Nxx*detJ*wij + N3y*Nxy*detJ*wij) + N2y*(N3x*Nxy*detJ*wij + N3y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r23*(N3x*(N3x*Nxx*detJ*wij + N3y*Nxy*detJ*wij) + N3y*(N3x*Nxy*detJ*wij + N3y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23**2*(N3x*(N3x*Nxx*detJ*wij + N3y*Nxy*detJ*wij) + N3y*(N3x*Nxy*detJ*wij + N3y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23*r33*(N3x*(N3x*Nxx*detJ*wij + N3y*Nxy*detJ*wij) + N3y*(N3x*Nxy*detJ*wij + N3y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r23*(N4x*(N3x*Nxx*detJ*wij + N3y*Nxy*detJ*wij) + N4y*(N3x*Nxy*detJ*wij + N3y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23**2*(N4x*(N3x*Nxx*detJ*wij + N3y*Nxy*detJ*wij) + N4y*(N3x*Nxy*detJ*wij + N3y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23*r33*(N4x*(N3x*Nxx*detJ*wij + N3y*Nxy*detJ*wij) + N4y*(N3x*Nxy*detJ*wij + N3y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r33*(N1x*(N3x*Nxx*detJ*wij + N3y*Nxy*detJ*wij) + N1y*(N3x*Nxy*detJ*wij + N3y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23*r33*(N1x*(N3x*Nxx*detJ*wij + N3y*Nxy*detJ*wij) + N1y*(N3x*Nxy*detJ*wij + N3y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r33**2*(N1x*(N3x*Nxx*detJ*wij + N3y*Nxy*detJ*wij) + N1y*(N3x*Nxy*detJ*wij + N3y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r33*(N2x*(N3x*Nxx*detJ*wij + N3y*Nxy*detJ*wij) + N2y*(N3x*Nxy*detJ*wij + N3y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23*r33*(N2x*(N3x*Nxx*detJ*wij + N3y*Nxy*detJ*wij) + N2y*(N3x*Nxy*detJ*wij + N3y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r33**2*(N2x*(N3x*Nxx*detJ*wij + N3y*Nxy*detJ*wij) + N2y*(N3x*Nxy*detJ*wij + N3y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r33*(N3x*(N3x*Nxx*detJ*wij + N3y*Nxy*detJ*wij) + N3y*(N3x*Nxy*detJ*wij + N3y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23*r33*(N3x*(N3x*Nxx*detJ*wij + N3y*Nxy*detJ*wij) + N3y*(N3x*Nxy*detJ*wij + N3y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r33**2*(N3x*(N3x*Nxx*detJ*wij + N3y*Nxy*detJ*wij) + N3y*(N3x*Nxy*detJ*wij + N3y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r33*(N4x*(N3x*Nxx*detJ*wij + N3y*Nxy*detJ*wij) + N4y*(N3x*Nxy*detJ*wij + N3y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23*r33*(N4x*(N3x*Nxx*detJ*wij + N3y*Nxy*detJ*wij) + N4y*(N3x*Nxy*detJ*wij + N3y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r33**2*(N4x*(N3x*Nxx*detJ*wij + N3y*Nxy*detJ*wij) + N4y*(N3x*Nxy*detJ*wij + N3y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13**2*(N1x*(N4x*Nxx*detJ*wij + N4y*Nxy*detJ*wij) + N1y*(N4x*Nxy*detJ*wij + N4y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r23*(N1x*(N4x*Nxx*detJ*wij + N4y*Nxy*detJ*wij) + N1y*(N4x*Nxy*detJ*wij + N4y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r33*(N1x*(N4x*Nxx*detJ*wij + N4y*Nxy*detJ*wij) + N1y*(N4x*Nxy*detJ*wij + N4y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13**2*(N2x*(N4x*Nxx*detJ*wij + N4y*Nxy*detJ*wij) + N2y*(N4x*Nxy*detJ*wij + N4y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r23*(N2x*(N4x*Nxx*detJ*wij + N4y*Nxy*detJ*wij) + N2y*(N4x*Nxy*detJ*wij + N4y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r33*(N2x*(N4x*Nxx*detJ*wij + N4y*Nxy*detJ*wij) + N2y*(N4x*Nxy*detJ*wij + N4y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13**2*(N3x*(N4x*Nxx*detJ*wij + N4y*Nxy*detJ*wij) + N3y*(N4x*Nxy*detJ*wij + N4y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r23*(N3x*(N4x*Nxx*detJ*wij + N4y*Nxy*detJ*wij) + N3y*(N4x*Nxy*detJ*wij + N4y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r33*(N3x*(N4x*Nxx*detJ*wij + N4y*Nxy*detJ*wij) + N3y*(N4x*Nxy*detJ*wij + N4y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13**2*(N4x*(N4x*Nxx*detJ*wij + N4y*Nxy*detJ*wij) + N4y*(N4x*Nxy*detJ*wij + N4y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r23*(N4x*(N4x*Nxx*detJ*wij + N4y*Nxy*detJ*wij) + N4y*(N4x*Nxy*detJ*wij + N4y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r33*(N4x*(N4x*Nxx*detJ*wij + N4y*Nxy*detJ*wij) + N4y*(N4x*Nxy*detJ*wij + N4y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r23*(N1x*(N4x*Nxx*detJ*wij + N4y*Nxy*detJ*wij) + N1y*(N4x*Nxy*detJ*wij + N4y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23**2*(N1x*(N4x*Nxx*detJ*wij + N4y*Nxy*detJ*wij) + N1y*(N4x*Nxy*detJ*wij + N4y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23*r33*(N1x*(N4x*Nxx*detJ*wij + N4y*Nxy*detJ*wij) + N1y*(N4x*Nxy*detJ*wij + N4y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r23*(N2x*(N4x*Nxx*detJ*wij + N4y*Nxy*detJ*wij) + N2y*(N4x*Nxy*detJ*wij + N4y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23**2*(N2x*(N4x*Nxx*detJ*wij + N4y*Nxy*detJ*wij) + N2y*(N4x*Nxy*detJ*wij + N4y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23*r33*(N2x*(N4x*Nxx*detJ*wij + N4y*Nxy*detJ*wij) + N2y*(N4x*Nxy*detJ*wij + N4y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r23*(N3x*(N4x*Nxx*detJ*wij + N4y*Nxy*detJ*wij) + N3y*(N4x*Nxy*detJ*wij + N4y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23**2*(N3x*(N4x*Nxx*detJ*wij + N4y*Nxy*detJ*wij) + N3y*(N4x*Nxy*detJ*wij + N4y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23*r33*(N3x*(N4x*Nxx*detJ*wij + N4y*Nxy*detJ*wij) + N3y*(N4x*Nxy*detJ*wij + N4y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r23*(N4x*(N4x*Nxx*detJ*wij + N4y*Nxy*detJ*wij) + N4y*(N4x*Nxy*detJ*wij + N4y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23**2*(N4x*(N4x*Nxx*detJ*wij + N4y*Nxy*detJ*wij) + N4y*(N4x*Nxy*detJ*wij + N4y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23*r33*(N4x*(N4x*Nxx*detJ*wij + N4y*Nxy*detJ*wij) + N4y*(N4x*Nxy*detJ*wij + N4y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r33*(N1x*(N4x*Nxx*detJ*wij + N4y*Nxy*detJ*wij) + N1y*(N4x*Nxy*detJ*wij + N4y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23*r33*(N1x*(N4x*Nxx*detJ*wij + N4y*Nxy*detJ*wij) + N1y*(N4x*Nxy*detJ*wij + N4y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r33**2*(N1x*(N4x*Nxx*detJ*wij + N4y*Nxy*detJ*wij) + N1y*(N4x*Nxy*detJ*wij + N4y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r33*(N2x*(N4x*Nxx*detJ*wij + N4y*Nxy*detJ*wij) + N2y*(N4x*Nxy*detJ*wij + N4y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23*r33*(N2x*(N4x*Nxx*detJ*wij + N4y*Nxy*detJ*wij) + N2y*(N4x*Nxy*detJ*wij + N4y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r33**2*(N2x*(N4x*Nxx*detJ*wij + N4y*Nxy*detJ*wij) + N2y*(N4x*Nxy*detJ*wij + N4y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r33*(N3x*(N4x*Nxx*detJ*wij + N4y*Nxy*detJ*wij) + N3y*(N4x*Nxy*detJ*wij + N4y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23*r33*(N3x*(N4x*Nxx*detJ*wij + N4y*Nxy*detJ*wij) + N3y*(N4x*Nxy*detJ*wij + N4y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r33**2*(N3x*(N4x*Nxx*detJ*wij + N4y*Nxy*detJ*wij) + N3y*(N4x*Nxy*detJ*wij + N4y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r13*r33*(N4x*(N4x*Nxx*detJ*wij + N4y*Nxy*detJ*wij) + N4y*(N4x*Nxy*detJ*wij + N4y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r23*r33*(N4x*(N4x*Nxx*detJ*wij + N4y*Nxy*detJ*wij) + N4y*(N4x*Nxy*detJ*wij + N4y*Nyy*detJ*wij))
                    k += 1
                    KGv[k] += r33**2*(N4x*(N4x*Nxx*detJ*wij + N4y*Nxy*detJ*wij) + N4y*(N4x*Nxy*detJ*wij + N4y*Nyy*detJ*wij))


    cpdef void update_M(Quad4R self,
            np.ndarray[cINT, ndim=1] Mr,
            np.ndarray[cINT, ndim=1] Mc,
            np.ndarray[cDOUBLE, ndim=1] Mv,
            ShellProp prop,
            int mtype=0,
            ):
        r"""Update sparse vectors for mass matrix M

        Different integration schemes are available by means of the ``mtype``
        parameter.

        Properties
        ----------
        Mr : np.array
            Array to store row positions of sparse values
        Mc : np.array
            Array to store column positions of sparse values
        Mv : np.array
            Array to store sparse values
        mtype : int, optional
            0 for consistent mass matrix using method from Brockman 1987
            1 for reduced integration mass matrix using method from Brockman 1987
            2 for lumped mass matrix using method from Brockman 1987

        """
        cdef cINT c1, c2, c3, c4, i, j, k
        cdef double intrho, intrhoz, intrhoz2, A
        cdef double r11, r12, r13, r21, r22, r23, r31, r32, r33
        cdef double x1, x2, x3, x4
        cdef double y1, y2, y3, y4
        cdef double j11, j12, j21, j22
        cdef double N1x, N2x, N3x, N4x
        cdef double N1y, N2y, N3y, N4y
        cdef double cxx, cyy, cxy
        cdef double h11, h12, h13, h14, h22, h23, h24, h33, h34, h44, valH1
        cdef double xi, eta, wij, detJ, N1, N2, N3, N4
        cdef double points[2]
        cdef double weights[2]

        with nogil:
            intrho = prop.intrho
            intrhoz = prop.intrhoz
            intrhoz2 = prop.intrhoz2

            A = self.area
            valH1 = 0.0625*A

            #NOTE ignoring z in local coordinates
            x1 = self.probe.xe[0]
            y1 = self.probe.xe[1]
            #z1 = self.probe.xe[2]
            x2 = self.probe.xe[3]
            y2 = self.probe.xe[4]
            #z2 = self.probe.xe[5]
            x3 = self.probe.xe[6]
            y3 = self.probe.xe[7]
            #z3 = self.probe.xe[8]
            x4 = self.probe.xe[9]
            y4 = self.probe.xe[10]
            #z4 = self.probe.xe[11]

            #Local to global transformation
            r11 = self.r11
            r12 = self.r12
            r13 = self.r13
            r21 = self.r21
            r22 = self.r22
            r23 = self.r23
            r31 = self.r31
            r32 = self.r32
            r33 = self.r33

            # positions the global matrices
            c1 = self.c1
            c2 = self.c2
            c3 = self.c3
            c4 = self.c4

            if mtype == 0: # M_cons consistent mass matrix, using two-point Gauss-Legendre quadrature
                k = self.init_k_M
                Mr[k] = 0+c1
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 5+c4

                #NOTE two-point Gauss-Legendre quadrature
                wij = 1.
                points[0] = -0.5773502691896257645092
                points[1] = +0.5773502691896257645092
                h11 = 0.
                h12 = 0.
                h13 = 0.
                h14 = 0.
                h22 = 0.
                h23 = 0.
                h24 = 0.
                h33 = 0.
                h34 = 0.
                h44 = 0.
                for i in range(2):
                    xi = points[i]
                    for j in range(2):
                        eta = points[j]
                        detJ = (-2*x1 + 2*x2 + (eta + 1)*(x1 - x2 + x3 - x4))*(-2*y1 + 2*y4 + (xi + 1)*(y1 - y2) + (xi + 1)*(y3 - y4))/16. - (-2*y1 + 2*y2 + (eta + 1)*(y1 - y2 + y3 - y4))*(-2*x1 + 2*x4 + (x1 - x2)*(xi + 1) + (x3 - x4)*(xi + 1))/16.
                        N1 = eta*xi/4. - eta/4. - xi/4. + 1/4.
                        N2 = -eta*xi/4. - eta/4. + xi/4. + 1/4.
                        N3 = eta*xi/4. + eta/4. + xi/4. + 1/4.
                        N4 = -eta*xi/4. + eta/4. - xi/4. + 1/4.
                        h11 += N1**2*detJ*wij
                        h12 += N1*N2*detJ*wij
                        h13 += N1*N3*detJ*wij
                        h14 += N1*N4*detJ*wij
                        h22 += N2**2*detJ*wij
                        h23 += N2*N3*detJ*wij
                        h24 += N2*N4*detJ*wij
                        h33 += N3**2*detJ*wij
                        h34 += N3*N4*detJ*wij
                        h44 += N4**2*detJ*wij

                k = self.init_k_M
                Mv[k] += h11*intrho*r11**2 + h11*intrho*r12**2 + h11*intrho*r13**2
                k += 1
                Mv[k] += h11*intrho*r11*r21 + h11*intrho*r12*r22 + h11*intrho*r13*r23
                k += 1
                Mv[k] += h11*intrho*r11*r31 + h11*intrho*r12*r32 + h11*intrho*r13*r33
                k += 1
                Mv[k] += h11*intrhoz*r11*r22 - h11*intrhoz*r12*r21
                k += 1
                Mv[k] += h11*intrhoz*r11*r32 - h11*intrhoz*r12*r31
                k += 1
                Mv[k] += h12*intrho*r11**2 + h12*intrho*r12**2 + h12*intrho*r13**2
                k += 1
                Mv[k] += h12*intrho*r11*r21 + h12*intrho*r12*r22 + h12*intrho*r13*r23
                k += 1
                Mv[k] += h12*intrho*r11*r31 + h12*intrho*r12*r32 + h12*intrho*r13*r33
                k += 1
                Mv[k] += h12*intrhoz*r11*r22 - h12*intrhoz*r12*r21
                k += 1
                Mv[k] += h12*intrhoz*r11*r32 - h12*intrhoz*r12*r31
                k += 1
                Mv[k] += h13*intrho*r11**2 + h13*intrho*r12**2 + h13*intrho*r13**2
                k += 1
                Mv[k] += h13*intrho*r11*r21 + h13*intrho*r12*r22 + h13*intrho*r13*r23
                k += 1
                Mv[k] += h13*intrho*r11*r31 + h13*intrho*r12*r32 + h13*intrho*r13*r33
                k += 1
                Mv[k] += h13*intrhoz*r11*r22 - h13*intrhoz*r12*r21
                k += 1
                Mv[k] += h13*intrhoz*r11*r32 - h13*intrhoz*r12*r31
                k += 1
                Mv[k] += h14*intrho*r11**2 + h14*intrho*r12**2 + h14*intrho*r13**2
                k += 1
                Mv[k] += h14*intrho*r11*r21 + h14*intrho*r12*r22 + h14*intrho*r13*r23
                k += 1
                Mv[k] += h14*intrho*r11*r31 + h14*intrho*r12*r32 + h14*intrho*r13*r33
                k += 1
                Mv[k] += h14*intrhoz*r11*r22 - h14*intrhoz*r12*r21
                k += 1
                Mv[k] += h14*intrhoz*r11*r32 - h14*intrhoz*r12*r31
                k += 1
                Mv[k] += h11*intrho*r11*r21 + h11*intrho*r12*r22 + h11*intrho*r13*r23
                k += 1
                Mv[k] += h11*intrho*r21**2 + h11*intrho*r22**2 + h11*intrho*r23**2
                k += 1
                Mv[k] += h11*intrho*r21*r31 + h11*intrho*r22*r32 + h11*intrho*r23*r33
                k += 1
                Mv[k] += -h11*intrhoz*r11*r22 + h11*intrhoz*r12*r21
                k += 1
                Mv[k] += h11*intrhoz*r21*r32 - h11*intrhoz*r22*r31
                k += 1
                Mv[k] += h12*intrho*r11*r21 + h12*intrho*r12*r22 + h12*intrho*r13*r23
                k += 1
                Mv[k] += h12*intrho*r21**2 + h12*intrho*r22**2 + h12*intrho*r23**2
                k += 1
                Mv[k] += h12*intrho*r21*r31 + h12*intrho*r22*r32 + h12*intrho*r23*r33
                k += 1
                Mv[k] += -h12*intrhoz*r11*r22 + h12*intrhoz*r12*r21
                k += 1
                Mv[k] += h12*intrhoz*r21*r32 - h12*intrhoz*r22*r31
                k += 1
                Mv[k] += h13*intrho*r11*r21 + h13*intrho*r12*r22 + h13*intrho*r13*r23
                k += 1
                Mv[k] += h13*intrho*r21**2 + h13*intrho*r22**2 + h13*intrho*r23**2
                k += 1
                Mv[k] += h13*intrho*r21*r31 + h13*intrho*r22*r32 + h13*intrho*r23*r33
                k += 1
                Mv[k] += -h13*intrhoz*r11*r22 + h13*intrhoz*r12*r21
                k += 1
                Mv[k] += h13*intrhoz*r21*r32 - h13*intrhoz*r22*r31
                k += 1
                Mv[k] += h14*intrho*r11*r21 + h14*intrho*r12*r22 + h14*intrho*r13*r23
                k += 1
                Mv[k] += h14*intrho*r21**2 + h14*intrho*r22**2 + h14*intrho*r23**2
                k += 1
                Mv[k] += h14*intrho*r21*r31 + h14*intrho*r22*r32 + h14*intrho*r23*r33
                k += 1
                Mv[k] += -h14*intrhoz*r11*r22 + h14*intrhoz*r12*r21
                k += 1
                Mv[k] += h14*intrhoz*r21*r32 - h14*intrhoz*r22*r31
                k += 1
                Mv[k] += h11*intrho*r11*r31 + h11*intrho*r12*r32 + h11*intrho*r13*r33
                k += 1
                Mv[k] += h11*intrho*r21*r31 + h11*intrho*r22*r32 + h11*intrho*r23*r33
                k += 1
                Mv[k] += h11*intrho*r31**2 + h11*intrho*r32**2 + h11*intrho*r33**2
                k += 1
                Mv[k] += -h11*intrhoz*r11*r32 + h11*intrhoz*r12*r31
                k += 1
                Mv[k] += -h11*intrhoz*r21*r32 + h11*intrhoz*r22*r31
                k += 1
                Mv[k] += h12*intrho*r11*r31 + h12*intrho*r12*r32 + h12*intrho*r13*r33
                k += 1
                Mv[k] += h12*intrho*r21*r31 + h12*intrho*r22*r32 + h12*intrho*r23*r33
                k += 1
                Mv[k] += h12*intrho*r31**2 + h12*intrho*r32**2 + h12*intrho*r33**2
                k += 1
                Mv[k] += -h12*intrhoz*r11*r32 + h12*intrhoz*r12*r31
                k += 1
                Mv[k] += -h12*intrhoz*r21*r32 + h12*intrhoz*r22*r31
                k += 1
                Mv[k] += h13*intrho*r11*r31 + h13*intrho*r12*r32 + h13*intrho*r13*r33
                k += 1
                Mv[k] += h13*intrho*r21*r31 + h13*intrho*r22*r32 + h13*intrho*r23*r33
                k += 1
                Mv[k] += h13*intrho*r31**2 + h13*intrho*r32**2 + h13*intrho*r33**2
                k += 1
                Mv[k] += -h13*intrhoz*r11*r32 + h13*intrhoz*r12*r31
                k += 1
                Mv[k] += -h13*intrhoz*r21*r32 + h13*intrhoz*r22*r31
                k += 1
                Mv[k] += h14*intrho*r11*r31 + h14*intrho*r12*r32 + h14*intrho*r13*r33
                k += 1
                Mv[k] += h14*intrho*r21*r31 + h14*intrho*r22*r32 + h14*intrho*r23*r33
                k += 1
                Mv[k] += h14*intrho*r31**2 + h14*intrho*r32**2 + h14*intrho*r33**2
                k += 1
                Mv[k] += -h14*intrhoz*r11*r32 + h14*intrhoz*r12*r31
                k += 1
                Mv[k] += -h14*intrhoz*r21*r32 + h14*intrhoz*r22*r31
                k += 1
                Mv[k] += -h11*intrhoz*r11*r22 + h11*intrhoz*r12*r21
                k += 1
                Mv[k] += -h11*intrhoz*r11*r32 + h11*intrhoz*r12*r31
                k += 1
                Mv[k] += h11*intrhoz2*r11**2 + h11*intrhoz2*r12**2
                k += 1
                Mv[k] += h11*intrhoz2*r11*r21 + h11*intrhoz2*r12*r22
                k += 1
                Mv[k] += h11*intrhoz2*r11*r31 + h11*intrhoz2*r12*r32
                k += 1
                Mv[k] += -h12*intrhoz*r11*r22 + h12*intrhoz*r12*r21
                k += 1
                Mv[k] += -h12*intrhoz*r11*r32 + h12*intrhoz*r12*r31
                k += 1
                Mv[k] += h12*intrhoz2*r11**2 + h12*intrhoz2*r12**2
                k += 1
                Mv[k] += h12*intrhoz2*r11*r21 + h12*intrhoz2*r12*r22
                k += 1
                Mv[k] += h12*intrhoz2*r11*r31 + h12*intrhoz2*r12*r32
                k += 1
                Mv[k] += -h13*intrhoz*r11*r22 + h13*intrhoz*r12*r21
                k += 1
                Mv[k] += -h13*intrhoz*r11*r32 + h13*intrhoz*r12*r31
                k += 1
                Mv[k] += h13*intrhoz2*r11**2 + h13*intrhoz2*r12**2
                k += 1
                Mv[k] += h13*intrhoz2*r11*r21 + h13*intrhoz2*r12*r22
                k += 1
                Mv[k] += h13*intrhoz2*r11*r31 + h13*intrhoz2*r12*r32
                k += 1
                Mv[k] += -h14*intrhoz*r11*r22 + h14*intrhoz*r12*r21
                k += 1
                Mv[k] += -h14*intrhoz*r11*r32 + h14*intrhoz*r12*r31
                k += 1
                Mv[k] += h14*intrhoz2*r11**2 + h14*intrhoz2*r12**2
                k += 1
                Mv[k] += h14*intrhoz2*r11*r21 + h14*intrhoz2*r12*r22
                k += 1
                Mv[k] += h14*intrhoz2*r11*r31 + h14*intrhoz2*r12*r32
                k += 1
                Mv[k] += h11*intrhoz*r11*r22 - h11*intrhoz*r12*r21
                k += 1
                Mv[k] += -h11*intrhoz*r21*r32 + h11*intrhoz*r22*r31
                k += 1
                Mv[k] += h11*intrhoz2*r11*r21 + h11*intrhoz2*r12*r22
                k += 1
                Mv[k] += h11*intrhoz2*r21**2 + h11*intrhoz2*r22**2
                k += 1
                Mv[k] += h11*intrhoz2*r21*r31 + h11*intrhoz2*r22*r32
                k += 1
                Mv[k] += h12*intrhoz*r11*r22 - h12*intrhoz*r12*r21
                k += 1
                Mv[k] += -h12*intrhoz*r21*r32 + h12*intrhoz*r22*r31
                k += 1
                Mv[k] += h12*intrhoz2*r11*r21 + h12*intrhoz2*r12*r22
                k += 1
                Mv[k] += h12*intrhoz2*r21**2 + h12*intrhoz2*r22**2
                k += 1
                Mv[k] += h12*intrhoz2*r21*r31 + h12*intrhoz2*r22*r32
                k += 1
                Mv[k] += h13*intrhoz*r11*r22 - h13*intrhoz*r12*r21
                k += 1
                Mv[k] += -h13*intrhoz*r21*r32 + h13*intrhoz*r22*r31
                k += 1
                Mv[k] += h13*intrhoz2*r11*r21 + h13*intrhoz2*r12*r22
                k += 1
                Mv[k] += h13*intrhoz2*r21**2 + h13*intrhoz2*r22**2
                k += 1
                Mv[k] += h13*intrhoz2*r21*r31 + h13*intrhoz2*r22*r32
                k += 1
                Mv[k] += h14*intrhoz*r11*r22 - h14*intrhoz*r12*r21
                k += 1
                Mv[k] += -h14*intrhoz*r21*r32 + h14*intrhoz*r22*r31
                k += 1
                Mv[k] += h14*intrhoz2*r11*r21 + h14*intrhoz2*r12*r22
                k += 1
                Mv[k] += h14*intrhoz2*r21**2 + h14*intrhoz2*r22**2
                k += 1
                Mv[k] += h14*intrhoz2*r21*r31 + h14*intrhoz2*r22*r32
                k += 1
                Mv[k] += h11*intrhoz*r11*r32 - h11*intrhoz*r12*r31
                k += 1
                Mv[k] += h11*intrhoz*r21*r32 - h11*intrhoz*r22*r31
                k += 1
                Mv[k] += h11*intrhoz2*r11*r31 + h11*intrhoz2*r12*r32
                k += 1
                Mv[k] += h11*intrhoz2*r21*r31 + h11*intrhoz2*r22*r32
                k += 1
                Mv[k] += h11*intrhoz2*r31**2 + h11*intrhoz2*r32**2
                k += 1
                Mv[k] += h12*intrhoz*r11*r32 - h12*intrhoz*r12*r31
                k += 1
                Mv[k] += h12*intrhoz*r21*r32 - h12*intrhoz*r22*r31
                k += 1
                Mv[k] += h12*intrhoz2*r11*r31 + h12*intrhoz2*r12*r32
                k += 1
                Mv[k] += h12*intrhoz2*r21*r31 + h12*intrhoz2*r22*r32
                k += 1
                Mv[k] += h12*intrhoz2*r31**2 + h12*intrhoz2*r32**2
                k += 1
                Mv[k] += h13*intrhoz*r11*r32 - h13*intrhoz*r12*r31
                k += 1
                Mv[k] += h13*intrhoz*r21*r32 - h13*intrhoz*r22*r31
                k += 1
                Mv[k] += h13*intrhoz2*r11*r31 + h13*intrhoz2*r12*r32
                k += 1
                Mv[k] += h13*intrhoz2*r21*r31 + h13*intrhoz2*r22*r32
                k += 1
                Mv[k] += h13*intrhoz2*r31**2 + h13*intrhoz2*r32**2
                k += 1
                Mv[k] += h14*intrhoz*r11*r32 - h14*intrhoz*r12*r31
                k += 1
                Mv[k] += h14*intrhoz*r21*r32 - h14*intrhoz*r22*r31
                k += 1
                Mv[k] += h14*intrhoz2*r11*r31 + h14*intrhoz2*r12*r32
                k += 1
                Mv[k] += h14*intrhoz2*r21*r31 + h14*intrhoz2*r22*r32
                k += 1
                Mv[k] += h14*intrhoz2*r31**2 + h14*intrhoz2*r32**2
                k += 1
                Mv[k] += h12*intrho*r11**2 + h12*intrho*r12**2 + h12*intrho*r13**2
                k += 1
                Mv[k] += h12*intrho*r11*r21 + h12*intrho*r12*r22 + h12*intrho*r13*r23
                k += 1
                Mv[k] += h12*intrho*r11*r31 + h12*intrho*r12*r32 + h12*intrho*r13*r33
                k += 1
                Mv[k] += h12*intrhoz*r11*r22 - h12*intrhoz*r12*r21
                k += 1
                Mv[k] += h12*intrhoz*r11*r32 - h12*intrhoz*r12*r31
                k += 1
                Mv[k] += h22*intrho*r11**2 + h22*intrho*r12**2 + h22*intrho*r13**2
                k += 1
                Mv[k] += h22*intrho*r11*r21 + h22*intrho*r12*r22 + h22*intrho*r13*r23
                k += 1
                Mv[k] += h22*intrho*r11*r31 + h22*intrho*r12*r32 + h22*intrho*r13*r33
                k += 1
                Mv[k] += h22*intrhoz*r11*r22 - h22*intrhoz*r12*r21
                k += 1
                Mv[k] += h22*intrhoz*r11*r32 - h22*intrhoz*r12*r31
                k += 1
                Mv[k] += h23*intrho*r11**2 + h23*intrho*r12**2 + h23*intrho*r13**2
                k += 1
                Mv[k] += h23*intrho*r11*r21 + h23*intrho*r12*r22 + h23*intrho*r13*r23
                k += 1
                Mv[k] += h23*intrho*r11*r31 + h23*intrho*r12*r32 + h23*intrho*r13*r33
                k += 1
                Mv[k] += h23*intrhoz*r11*r22 - h23*intrhoz*r12*r21
                k += 1
                Mv[k] += h23*intrhoz*r11*r32 - h23*intrhoz*r12*r31
                k += 1
                Mv[k] += h24*intrho*r11**2 + h24*intrho*r12**2 + h24*intrho*r13**2
                k += 1
                Mv[k] += h24*intrho*r11*r21 + h24*intrho*r12*r22 + h24*intrho*r13*r23
                k += 1
                Mv[k] += h24*intrho*r11*r31 + h24*intrho*r12*r32 + h24*intrho*r13*r33
                k += 1
                Mv[k] += h24*intrhoz*r11*r22 - h24*intrhoz*r12*r21
                k += 1
                Mv[k] += h24*intrhoz*r11*r32 - h24*intrhoz*r12*r31
                k += 1
                Mv[k] += h12*intrho*r11*r21 + h12*intrho*r12*r22 + h12*intrho*r13*r23
                k += 1
                Mv[k] += h12*intrho*r21**2 + h12*intrho*r22**2 + h12*intrho*r23**2
                k += 1
                Mv[k] += h12*intrho*r21*r31 + h12*intrho*r22*r32 + h12*intrho*r23*r33
                k += 1
                Mv[k] += -h12*intrhoz*r11*r22 + h12*intrhoz*r12*r21
                k += 1
                Mv[k] += h12*intrhoz*r21*r32 - h12*intrhoz*r22*r31
                k += 1
                Mv[k] += h22*intrho*r11*r21 + h22*intrho*r12*r22 + h22*intrho*r13*r23
                k += 1
                Mv[k] += h22*intrho*r21**2 + h22*intrho*r22**2 + h22*intrho*r23**2
                k += 1
                Mv[k] += h22*intrho*r21*r31 + h22*intrho*r22*r32 + h22*intrho*r23*r33
                k += 1
                Mv[k] += -h22*intrhoz*r11*r22 + h22*intrhoz*r12*r21
                k += 1
                Mv[k] += h22*intrhoz*r21*r32 - h22*intrhoz*r22*r31
                k += 1
                Mv[k] += h23*intrho*r11*r21 + h23*intrho*r12*r22 + h23*intrho*r13*r23
                k += 1
                Mv[k] += h23*intrho*r21**2 + h23*intrho*r22**2 + h23*intrho*r23**2
                k += 1
                Mv[k] += h23*intrho*r21*r31 + h23*intrho*r22*r32 + h23*intrho*r23*r33
                k += 1
                Mv[k] += -h23*intrhoz*r11*r22 + h23*intrhoz*r12*r21
                k += 1
                Mv[k] += h23*intrhoz*r21*r32 - h23*intrhoz*r22*r31
                k += 1
                Mv[k] += h24*intrho*r11*r21 + h24*intrho*r12*r22 + h24*intrho*r13*r23
                k += 1
                Mv[k] += h24*intrho*r21**2 + h24*intrho*r22**2 + h24*intrho*r23**2
                k += 1
                Mv[k] += h24*intrho*r21*r31 + h24*intrho*r22*r32 + h24*intrho*r23*r33
                k += 1
                Mv[k] += -h24*intrhoz*r11*r22 + h24*intrhoz*r12*r21
                k += 1
                Mv[k] += h24*intrhoz*r21*r32 - h24*intrhoz*r22*r31
                k += 1
                Mv[k] += h12*intrho*r11*r31 + h12*intrho*r12*r32 + h12*intrho*r13*r33
                k += 1
                Mv[k] += h12*intrho*r21*r31 + h12*intrho*r22*r32 + h12*intrho*r23*r33
                k += 1
                Mv[k] += h12*intrho*r31**2 + h12*intrho*r32**2 + h12*intrho*r33**2
                k += 1
                Mv[k] += -h12*intrhoz*r11*r32 + h12*intrhoz*r12*r31
                k += 1
                Mv[k] += -h12*intrhoz*r21*r32 + h12*intrhoz*r22*r31
                k += 1
                Mv[k] += h22*intrho*r11*r31 + h22*intrho*r12*r32 + h22*intrho*r13*r33
                k += 1
                Mv[k] += h22*intrho*r21*r31 + h22*intrho*r22*r32 + h22*intrho*r23*r33
                k += 1
                Mv[k] += h22*intrho*r31**2 + h22*intrho*r32**2 + h22*intrho*r33**2
                k += 1
                Mv[k] += -h22*intrhoz*r11*r32 + h22*intrhoz*r12*r31
                k += 1
                Mv[k] += -h22*intrhoz*r21*r32 + h22*intrhoz*r22*r31
                k += 1
                Mv[k] += h23*intrho*r11*r31 + h23*intrho*r12*r32 + h23*intrho*r13*r33
                k += 1
                Mv[k] += h23*intrho*r21*r31 + h23*intrho*r22*r32 + h23*intrho*r23*r33
                k += 1
                Mv[k] += h23*intrho*r31**2 + h23*intrho*r32**2 + h23*intrho*r33**2
                k += 1
                Mv[k] += -h23*intrhoz*r11*r32 + h23*intrhoz*r12*r31
                k += 1
                Mv[k] += -h23*intrhoz*r21*r32 + h23*intrhoz*r22*r31
                k += 1
                Mv[k] += h24*intrho*r11*r31 + h24*intrho*r12*r32 + h24*intrho*r13*r33
                k += 1
                Mv[k] += h24*intrho*r21*r31 + h24*intrho*r22*r32 + h24*intrho*r23*r33
                k += 1
                Mv[k] += h24*intrho*r31**2 + h24*intrho*r32**2 + h24*intrho*r33**2
                k += 1
                Mv[k] += -h24*intrhoz*r11*r32 + h24*intrhoz*r12*r31
                k += 1
                Mv[k] += -h24*intrhoz*r21*r32 + h24*intrhoz*r22*r31
                k += 1
                Mv[k] += -h12*intrhoz*r11*r22 + h12*intrhoz*r12*r21
                k += 1
                Mv[k] += -h12*intrhoz*r11*r32 + h12*intrhoz*r12*r31
                k += 1
                Mv[k] += h12*intrhoz2*r11**2 + h12*intrhoz2*r12**2
                k += 1
                Mv[k] += h12*intrhoz2*r11*r21 + h12*intrhoz2*r12*r22
                k += 1
                Mv[k] += h12*intrhoz2*r11*r31 + h12*intrhoz2*r12*r32
                k += 1
                Mv[k] += -h22*intrhoz*r11*r22 + h22*intrhoz*r12*r21
                k += 1
                Mv[k] += -h22*intrhoz*r11*r32 + h22*intrhoz*r12*r31
                k += 1
                Mv[k] += h22*intrhoz2*r11**2 + h22*intrhoz2*r12**2
                k += 1
                Mv[k] += h22*intrhoz2*r11*r21 + h22*intrhoz2*r12*r22
                k += 1
                Mv[k] += h22*intrhoz2*r11*r31 + h22*intrhoz2*r12*r32
                k += 1
                Mv[k] += -h23*intrhoz*r11*r22 + h23*intrhoz*r12*r21
                k += 1
                Mv[k] += -h23*intrhoz*r11*r32 + h23*intrhoz*r12*r31
                k += 1
                Mv[k] += h23*intrhoz2*r11**2 + h23*intrhoz2*r12**2
                k += 1
                Mv[k] += h23*intrhoz2*r11*r21 + h23*intrhoz2*r12*r22
                k += 1
                Mv[k] += h23*intrhoz2*r11*r31 + h23*intrhoz2*r12*r32
                k += 1
                Mv[k] += -h24*intrhoz*r11*r22 + h24*intrhoz*r12*r21
                k += 1
                Mv[k] += -h24*intrhoz*r11*r32 + h24*intrhoz*r12*r31
                k += 1
                Mv[k] += h24*intrhoz2*r11**2 + h24*intrhoz2*r12**2
                k += 1
                Mv[k] += h24*intrhoz2*r11*r21 + h24*intrhoz2*r12*r22
                k += 1
                Mv[k] += h24*intrhoz2*r11*r31 + h24*intrhoz2*r12*r32
                k += 1
                Mv[k] += h12*intrhoz*r11*r22 - h12*intrhoz*r12*r21
                k += 1
                Mv[k] += -h12*intrhoz*r21*r32 + h12*intrhoz*r22*r31
                k += 1
                Mv[k] += h12*intrhoz2*r11*r21 + h12*intrhoz2*r12*r22
                k += 1
                Mv[k] += h12*intrhoz2*r21**2 + h12*intrhoz2*r22**2
                k += 1
                Mv[k] += h12*intrhoz2*r21*r31 + h12*intrhoz2*r22*r32
                k += 1
                Mv[k] += h22*intrhoz*r11*r22 - h22*intrhoz*r12*r21
                k += 1
                Mv[k] += -h22*intrhoz*r21*r32 + h22*intrhoz*r22*r31
                k += 1
                Mv[k] += h22*intrhoz2*r11*r21 + h22*intrhoz2*r12*r22
                k += 1
                Mv[k] += h22*intrhoz2*r21**2 + h22*intrhoz2*r22**2
                k += 1
                Mv[k] += h22*intrhoz2*r21*r31 + h22*intrhoz2*r22*r32
                k += 1
                Mv[k] += h23*intrhoz*r11*r22 - h23*intrhoz*r12*r21
                k += 1
                Mv[k] += -h23*intrhoz*r21*r32 + h23*intrhoz*r22*r31
                k += 1
                Mv[k] += h23*intrhoz2*r11*r21 + h23*intrhoz2*r12*r22
                k += 1
                Mv[k] += h23*intrhoz2*r21**2 + h23*intrhoz2*r22**2
                k += 1
                Mv[k] += h23*intrhoz2*r21*r31 + h23*intrhoz2*r22*r32
                k += 1
                Mv[k] += h24*intrhoz*r11*r22 - h24*intrhoz*r12*r21
                k += 1
                Mv[k] += -h24*intrhoz*r21*r32 + h24*intrhoz*r22*r31
                k += 1
                Mv[k] += h24*intrhoz2*r11*r21 + h24*intrhoz2*r12*r22
                k += 1
                Mv[k] += h24*intrhoz2*r21**2 + h24*intrhoz2*r22**2
                k += 1
                Mv[k] += h24*intrhoz2*r21*r31 + h24*intrhoz2*r22*r32
                k += 1
                Mv[k] += h12*intrhoz*r11*r32 - h12*intrhoz*r12*r31
                k += 1
                Mv[k] += h12*intrhoz*r21*r32 - h12*intrhoz*r22*r31
                k += 1
                Mv[k] += h12*intrhoz2*r11*r31 + h12*intrhoz2*r12*r32
                k += 1
                Mv[k] += h12*intrhoz2*r21*r31 + h12*intrhoz2*r22*r32
                k += 1
                Mv[k] += h12*intrhoz2*r31**2 + h12*intrhoz2*r32**2
                k += 1
                Mv[k] += h22*intrhoz*r11*r32 - h22*intrhoz*r12*r31
                k += 1
                Mv[k] += h22*intrhoz*r21*r32 - h22*intrhoz*r22*r31
                k += 1
                Mv[k] += h22*intrhoz2*r11*r31 + h22*intrhoz2*r12*r32
                k += 1
                Mv[k] += h22*intrhoz2*r21*r31 + h22*intrhoz2*r22*r32
                k += 1
                Mv[k] += h22*intrhoz2*r31**2 + h22*intrhoz2*r32**2
                k += 1
                Mv[k] += h23*intrhoz*r11*r32 - h23*intrhoz*r12*r31
                k += 1
                Mv[k] += h23*intrhoz*r21*r32 - h23*intrhoz*r22*r31
                k += 1
                Mv[k] += h23*intrhoz2*r11*r31 + h23*intrhoz2*r12*r32
                k += 1
                Mv[k] += h23*intrhoz2*r21*r31 + h23*intrhoz2*r22*r32
                k += 1
                Mv[k] += h23*intrhoz2*r31**2 + h23*intrhoz2*r32**2
                k += 1
                Mv[k] += h24*intrhoz*r11*r32 - h24*intrhoz*r12*r31
                k += 1
                Mv[k] += h24*intrhoz*r21*r32 - h24*intrhoz*r22*r31
                k += 1
                Mv[k] += h24*intrhoz2*r11*r31 + h24*intrhoz2*r12*r32
                k += 1
                Mv[k] += h24*intrhoz2*r21*r31 + h24*intrhoz2*r22*r32
                k += 1
                Mv[k] += h24*intrhoz2*r31**2 + h24*intrhoz2*r32**2
                k += 1
                Mv[k] += h13*intrho*r11**2 + h13*intrho*r12**2 + h13*intrho*r13**2
                k += 1
                Mv[k] += h13*intrho*r11*r21 + h13*intrho*r12*r22 + h13*intrho*r13*r23
                k += 1
                Mv[k] += h13*intrho*r11*r31 + h13*intrho*r12*r32 + h13*intrho*r13*r33
                k += 1
                Mv[k] += h13*intrhoz*r11*r22 - h13*intrhoz*r12*r21
                k += 1
                Mv[k] += h13*intrhoz*r11*r32 - h13*intrhoz*r12*r31
                k += 1
                Mv[k] += h23*intrho*r11**2 + h23*intrho*r12**2 + h23*intrho*r13**2
                k += 1
                Mv[k] += h23*intrho*r11*r21 + h23*intrho*r12*r22 + h23*intrho*r13*r23
                k += 1
                Mv[k] += h23*intrho*r11*r31 + h23*intrho*r12*r32 + h23*intrho*r13*r33
                k += 1
                Mv[k] += h23*intrhoz*r11*r22 - h23*intrhoz*r12*r21
                k += 1
                Mv[k] += h23*intrhoz*r11*r32 - h23*intrhoz*r12*r31
                k += 1
                Mv[k] += h33*intrho*r11**2 + h33*intrho*r12**2 + h33*intrho*r13**2
                k += 1
                Mv[k] += h33*intrho*r11*r21 + h33*intrho*r12*r22 + h33*intrho*r13*r23
                k += 1
                Mv[k] += h33*intrho*r11*r31 + h33*intrho*r12*r32 + h33*intrho*r13*r33
                k += 1
                Mv[k] += h33*intrhoz*r11*r22 - h33*intrhoz*r12*r21
                k += 1
                Mv[k] += h33*intrhoz*r11*r32 - h33*intrhoz*r12*r31
                k += 1
                Mv[k] += h34*intrho*r11**2 + h34*intrho*r12**2 + h34*intrho*r13**2
                k += 1
                Mv[k] += h34*intrho*r11*r21 + h34*intrho*r12*r22 + h34*intrho*r13*r23
                k += 1
                Mv[k] += h34*intrho*r11*r31 + h34*intrho*r12*r32 + h34*intrho*r13*r33
                k += 1
                Mv[k] += h34*intrhoz*r11*r22 - h34*intrhoz*r12*r21
                k += 1
                Mv[k] += h34*intrhoz*r11*r32 - h34*intrhoz*r12*r31
                k += 1
                Mv[k] += h13*intrho*r11*r21 + h13*intrho*r12*r22 + h13*intrho*r13*r23
                k += 1
                Mv[k] += h13*intrho*r21**2 + h13*intrho*r22**2 + h13*intrho*r23**2
                k += 1
                Mv[k] += h13*intrho*r21*r31 + h13*intrho*r22*r32 + h13*intrho*r23*r33
                k += 1
                Mv[k] += -h13*intrhoz*r11*r22 + h13*intrhoz*r12*r21
                k += 1
                Mv[k] += h13*intrhoz*r21*r32 - h13*intrhoz*r22*r31
                k += 1
                Mv[k] += h23*intrho*r11*r21 + h23*intrho*r12*r22 + h23*intrho*r13*r23
                k += 1
                Mv[k] += h23*intrho*r21**2 + h23*intrho*r22**2 + h23*intrho*r23**2
                k += 1
                Mv[k] += h23*intrho*r21*r31 + h23*intrho*r22*r32 + h23*intrho*r23*r33
                k += 1
                Mv[k] += -h23*intrhoz*r11*r22 + h23*intrhoz*r12*r21
                k += 1
                Mv[k] += h23*intrhoz*r21*r32 - h23*intrhoz*r22*r31
                k += 1
                Mv[k] += h33*intrho*r11*r21 + h33*intrho*r12*r22 + h33*intrho*r13*r23
                k += 1
                Mv[k] += h33*intrho*r21**2 + h33*intrho*r22**2 + h33*intrho*r23**2
                k += 1
                Mv[k] += h33*intrho*r21*r31 + h33*intrho*r22*r32 + h33*intrho*r23*r33
                k += 1
                Mv[k] += -h33*intrhoz*r11*r22 + h33*intrhoz*r12*r21
                k += 1
                Mv[k] += h33*intrhoz*r21*r32 - h33*intrhoz*r22*r31
                k += 1
                Mv[k] += h34*intrho*r11*r21 + h34*intrho*r12*r22 + h34*intrho*r13*r23
                k += 1
                Mv[k] += h34*intrho*r21**2 + h34*intrho*r22**2 + h34*intrho*r23**2
                k += 1
                Mv[k] += h34*intrho*r21*r31 + h34*intrho*r22*r32 + h34*intrho*r23*r33
                k += 1
                Mv[k] += -h34*intrhoz*r11*r22 + h34*intrhoz*r12*r21
                k += 1
                Mv[k] += h34*intrhoz*r21*r32 - h34*intrhoz*r22*r31
                k += 1
                Mv[k] += h13*intrho*r11*r31 + h13*intrho*r12*r32 + h13*intrho*r13*r33
                k += 1
                Mv[k] += h13*intrho*r21*r31 + h13*intrho*r22*r32 + h13*intrho*r23*r33
                k += 1
                Mv[k] += h13*intrho*r31**2 + h13*intrho*r32**2 + h13*intrho*r33**2
                k += 1
                Mv[k] += -h13*intrhoz*r11*r32 + h13*intrhoz*r12*r31
                k += 1
                Mv[k] += -h13*intrhoz*r21*r32 + h13*intrhoz*r22*r31
                k += 1
                Mv[k] += h23*intrho*r11*r31 + h23*intrho*r12*r32 + h23*intrho*r13*r33
                k += 1
                Mv[k] += h23*intrho*r21*r31 + h23*intrho*r22*r32 + h23*intrho*r23*r33
                k += 1
                Mv[k] += h23*intrho*r31**2 + h23*intrho*r32**2 + h23*intrho*r33**2
                k += 1
                Mv[k] += -h23*intrhoz*r11*r32 + h23*intrhoz*r12*r31
                k += 1
                Mv[k] += -h23*intrhoz*r21*r32 + h23*intrhoz*r22*r31
                k += 1
                Mv[k] += h33*intrho*r11*r31 + h33*intrho*r12*r32 + h33*intrho*r13*r33
                k += 1
                Mv[k] += h33*intrho*r21*r31 + h33*intrho*r22*r32 + h33*intrho*r23*r33
                k += 1
                Mv[k] += h33*intrho*r31**2 + h33*intrho*r32**2 + h33*intrho*r33**2
                k += 1
                Mv[k] += -h33*intrhoz*r11*r32 + h33*intrhoz*r12*r31
                k += 1
                Mv[k] += -h33*intrhoz*r21*r32 + h33*intrhoz*r22*r31
                k += 1
                Mv[k] += h34*intrho*r11*r31 + h34*intrho*r12*r32 + h34*intrho*r13*r33
                k += 1
                Mv[k] += h34*intrho*r21*r31 + h34*intrho*r22*r32 + h34*intrho*r23*r33
                k += 1
                Mv[k] += h34*intrho*r31**2 + h34*intrho*r32**2 + h34*intrho*r33**2
                k += 1
                Mv[k] += -h34*intrhoz*r11*r32 + h34*intrhoz*r12*r31
                k += 1
                Mv[k] += -h34*intrhoz*r21*r32 + h34*intrhoz*r22*r31
                k += 1
                Mv[k] += -h13*intrhoz*r11*r22 + h13*intrhoz*r12*r21
                k += 1
                Mv[k] += -h13*intrhoz*r11*r32 + h13*intrhoz*r12*r31
                k += 1
                Mv[k] += h13*intrhoz2*r11**2 + h13*intrhoz2*r12**2
                k += 1
                Mv[k] += h13*intrhoz2*r11*r21 + h13*intrhoz2*r12*r22
                k += 1
                Mv[k] += h13*intrhoz2*r11*r31 + h13*intrhoz2*r12*r32
                k += 1
                Mv[k] += -h23*intrhoz*r11*r22 + h23*intrhoz*r12*r21
                k += 1
                Mv[k] += -h23*intrhoz*r11*r32 + h23*intrhoz*r12*r31
                k += 1
                Mv[k] += h23*intrhoz2*r11**2 + h23*intrhoz2*r12**2
                k += 1
                Mv[k] += h23*intrhoz2*r11*r21 + h23*intrhoz2*r12*r22
                k += 1
                Mv[k] += h23*intrhoz2*r11*r31 + h23*intrhoz2*r12*r32
                k += 1
                Mv[k] += -h33*intrhoz*r11*r22 + h33*intrhoz*r12*r21
                k += 1
                Mv[k] += -h33*intrhoz*r11*r32 + h33*intrhoz*r12*r31
                k += 1
                Mv[k] += h33*intrhoz2*r11**2 + h33*intrhoz2*r12**2
                k += 1
                Mv[k] += h33*intrhoz2*r11*r21 + h33*intrhoz2*r12*r22
                k += 1
                Mv[k] += h33*intrhoz2*r11*r31 + h33*intrhoz2*r12*r32
                k += 1
                Mv[k] += -h34*intrhoz*r11*r22 + h34*intrhoz*r12*r21
                k += 1
                Mv[k] += -h34*intrhoz*r11*r32 + h34*intrhoz*r12*r31
                k += 1
                Mv[k] += h34*intrhoz2*r11**2 + h34*intrhoz2*r12**2
                k += 1
                Mv[k] += h34*intrhoz2*r11*r21 + h34*intrhoz2*r12*r22
                k += 1
                Mv[k] += h34*intrhoz2*r11*r31 + h34*intrhoz2*r12*r32
                k += 1
                Mv[k] += h13*intrhoz*r11*r22 - h13*intrhoz*r12*r21
                k += 1
                Mv[k] += -h13*intrhoz*r21*r32 + h13*intrhoz*r22*r31
                k += 1
                Mv[k] += h13*intrhoz2*r11*r21 + h13*intrhoz2*r12*r22
                k += 1
                Mv[k] += h13*intrhoz2*r21**2 + h13*intrhoz2*r22**2
                k += 1
                Mv[k] += h13*intrhoz2*r21*r31 + h13*intrhoz2*r22*r32
                k += 1
                Mv[k] += h23*intrhoz*r11*r22 - h23*intrhoz*r12*r21
                k += 1
                Mv[k] += -h23*intrhoz*r21*r32 + h23*intrhoz*r22*r31
                k += 1
                Mv[k] += h23*intrhoz2*r11*r21 + h23*intrhoz2*r12*r22
                k += 1
                Mv[k] += h23*intrhoz2*r21**2 + h23*intrhoz2*r22**2
                k += 1
                Mv[k] += h23*intrhoz2*r21*r31 + h23*intrhoz2*r22*r32
                k += 1
                Mv[k] += h33*intrhoz*r11*r22 - h33*intrhoz*r12*r21
                k += 1
                Mv[k] += -h33*intrhoz*r21*r32 + h33*intrhoz*r22*r31
                k += 1
                Mv[k] += h33*intrhoz2*r11*r21 + h33*intrhoz2*r12*r22
                k += 1
                Mv[k] += h33*intrhoz2*r21**2 + h33*intrhoz2*r22**2
                k += 1
                Mv[k] += h33*intrhoz2*r21*r31 + h33*intrhoz2*r22*r32
                k += 1
                Mv[k] += h34*intrhoz*r11*r22 - h34*intrhoz*r12*r21
                k += 1
                Mv[k] += -h34*intrhoz*r21*r32 + h34*intrhoz*r22*r31
                k += 1
                Mv[k] += h34*intrhoz2*r11*r21 + h34*intrhoz2*r12*r22
                k += 1
                Mv[k] += h34*intrhoz2*r21**2 + h34*intrhoz2*r22**2
                k += 1
                Mv[k] += h34*intrhoz2*r21*r31 + h34*intrhoz2*r22*r32
                k += 1
                Mv[k] += h13*intrhoz*r11*r32 - h13*intrhoz*r12*r31
                k += 1
                Mv[k] += h13*intrhoz*r21*r32 - h13*intrhoz*r22*r31
                k += 1
                Mv[k] += h13*intrhoz2*r11*r31 + h13*intrhoz2*r12*r32
                k += 1
                Mv[k] += h13*intrhoz2*r21*r31 + h13*intrhoz2*r22*r32
                k += 1
                Mv[k] += h13*intrhoz2*r31**2 + h13*intrhoz2*r32**2
                k += 1
                Mv[k] += h23*intrhoz*r11*r32 - h23*intrhoz*r12*r31
                k += 1
                Mv[k] += h23*intrhoz*r21*r32 - h23*intrhoz*r22*r31
                k += 1
                Mv[k] += h23*intrhoz2*r11*r31 + h23*intrhoz2*r12*r32
                k += 1
                Mv[k] += h23*intrhoz2*r21*r31 + h23*intrhoz2*r22*r32
                k += 1
                Mv[k] += h23*intrhoz2*r31**2 + h23*intrhoz2*r32**2
                k += 1
                Mv[k] += h33*intrhoz*r11*r32 - h33*intrhoz*r12*r31
                k += 1
                Mv[k] += h33*intrhoz*r21*r32 - h33*intrhoz*r22*r31
                k += 1
                Mv[k] += h33*intrhoz2*r11*r31 + h33*intrhoz2*r12*r32
                k += 1
                Mv[k] += h33*intrhoz2*r21*r31 + h33*intrhoz2*r22*r32
                k += 1
                Mv[k] += h33*intrhoz2*r31**2 + h33*intrhoz2*r32**2
                k += 1
                Mv[k] += h34*intrhoz*r11*r32 - h34*intrhoz*r12*r31
                k += 1
                Mv[k] += h34*intrhoz*r21*r32 - h34*intrhoz*r22*r31
                k += 1
                Mv[k] += h34*intrhoz2*r11*r31 + h34*intrhoz2*r12*r32
                k += 1
                Mv[k] += h34*intrhoz2*r21*r31 + h34*intrhoz2*r22*r32
                k += 1
                Mv[k] += h34*intrhoz2*r31**2 + h34*intrhoz2*r32**2
                k += 1
                Mv[k] += h14*intrho*r11**2 + h14*intrho*r12**2 + h14*intrho*r13**2
                k += 1
                Mv[k] += h14*intrho*r11*r21 + h14*intrho*r12*r22 + h14*intrho*r13*r23
                k += 1
                Mv[k] += h14*intrho*r11*r31 + h14*intrho*r12*r32 + h14*intrho*r13*r33
                k += 1
                Mv[k] += h14*intrhoz*r11*r22 - h14*intrhoz*r12*r21
                k += 1
                Mv[k] += h14*intrhoz*r11*r32 - h14*intrhoz*r12*r31
                k += 1
                Mv[k] += h24*intrho*r11**2 + h24*intrho*r12**2 + h24*intrho*r13**2
                k += 1
                Mv[k] += h24*intrho*r11*r21 + h24*intrho*r12*r22 + h24*intrho*r13*r23
                k += 1
                Mv[k] += h24*intrho*r11*r31 + h24*intrho*r12*r32 + h24*intrho*r13*r33
                k += 1
                Mv[k] += h24*intrhoz*r11*r22 - h24*intrhoz*r12*r21
                k += 1
                Mv[k] += h24*intrhoz*r11*r32 - h24*intrhoz*r12*r31
                k += 1
                Mv[k] += h34*intrho*r11**2 + h34*intrho*r12**2 + h34*intrho*r13**2
                k += 1
                Mv[k] += h34*intrho*r11*r21 + h34*intrho*r12*r22 + h34*intrho*r13*r23
                k += 1
                Mv[k] += h34*intrho*r11*r31 + h34*intrho*r12*r32 + h34*intrho*r13*r33
                k += 1
                Mv[k] += h34*intrhoz*r11*r22 - h34*intrhoz*r12*r21
                k += 1
                Mv[k] += h34*intrhoz*r11*r32 - h34*intrhoz*r12*r31
                k += 1
                Mv[k] += h44*intrho*r11**2 + h44*intrho*r12**2 + h44*intrho*r13**2
                k += 1
                Mv[k] += h44*intrho*r11*r21 + h44*intrho*r12*r22 + h44*intrho*r13*r23
                k += 1
                Mv[k] += h44*intrho*r11*r31 + h44*intrho*r12*r32 + h44*intrho*r13*r33
                k += 1
                Mv[k] += h44*intrhoz*r11*r22 - h44*intrhoz*r12*r21
                k += 1
                Mv[k] += h44*intrhoz*r11*r32 - h44*intrhoz*r12*r31
                k += 1
                Mv[k] += h14*intrho*r11*r21 + h14*intrho*r12*r22 + h14*intrho*r13*r23
                k += 1
                Mv[k] += h14*intrho*r21**2 + h14*intrho*r22**2 + h14*intrho*r23**2
                k += 1
                Mv[k] += h14*intrho*r21*r31 + h14*intrho*r22*r32 + h14*intrho*r23*r33
                k += 1
                Mv[k] += -h14*intrhoz*r11*r22 + h14*intrhoz*r12*r21
                k += 1
                Mv[k] += h14*intrhoz*r21*r32 - h14*intrhoz*r22*r31
                k += 1
                Mv[k] += h24*intrho*r11*r21 + h24*intrho*r12*r22 + h24*intrho*r13*r23
                k += 1
                Mv[k] += h24*intrho*r21**2 + h24*intrho*r22**2 + h24*intrho*r23**2
                k += 1
                Mv[k] += h24*intrho*r21*r31 + h24*intrho*r22*r32 + h24*intrho*r23*r33
                k += 1
                Mv[k] += -h24*intrhoz*r11*r22 + h24*intrhoz*r12*r21
                k += 1
                Mv[k] += h24*intrhoz*r21*r32 - h24*intrhoz*r22*r31
                k += 1
                Mv[k] += h34*intrho*r11*r21 + h34*intrho*r12*r22 + h34*intrho*r13*r23
                k += 1
                Mv[k] += h34*intrho*r21**2 + h34*intrho*r22**2 + h34*intrho*r23**2
                k += 1
                Mv[k] += h34*intrho*r21*r31 + h34*intrho*r22*r32 + h34*intrho*r23*r33
                k += 1
                Mv[k] += -h34*intrhoz*r11*r22 + h34*intrhoz*r12*r21
                k += 1
                Mv[k] += h34*intrhoz*r21*r32 - h34*intrhoz*r22*r31
                k += 1
                Mv[k] += h44*intrho*r11*r21 + h44*intrho*r12*r22 + h44*intrho*r13*r23
                k += 1
                Mv[k] += h44*intrho*r21**2 + h44*intrho*r22**2 + h44*intrho*r23**2
                k += 1
                Mv[k] += h44*intrho*r21*r31 + h44*intrho*r22*r32 + h44*intrho*r23*r33
                k += 1
                Mv[k] += -h44*intrhoz*r11*r22 + h44*intrhoz*r12*r21
                k += 1
                Mv[k] += h44*intrhoz*r21*r32 - h44*intrhoz*r22*r31
                k += 1
                Mv[k] += h14*intrho*r11*r31 + h14*intrho*r12*r32 + h14*intrho*r13*r33
                k += 1
                Mv[k] += h14*intrho*r21*r31 + h14*intrho*r22*r32 + h14*intrho*r23*r33
                k += 1
                Mv[k] += h14*intrho*r31**2 + h14*intrho*r32**2 + h14*intrho*r33**2
                k += 1
                Mv[k] += -h14*intrhoz*r11*r32 + h14*intrhoz*r12*r31
                k += 1
                Mv[k] += -h14*intrhoz*r21*r32 + h14*intrhoz*r22*r31
                k += 1
                Mv[k] += h24*intrho*r11*r31 + h24*intrho*r12*r32 + h24*intrho*r13*r33
                k += 1
                Mv[k] += h24*intrho*r21*r31 + h24*intrho*r22*r32 + h24*intrho*r23*r33
                k += 1
                Mv[k] += h24*intrho*r31**2 + h24*intrho*r32**2 + h24*intrho*r33**2
                k += 1
                Mv[k] += -h24*intrhoz*r11*r32 + h24*intrhoz*r12*r31
                k += 1
                Mv[k] += -h24*intrhoz*r21*r32 + h24*intrhoz*r22*r31
                k += 1
                Mv[k] += h34*intrho*r11*r31 + h34*intrho*r12*r32 + h34*intrho*r13*r33
                k += 1
                Mv[k] += h34*intrho*r21*r31 + h34*intrho*r22*r32 + h34*intrho*r23*r33
                k += 1
                Mv[k] += h34*intrho*r31**2 + h34*intrho*r32**2 + h34*intrho*r33**2
                k += 1
                Mv[k] += -h34*intrhoz*r11*r32 + h34*intrhoz*r12*r31
                k += 1
                Mv[k] += -h34*intrhoz*r21*r32 + h34*intrhoz*r22*r31
                k += 1
                Mv[k] += h44*intrho*r11*r31 + h44*intrho*r12*r32 + h44*intrho*r13*r33
                k += 1
                Mv[k] += h44*intrho*r21*r31 + h44*intrho*r22*r32 + h44*intrho*r23*r33
                k += 1
                Mv[k] += h44*intrho*r31**2 + h44*intrho*r32**2 + h44*intrho*r33**2
                k += 1
                Mv[k] += -h44*intrhoz*r11*r32 + h44*intrhoz*r12*r31
                k += 1
                Mv[k] += -h44*intrhoz*r21*r32 + h44*intrhoz*r22*r31
                k += 1
                Mv[k] += -h14*intrhoz*r11*r22 + h14*intrhoz*r12*r21
                k += 1
                Mv[k] += -h14*intrhoz*r11*r32 + h14*intrhoz*r12*r31
                k += 1
                Mv[k] += h14*intrhoz2*r11**2 + h14*intrhoz2*r12**2
                k += 1
                Mv[k] += h14*intrhoz2*r11*r21 + h14*intrhoz2*r12*r22
                k += 1
                Mv[k] += h14*intrhoz2*r11*r31 + h14*intrhoz2*r12*r32
                k += 1
                Mv[k] += -h24*intrhoz*r11*r22 + h24*intrhoz*r12*r21
                k += 1
                Mv[k] += -h24*intrhoz*r11*r32 + h24*intrhoz*r12*r31
                k += 1
                Mv[k] += h24*intrhoz2*r11**2 + h24*intrhoz2*r12**2
                k += 1
                Mv[k] += h24*intrhoz2*r11*r21 + h24*intrhoz2*r12*r22
                k += 1
                Mv[k] += h24*intrhoz2*r11*r31 + h24*intrhoz2*r12*r32
                k += 1
                Mv[k] += -h34*intrhoz*r11*r22 + h34*intrhoz*r12*r21
                k += 1
                Mv[k] += -h34*intrhoz*r11*r32 + h34*intrhoz*r12*r31
                k += 1
                Mv[k] += h34*intrhoz2*r11**2 + h34*intrhoz2*r12**2
                k += 1
                Mv[k] += h34*intrhoz2*r11*r21 + h34*intrhoz2*r12*r22
                k += 1
                Mv[k] += h34*intrhoz2*r11*r31 + h34*intrhoz2*r12*r32
                k += 1
                Mv[k] += -h44*intrhoz*r11*r22 + h44*intrhoz*r12*r21
                k += 1
                Mv[k] += -h44*intrhoz*r11*r32 + h44*intrhoz*r12*r31
                k += 1
                Mv[k] += h44*intrhoz2*r11**2 + h44*intrhoz2*r12**2
                k += 1
                Mv[k] += h44*intrhoz2*r11*r21 + h44*intrhoz2*r12*r22
                k += 1
                Mv[k] += h44*intrhoz2*r11*r31 + h44*intrhoz2*r12*r32
                k += 1
                Mv[k] += h14*intrhoz*r11*r22 - h14*intrhoz*r12*r21
                k += 1
                Mv[k] += -h14*intrhoz*r21*r32 + h14*intrhoz*r22*r31
                k += 1
                Mv[k] += h14*intrhoz2*r11*r21 + h14*intrhoz2*r12*r22
                k += 1
                Mv[k] += h14*intrhoz2*r21**2 + h14*intrhoz2*r22**2
                k += 1
                Mv[k] += h14*intrhoz2*r21*r31 + h14*intrhoz2*r22*r32
                k += 1
                Mv[k] += h24*intrhoz*r11*r22 - h24*intrhoz*r12*r21
                k += 1
                Mv[k] += -h24*intrhoz*r21*r32 + h24*intrhoz*r22*r31
                k += 1
                Mv[k] += h24*intrhoz2*r11*r21 + h24*intrhoz2*r12*r22
                k += 1
                Mv[k] += h24*intrhoz2*r21**2 + h24*intrhoz2*r22**2
                k += 1
                Mv[k] += h24*intrhoz2*r21*r31 + h24*intrhoz2*r22*r32
                k += 1
                Mv[k] += h34*intrhoz*r11*r22 - h34*intrhoz*r12*r21
                k += 1
                Mv[k] += -h34*intrhoz*r21*r32 + h34*intrhoz*r22*r31
                k += 1
                Mv[k] += h34*intrhoz2*r11*r21 + h34*intrhoz2*r12*r22
                k += 1
                Mv[k] += h34*intrhoz2*r21**2 + h34*intrhoz2*r22**2
                k += 1
                Mv[k] += h34*intrhoz2*r21*r31 + h34*intrhoz2*r22*r32
                k += 1
                Mv[k] += h44*intrhoz*r11*r22 - h44*intrhoz*r12*r21
                k += 1
                Mv[k] += -h44*intrhoz*r21*r32 + h44*intrhoz*r22*r31
                k += 1
                Mv[k] += h44*intrhoz2*r11*r21 + h44*intrhoz2*r12*r22
                k += 1
                Mv[k] += h44*intrhoz2*r21**2 + h44*intrhoz2*r22**2
                k += 1
                Mv[k] += h44*intrhoz2*r21*r31 + h44*intrhoz2*r22*r32
                k += 1
                Mv[k] += h14*intrhoz*r11*r32 - h14*intrhoz*r12*r31
                k += 1
                Mv[k] += h14*intrhoz*r21*r32 - h14*intrhoz*r22*r31
                k += 1
                Mv[k] += h14*intrhoz2*r11*r31 + h14*intrhoz2*r12*r32
                k += 1
                Mv[k] += h14*intrhoz2*r21*r31 + h14*intrhoz2*r22*r32
                k += 1
                Mv[k] += h14*intrhoz2*r31**2 + h14*intrhoz2*r32**2
                k += 1
                Mv[k] += h24*intrhoz*r11*r32 - h24*intrhoz*r12*r31
                k += 1
                Mv[k] += h24*intrhoz*r21*r32 - h24*intrhoz*r22*r31
                k += 1
                Mv[k] += h24*intrhoz2*r11*r31 + h24*intrhoz2*r12*r32
                k += 1
                Mv[k] += h24*intrhoz2*r21*r31 + h24*intrhoz2*r22*r32
                k += 1
                Mv[k] += h24*intrhoz2*r31**2 + h24*intrhoz2*r32**2
                k += 1
                Mv[k] += h34*intrhoz*r11*r32 - h34*intrhoz*r12*r31
                k += 1
                Mv[k] += h34*intrhoz*r21*r32 - h34*intrhoz*r22*r31
                k += 1
                Mv[k] += h34*intrhoz2*r11*r31 + h34*intrhoz2*r12*r32
                k += 1
                Mv[k] += h34*intrhoz2*r21*r31 + h34*intrhoz2*r22*r32
                k += 1
                Mv[k] += h34*intrhoz2*r31**2 + h34*intrhoz2*r32**2
                k += 1
                Mv[k] += h44*intrhoz*r11*r32 - h44*intrhoz*r12*r31
                k += 1
                Mv[k] += h44*intrhoz*r21*r32 - h44*intrhoz*r22*r31
                k += 1
                Mv[k] += h44*intrhoz2*r11*r31 + h44*intrhoz2*r12*r32
                k += 1
                Mv[k] += h44*intrhoz2*r21*r31 + h44*intrhoz2*r22*r32
                k += 1
                Mv[k] += h44*intrhoz2*r31**2 + h44*intrhoz2*r32**2

            elif mtype == 1: # M_red mass matrix purely by reduced integration
                k = self.init_k_M
                Mr[k] = 0+c1
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 5+c4

                k = self.init_k_M
                Mv[k] += intrho*r11**2*valH1 + intrho*r12**2*valH1 + intrho*r13**2*valH1
                k += 1
                Mv[k] += intrho*r11*r21*valH1 + intrho*r12*r22*valH1 + intrho*r13*r23*valH1
                k += 1
                Mv[k] += intrho*r11*r31*valH1 + intrho*r12*r32*valH1 + intrho*r13*r33*valH1
                k += 1
                Mv[k] += intrhoz*r11*r22*valH1 - intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += intrhoz*r11*r32*valH1 - intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrho*r11**2*valH1 + intrho*r12**2*valH1 + intrho*r13**2*valH1
                k += 1
                Mv[k] += intrho*r11*r21*valH1 + intrho*r12*r22*valH1 + intrho*r13*r23*valH1
                k += 1
                Mv[k] += intrho*r11*r31*valH1 + intrho*r12*r32*valH1 + intrho*r13*r33*valH1
                k += 1
                Mv[k] += intrhoz*r11*r22*valH1 - intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += intrhoz*r11*r32*valH1 - intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrho*r11**2*valH1 + intrho*r12**2*valH1 + intrho*r13**2*valH1
                k += 1
                Mv[k] += intrho*r11*r21*valH1 + intrho*r12*r22*valH1 + intrho*r13*r23*valH1
                k += 1
                Mv[k] += intrho*r11*r31*valH1 + intrho*r12*r32*valH1 + intrho*r13*r33*valH1
                k += 1
                Mv[k] += intrhoz*r11*r22*valH1 - intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += intrhoz*r11*r32*valH1 - intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrho*r11**2*valH1 + intrho*r12**2*valH1 + intrho*r13**2*valH1
                k += 1
                Mv[k] += intrho*r11*r21*valH1 + intrho*r12*r22*valH1 + intrho*r13*r23*valH1
                k += 1
                Mv[k] += intrho*r11*r31*valH1 + intrho*r12*r32*valH1 + intrho*r13*r33*valH1
                k += 1
                Mv[k] += intrhoz*r11*r22*valH1 - intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += intrhoz*r11*r32*valH1 - intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrho*r11*r21*valH1 + intrho*r12*r22*valH1 + intrho*r13*r23*valH1
                k += 1
                Mv[k] += intrho*r21**2*valH1 + intrho*r22**2*valH1 + intrho*r23**2*valH1
                k += 1
                Mv[k] += intrho*r21*r31*valH1 + intrho*r22*r32*valH1 + intrho*r23*r33*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r22*valH1 + intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += intrhoz*r21*r32*valH1 - intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrho*r11*r21*valH1 + intrho*r12*r22*valH1 + intrho*r13*r23*valH1
                k += 1
                Mv[k] += intrho*r21**2*valH1 + intrho*r22**2*valH1 + intrho*r23**2*valH1
                k += 1
                Mv[k] += intrho*r21*r31*valH1 + intrho*r22*r32*valH1 + intrho*r23*r33*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r22*valH1 + intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += intrhoz*r21*r32*valH1 - intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrho*r11*r21*valH1 + intrho*r12*r22*valH1 + intrho*r13*r23*valH1
                k += 1
                Mv[k] += intrho*r21**2*valH1 + intrho*r22**2*valH1 + intrho*r23**2*valH1
                k += 1
                Mv[k] += intrho*r21*r31*valH1 + intrho*r22*r32*valH1 + intrho*r23*r33*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r22*valH1 + intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += intrhoz*r21*r32*valH1 - intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrho*r11*r21*valH1 + intrho*r12*r22*valH1 + intrho*r13*r23*valH1
                k += 1
                Mv[k] += intrho*r21**2*valH1 + intrho*r22**2*valH1 + intrho*r23**2*valH1
                k += 1
                Mv[k] += intrho*r21*r31*valH1 + intrho*r22*r32*valH1 + intrho*r23*r33*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r22*valH1 + intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += intrhoz*r21*r32*valH1 - intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrho*r11*r31*valH1 + intrho*r12*r32*valH1 + intrho*r13*r33*valH1
                k += 1
                Mv[k] += intrho*r21*r31*valH1 + intrho*r22*r32*valH1 + intrho*r23*r33*valH1
                k += 1
                Mv[k] += intrho*r31**2*valH1 + intrho*r32**2*valH1 + intrho*r33**2*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r32*valH1 + intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += -intrhoz*r21*r32*valH1 + intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrho*r11*r31*valH1 + intrho*r12*r32*valH1 + intrho*r13*r33*valH1
                k += 1
                Mv[k] += intrho*r21*r31*valH1 + intrho*r22*r32*valH1 + intrho*r23*r33*valH1
                k += 1
                Mv[k] += intrho*r31**2*valH1 + intrho*r32**2*valH1 + intrho*r33**2*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r32*valH1 + intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += -intrhoz*r21*r32*valH1 + intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrho*r11*r31*valH1 + intrho*r12*r32*valH1 + intrho*r13*r33*valH1
                k += 1
                Mv[k] += intrho*r21*r31*valH1 + intrho*r22*r32*valH1 + intrho*r23*r33*valH1
                k += 1
                Mv[k] += intrho*r31**2*valH1 + intrho*r32**2*valH1 + intrho*r33**2*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r32*valH1 + intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += -intrhoz*r21*r32*valH1 + intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrho*r11*r31*valH1 + intrho*r12*r32*valH1 + intrho*r13*r33*valH1
                k += 1
                Mv[k] += intrho*r21*r31*valH1 + intrho*r22*r32*valH1 + intrho*r23*r33*valH1
                k += 1
                Mv[k] += intrho*r31**2*valH1 + intrho*r32**2*valH1 + intrho*r33**2*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r32*valH1 + intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += -intrhoz*r21*r32*valH1 + intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r22*valH1 + intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r32*valH1 + intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11**2*valH1 + intrhoz2*r12**2*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r21*valH1 + intrhoz2*r12*r22*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r31*valH1 + intrhoz2*r12*r32*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r22*valH1 + intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r32*valH1 + intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11**2*valH1 + intrhoz2*r12**2*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r21*valH1 + intrhoz2*r12*r22*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r31*valH1 + intrhoz2*r12*r32*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r22*valH1 + intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r32*valH1 + intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11**2*valH1 + intrhoz2*r12**2*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r21*valH1 + intrhoz2*r12*r22*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r31*valH1 + intrhoz2*r12*r32*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r22*valH1 + intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r32*valH1 + intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11**2*valH1 + intrhoz2*r12**2*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r21*valH1 + intrhoz2*r12*r22*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r31*valH1 + intrhoz2*r12*r32*valH1
                k += 1
                Mv[k] += intrhoz*r11*r22*valH1 - intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += -intrhoz*r21*r32*valH1 + intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r21*valH1 + intrhoz2*r12*r22*valH1
                k += 1
                Mv[k] += intrhoz2*r21**2*valH1 + intrhoz2*r22**2*valH1
                k += 1
                Mv[k] += intrhoz2*r21*r31*valH1 + intrhoz2*r22*r32*valH1
                k += 1
                Mv[k] += intrhoz*r11*r22*valH1 - intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += -intrhoz*r21*r32*valH1 + intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r21*valH1 + intrhoz2*r12*r22*valH1
                k += 1
                Mv[k] += intrhoz2*r21**2*valH1 + intrhoz2*r22**2*valH1
                k += 1
                Mv[k] += intrhoz2*r21*r31*valH1 + intrhoz2*r22*r32*valH1
                k += 1
                Mv[k] += intrhoz*r11*r22*valH1 - intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += -intrhoz*r21*r32*valH1 + intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r21*valH1 + intrhoz2*r12*r22*valH1
                k += 1
                Mv[k] += intrhoz2*r21**2*valH1 + intrhoz2*r22**2*valH1
                k += 1
                Mv[k] += intrhoz2*r21*r31*valH1 + intrhoz2*r22*r32*valH1
                k += 1
                Mv[k] += intrhoz*r11*r22*valH1 - intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += -intrhoz*r21*r32*valH1 + intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r21*valH1 + intrhoz2*r12*r22*valH1
                k += 1
                Mv[k] += intrhoz2*r21**2*valH1 + intrhoz2*r22**2*valH1
                k += 1
                Mv[k] += intrhoz2*r21*r31*valH1 + intrhoz2*r22*r32*valH1
                k += 1
                Mv[k] += intrhoz*r11*r32*valH1 - intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrhoz*r21*r32*valH1 - intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r31*valH1 + intrhoz2*r12*r32*valH1
                k += 1
                Mv[k] += intrhoz2*r21*r31*valH1 + intrhoz2*r22*r32*valH1
                k += 1
                Mv[k] += intrhoz2*r31**2*valH1 + intrhoz2*r32**2*valH1
                k += 1
                Mv[k] += intrhoz*r11*r32*valH1 - intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrhoz*r21*r32*valH1 - intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r31*valH1 + intrhoz2*r12*r32*valH1
                k += 1
                Mv[k] += intrhoz2*r21*r31*valH1 + intrhoz2*r22*r32*valH1
                k += 1
                Mv[k] += intrhoz2*r31**2*valH1 + intrhoz2*r32**2*valH1
                k += 1
                Mv[k] += intrhoz*r11*r32*valH1 - intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrhoz*r21*r32*valH1 - intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r31*valH1 + intrhoz2*r12*r32*valH1
                k += 1
                Mv[k] += intrhoz2*r21*r31*valH1 + intrhoz2*r22*r32*valH1
                k += 1
                Mv[k] += intrhoz2*r31**2*valH1 + intrhoz2*r32**2*valH1
                k += 1
                Mv[k] += intrhoz*r11*r32*valH1 - intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrhoz*r21*r32*valH1 - intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r31*valH1 + intrhoz2*r12*r32*valH1
                k += 1
                Mv[k] += intrhoz2*r21*r31*valH1 + intrhoz2*r22*r32*valH1
                k += 1
                Mv[k] += intrhoz2*r31**2*valH1 + intrhoz2*r32**2*valH1
                k += 1
                Mv[k] += intrho*r11**2*valH1 + intrho*r12**2*valH1 + intrho*r13**2*valH1
                k += 1
                Mv[k] += intrho*r11*r21*valH1 + intrho*r12*r22*valH1 + intrho*r13*r23*valH1
                k += 1
                Mv[k] += intrho*r11*r31*valH1 + intrho*r12*r32*valH1 + intrho*r13*r33*valH1
                k += 1
                Mv[k] += intrhoz*r11*r22*valH1 - intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += intrhoz*r11*r32*valH1 - intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrho*r11**2*valH1 + intrho*r12**2*valH1 + intrho*r13**2*valH1
                k += 1
                Mv[k] += intrho*r11*r21*valH1 + intrho*r12*r22*valH1 + intrho*r13*r23*valH1
                k += 1
                Mv[k] += intrho*r11*r31*valH1 + intrho*r12*r32*valH1 + intrho*r13*r33*valH1
                k += 1
                Mv[k] += intrhoz*r11*r22*valH1 - intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += intrhoz*r11*r32*valH1 - intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrho*r11**2*valH1 + intrho*r12**2*valH1 + intrho*r13**2*valH1
                k += 1
                Mv[k] += intrho*r11*r21*valH1 + intrho*r12*r22*valH1 + intrho*r13*r23*valH1
                k += 1
                Mv[k] += intrho*r11*r31*valH1 + intrho*r12*r32*valH1 + intrho*r13*r33*valH1
                k += 1
                Mv[k] += intrhoz*r11*r22*valH1 - intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += intrhoz*r11*r32*valH1 - intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrho*r11**2*valH1 + intrho*r12**2*valH1 + intrho*r13**2*valH1
                k += 1
                Mv[k] += intrho*r11*r21*valH1 + intrho*r12*r22*valH1 + intrho*r13*r23*valH1
                k += 1
                Mv[k] += intrho*r11*r31*valH1 + intrho*r12*r32*valH1 + intrho*r13*r33*valH1
                k += 1
                Mv[k] += intrhoz*r11*r22*valH1 - intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += intrhoz*r11*r32*valH1 - intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrho*r11*r21*valH1 + intrho*r12*r22*valH1 + intrho*r13*r23*valH1
                k += 1
                Mv[k] += intrho*r21**2*valH1 + intrho*r22**2*valH1 + intrho*r23**2*valH1
                k += 1
                Mv[k] += intrho*r21*r31*valH1 + intrho*r22*r32*valH1 + intrho*r23*r33*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r22*valH1 + intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += intrhoz*r21*r32*valH1 - intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrho*r11*r21*valH1 + intrho*r12*r22*valH1 + intrho*r13*r23*valH1
                k += 1
                Mv[k] += intrho*r21**2*valH1 + intrho*r22**2*valH1 + intrho*r23**2*valH1
                k += 1
                Mv[k] += intrho*r21*r31*valH1 + intrho*r22*r32*valH1 + intrho*r23*r33*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r22*valH1 + intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += intrhoz*r21*r32*valH1 - intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrho*r11*r21*valH1 + intrho*r12*r22*valH1 + intrho*r13*r23*valH1
                k += 1
                Mv[k] += intrho*r21**2*valH1 + intrho*r22**2*valH1 + intrho*r23**2*valH1
                k += 1
                Mv[k] += intrho*r21*r31*valH1 + intrho*r22*r32*valH1 + intrho*r23*r33*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r22*valH1 + intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += intrhoz*r21*r32*valH1 - intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrho*r11*r21*valH1 + intrho*r12*r22*valH1 + intrho*r13*r23*valH1
                k += 1
                Mv[k] += intrho*r21**2*valH1 + intrho*r22**2*valH1 + intrho*r23**2*valH1
                k += 1
                Mv[k] += intrho*r21*r31*valH1 + intrho*r22*r32*valH1 + intrho*r23*r33*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r22*valH1 + intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += intrhoz*r21*r32*valH1 - intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrho*r11*r31*valH1 + intrho*r12*r32*valH1 + intrho*r13*r33*valH1
                k += 1
                Mv[k] += intrho*r21*r31*valH1 + intrho*r22*r32*valH1 + intrho*r23*r33*valH1
                k += 1
                Mv[k] += intrho*r31**2*valH1 + intrho*r32**2*valH1 + intrho*r33**2*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r32*valH1 + intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += -intrhoz*r21*r32*valH1 + intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrho*r11*r31*valH1 + intrho*r12*r32*valH1 + intrho*r13*r33*valH1
                k += 1
                Mv[k] += intrho*r21*r31*valH1 + intrho*r22*r32*valH1 + intrho*r23*r33*valH1
                k += 1
                Mv[k] += intrho*r31**2*valH1 + intrho*r32**2*valH1 + intrho*r33**2*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r32*valH1 + intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += -intrhoz*r21*r32*valH1 + intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrho*r11*r31*valH1 + intrho*r12*r32*valH1 + intrho*r13*r33*valH1
                k += 1
                Mv[k] += intrho*r21*r31*valH1 + intrho*r22*r32*valH1 + intrho*r23*r33*valH1
                k += 1
                Mv[k] += intrho*r31**2*valH1 + intrho*r32**2*valH1 + intrho*r33**2*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r32*valH1 + intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += -intrhoz*r21*r32*valH1 + intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrho*r11*r31*valH1 + intrho*r12*r32*valH1 + intrho*r13*r33*valH1
                k += 1
                Mv[k] += intrho*r21*r31*valH1 + intrho*r22*r32*valH1 + intrho*r23*r33*valH1
                k += 1
                Mv[k] += intrho*r31**2*valH1 + intrho*r32**2*valH1 + intrho*r33**2*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r32*valH1 + intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += -intrhoz*r21*r32*valH1 + intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r22*valH1 + intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r32*valH1 + intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11**2*valH1 + intrhoz2*r12**2*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r21*valH1 + intrhoz2*r12*r22*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r31*valH1 + intrhoz2*r12*r32*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r22*valH1 + intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r32*valH1 + intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11**2*valH1 + intrhoz2*r12**2*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r21*valH1 + intrhoz2*r12*r22*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r31*valH1 + intrhoz2*r12*r32*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r22*valH1 + intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r32*valH1 + intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11**2*valH1 + intrhoz2*r12**2*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r21*valH1 + intrhoz2*r12*r22*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r31*valH1 + intrhoz2*r12*r32*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r22*valH1 + intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r32*valH1 + intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11**2*valH1 + intrhoz2*r12**2*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r21*valH1 + intrhoz2*r12*r22*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r31*valH1 + intrhoz2*r12*r32*valH1
                k += 1
                Mv[k] += intrhoz*r11*r22*valH1 - intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += -intrhoz*r21*r32*valH1 + intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r21*valH1 + intrhoz2*r12*r22*valH1
                k += 1
                Mv[k] += intrhoz2*r21**2*valH1 + intrhoz2*r22**2*valH1
                k += 1
                Mv[k] += intrhoz2*r21*r31*valH1 + intrhoz2*r22*r32*valH1
                k += 1
                Mv[k] += intrhoz*r11*r22*valH1 - intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += -intrhoz*r21*r32*valH1 + intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r21*valH1 + intrhoz2*r12*r22*valH1
                k += 1
                Mv[k] += intrhoz2*r21**2*valH1 + intrhoz2*r22**2*valH1
                k += 1
                Mv[k] += intrhoz2*r21*r31*valH1 + intrhoz2*r22*r32*valH1
                k += 1
                Mv[k] += intrhoz*r11*r22*valH1 - intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += -intrhoz*r21*r32*valH1 + intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r21*valH1 + intrhoz2*r12*r22*valH1
                k += 1
                Mv[k] += intrhoz2*r21**2*valH1 + intrhoz2*r22**2*valH1
                k += 1
                Mv[k] += intrhoz2*r21*r31*valH1 + intrhoz2*r22*r32*valH1
                k += 1
                Mv[k] += intrhoz*r11*r22*valH1 - intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += -intrhoz*r21*r32*valH1 + intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r21*valH1 + intrhoz2*r12*r22*valH1
                k += 1
                Mv[k] += intrhoz2*r21**2*valH1 + intrhoz2*r22**2*valH1
                k += 1
                Mv[k] += intrhoz2*r21*r31*valH1 + intrhoz2*r22*r32*valH1
                k += 1
                Mv[k] += intrhoz*r11*r32*valH1 - intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrhoz*r21*r32*valH1 - intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r31*valH1 + intrhoz2*r12*r32*valH1
                k += 1
                Mv[k] += intrhoz2*r21*r31*valH1 + intrhoz2*r22*r32*valH1
                k += 1
                Mv[k] += intrhoz2*r31**2*valH1 + intrhoz2*r32**2*valH1
                k += 1
                Mv[k] += intrhoz*r11*r32*valH1 - intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrhoz*r21*r32*valH1 - intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r31*valH1 + intrhoz2*r12*r32*valH1
                k += 1
                Mv[k] += intrhoz2*r21*r31*valH1 + intrhoz2*r22*r32*valH1
                k += 1
                Mv[k] += intrhoz2*r31**2*valH1 + intrhoz2*r32**2*valH1
                k += 1
                Mv[k] += intrhoz*r11*r32*valH1 - intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrhoz*r21*r32*valH1 - intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r31*valH1 + intrhoz2*r12*r32*valH1
                k += 1
                Mv[k] += intrhoz2*r21*r31*valH1 + intrhoz2*r22*r32*valH1
                k += 1
                Mv[k] += intrhoz2*r31**2*valH1 + intrhoz2*r32**2*valH1
                k += 1
                Mv[k] += intrhoz*r11*r32*valH1 - intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrhoz*r21*r32*valH1 - intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r31*valH1 + intrhoz2*r12*r32*valH1
                k += 1
                Mv[k] += intrhoz2*r21*r31*valH1 + intrhoz2*r22*r32*valH1
                k += 1
                Mv[k] += intrhoz2*r31**2*valH1 + intrhoz2*r32**2*valH1
                k += 1
                Mv[k] += intrho*r11**2*valH1 + intrho*r12**2*valH1 + intrho*r13**2*valH1
                k += 1
                Mv[k] += intrho*r11*r21*valH1 + intrho*r12*r22*valH1 + intrho*r13*r23*valH1
                k += 1
                Mv[k] += intrho*r11*r31*valH1 + intrho*r12*r32*valH1 + intrho*r13*r33*valH1
                k += 1
                Mv[k] += intrhoz*r11*r22*valH1 - intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += intrhoz*r11*r32*valH1 - intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrho*r11**2*valH1 + intrho*r12**2*valH1 + intrho*r13**2*valH1
                k += 1
                Mv[k] += intrho*r11*r21*valH1 + intrho*r12*r22*valH1 + intrho*r13*r23*valH1
                k += 1
                Mv[k] += intrho*r11*r31*valH1 + intrho*r12*r32*valH1 + intrho*r13*r33*valH1
                k += 1
                Mv[k] += intrhoz*r11*r22*valH1 - intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += intrhoz*r11*r32*valH1 - intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrho*r11**2*valH1 + intrho*r12**2*valH1 + intrho*r13**2*valH1
                k += 1
                Mv[k] += intrho*r11*r21*valH1 + intrho*r12*r22*valH1 + intrho*r13*r23*valH1
                k += 1
                Mv[k] += intrho*r11*r31*valH1 + intrho*r12*r32*valH1 + intrho*r13*r33*valH1
                k += 1
                Mv[k] += intrhoz*r11*r22*valH1 - intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += intrhoz*r11*r32*valH1 - intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrho*r11**2*valH1 + intrho*r12**2*valH1 + intrho*r13**2*valH1
                k += 1
                Mv[k] += intrho*r11*r21*valH1 + intrho*r12*r22*valH1 + intrho*r13*r23*valH1
                k += 1
                Mv[k] += intrho*r11*r31*valH1 + intrho*r12*r32*valH1 + intrho*r13*r33*valH1
                k += 1
                Mv[k] += intrhoz*r11*r22*valH1 - intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += intrhoz*r11*r32*valH1 - intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrho*r11*r21*valH1 + intrho*r12*r22*valH1 + intrho*r13*r23*valH1
                k += 1
                Mv[k] += intrho*r21**2*valH1 + intrho*r22**2*valH1 + intrho*r23**2*valH1
                k += 1
                Mv[k] += intrho*r21*r31*valH1 + intrho*r22*r32*valH1 + intrho*r23*r33*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r22*valH1 + intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += intrhoz*r21*r32*valH1 - intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrho*r11*r21*valH1 + intrho*r12*r22*valH1 + intrho*r13*r23*valH1
                k += 1
                Mv[k] += intrho*r21**2*valH1 + intrho*r22**2*valH1 + intrho*r23**2*valH1
                k += 1
                Mv[k] += intrho*r21*r31*valH1 + intrho*r22*r32*valH1 + intrho*r23*r33*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r22*valH1 + intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += intrhoz*r21*r32*valH1 - intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrho*r11*r21*valH1 + intrho*r12*r22*valH1 + intrho*r13*r23*valH1
                k += 1
                Mv[k] += intrho*r21**2*valH1 + intrho*r22**2*valH1 + intrho*r23**2*valH1
                k += 1
                Mv[k] += intrho*r21*r31*valH1 + intrho*r22*r32*valH1 + intrho*r23*r33*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r22*valH1 + intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += intrhoz*r21*r32*valH1 - intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrho*r11*r21*valH1 + intrho*r12*r22*valH1 + intrho*r13*r23*valH1
                k += 1
                Mv[k] += intrho*r21**2*valH1 + intrho*r22**2*valH1 + intrho*r23**2*valH1
                k += 1
                Mv[k] += intrho*r21*r31*valH1 + intrho*r22*r32*valH1 + intrho*r23*r33*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r22*valH1 + intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += intrhoz*r21*r32*valH1 - intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrho*r11*r31*valH1 + intrho*r12*r32*valH1 + intrho*r13*r33*valH1
                k += 1
                Mv[k] += intrho*r21*r31*valH1 + intrho*r22*r32*valH1 + intrho*r23*r33*valH1
                k += 1
                Mv[k] += intrho*r31**2*valH1 + intrho*r32**2*valH1 + intrho*r33**2*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r32*valH1 + intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += -intrhoz*r21*r32*valH1 + intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrho*r11*r31*valH1 + intrho*r12*r32*valH1 + intrho*r13*r33*valH1
                k += 1
                Mv[k] += intrho*r21*r31*valH1 + intrho*r22*r32*valH1 + intrho*r23*r33*valH1
                k += 1
                Mv[k] += intrho*r31**2*valH1 + intrho*r32**2*valH1 + intrho*r33**2*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r32*valH1 + intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += -intrhoz*r21*r32*valH1 + intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrho*r11*r31*valH1 + intrho*r12*r32*valH1 + intrho*r13*r33*valH1
                k += 1
                Mv[k] += intrho*r21*r31*valH1 + intrho*r22*r32*valH1 + intrho*r23*r33*valH1
                k += 1
                Mv[k] += intrho*r31**2*valH1 + intrho*r32**2*valH1 + intrho*r33**2*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r32*valH1 + intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += -intrhoz*r21*r32*valH1 + intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrho*r11*r31*valH1 + intrho*r12*r32*valH1 + intrho*r13*r33*valH1
                k += 1
                Mv[k] += intrho*r21*r31*valH1 + intrho*r22*r32*valH1 + intrho*r23*r33*valH1
                k += 1
                Mv[k] += intrho*r31**2*valH1 + intrho*r32**2*valH1 + intrho*r33**2*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r32*valH1 + intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += -intrhoz*r21*r32*valH1 + intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r22*valH1 + intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r32*valH1 + intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11**2*valH1 + intrhoz2*r12**2*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r21*valH1 + intrhoz2*r12*r22*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r31*valH1 + intrhoz2*r12*r32*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r22*valH1 + intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r32*valH1 + intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11**2*valH1 + intrhoz2*r12**2*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r21*valH1 + intrhoz2*r12*r22*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r31*valH1 + intrhoz2*r12*r32*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r22*valH1 + intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r32*valH1 + intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11**2*valH1 + intrhoz2*r12**2*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r21*valH1 + intrhoz2*r12*r22*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r31*valH1 + intrhoz2*r12*r32*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r22*valH1 + intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r32*valH1 + intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11**2*valH1 + intrhoz2*r12**2*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r21*valH1 + intrhoz2*r12*r22*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r31*valH1 + intrhoz2*r12*r32*valH1
                k += 1
                Mv[k] += intrhoz*r11*r22*valH1 - intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += -intrhoz*r21*r32*valH1 + intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r21*valH1 + intrhoz2*r12*r22*valH1
                k += 1
                Mv[k] += intrhoz2*r21**2*valH1 + intrhoz2*r22**2*valH1
                k += 1
                Mv[k] += intrhoz2*r21*r31*valH1 + intrhoz2*r22*r32*valH1
                k += 1
                Mv[k] += intrhoz*r11*r22*valH1 - intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += -intrhoz*r21*r32*valH1 + intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r21*valH1 + intrhoz2*r12*r22*valH1
                k += 1
                Mv[k] += intrhoz2*r21**2*valH1 + intrhoz2*r22**2*valH1
                k += 1
                Mv[k] += intrhoz2*r21*r31*valH1 + intrhoz2*r22*r32*valH1
                k += 1
                Mv[k] += intrhoz*r11*r22*valH1 - intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += -intrhoz*r21*r32*valH1 + intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r21*valH1 + intrhoz2*r12*r22*valH1
                k += 1
                Mv[k] += intrhoz2*r21**2*valH1 + intrhoz2*r22**2*valH1
                k += 1
                Mv[k] += intrhoz2*r21*r31*valH1 + intrhoz2*r22*r32*valH1
                k += 1
                Mv[k] += intrhoz*r11*r22*valH1 - intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += -intrhoz*r21*r32*valH1 + intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r21*valH1 + intrhoz2*r12*r22*valH1
                k += 1
                Mv[k] += intrhoz2*r21**2*valH1 + intrhoz2*r22**2*valH1
                k += 1
                Mv[k] += intrhoz2*r21*r31*valH1 + intrhoz2*r22*r32*valH1
                k += 1
                Mv[k] += intrhoz*r11*r32*valH1 - intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrhoz*r21*r32*valH1 - intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r31*valH1 + intrhoz2*r12*r32*valH1
                k += 1
                Mv[k] += intrhoz2*r21*r31*valH1 + intrhoz2*r22*r32*valH1
                k += 1
                Mv[k] += intrhoz2*r31**2*valH1 + intrhoz2*r32**2*valH1
                k += 1
                Mv[k] += intrhoz*r11*r32*valH1 - intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrhoz*r21*r32*valH1 - intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r31*valH1 + intrhoz2*r12*r32*valH1
                k += 1
                Mv[k] += intrhoz2*r21*r31*valH1 + intrhoz2*r22*r32*valH1
                k += 1
                Mv[k] += intrhoz2*r31**2*valH1 + intrhoz2*r32**2*valH1
                k += 1
                Mv[k] += intrhoz*r11*r32*valH1 - intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrhoz*r21*r32*valH1 - intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r31*valH1 + intrhoz2*r12*r32*valH1
                k += 1
                Mv[k] += intrhoz2*r21*r31*valH1 + intrhoz2*r22*r32*valH1
                k += 1
                Mv[k] += intrhoz2*r31**2*valH1 + intrhoz2*r32**2*valH1
                k += 1
                Mv[k] += intrhoz*r11*r32*valH1 - intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrhoz*r21*r32*valH1 - intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r31*valH1 + intrhoz2*r12*r32*valH1
                k += 1
                Mv[k] += intrhoz2*r21*r31*valH1 + intrhoz2*r22*r32*valH1
                k += 1
                Mv[k] += intrhoz2*r31**2*valH1 + intrhoz2*r32**2*valH1
                k += 1
                Mv[k] += intrho*r11**2*valH1 + intrho*r12**2*valH1 + intrho*r13**2*valH1
                k += 1
                Mv[k] += intrho*r11*r21*valH1 + intrho*r12*r22*valH1 + intrho*r13*r23*valH1
                k += 1
                Mv[k] += intrho*r11*r31*valH1 + intrho*r12*r32*valH1 + intrho*r13*r33*valH1
                k += 1
                Mv[k] += intrhoz*r11*r22*valH1 - intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += intrhoz*r11*r32*valH1 - intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrho*r11**2*valH1 + intrho*r12**2*valH1 + intrho*r13**2*valH1
                k += 1
                Mv[k] += intrho*r11*r21*valH1 + intrho*r12*r22*valH1 + intrho*r13*r23*valH1
                k += 1
                Mv[k] += intrho*r11*r31*valH1 + intrho*r12*r32*valH1 + intrho*r13*r33*valH1
                k += 1
                Mv[k] += intrhoz*r11*r22*valH1 - intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += intrhoz*r11*r32*valH1 - intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrho*r11**2*valH1 + intrho*r12**2*valH1 + intrho*r13**2*valH1
                k += 1
                Mv[k] += intrho*r11*r21*valH1 + intrho*r12*r22*valH1 + intrho*r13*r23*valH1
                k += 1
                Mv[k] += intrho*r11*r31*valH1 + intrho*r12*r32*valH1 + intrho*r13*r33*valH1
                k += 1
                Mv[k] += intrhoz*r11*r22*valH1 - intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += intrhoz*r11*r32*valH1 - intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrho*r11**2*valH1 + intrho*r12**2*valH1 + intrho*r13**2*valH1
                k += 1
                Mv[k] += intrho*r11*r21*valH1 + intrho*r12*r22*valH1 + intrho*r13*r23*valH1
                k += 1
                Mv[k] += intrho*r11*r31*valH1 + intrho*r12*r32*valH1 + intrho*r13*r33*valH1
                k += 1
                Mv[k] += intrhoz*r11*r22*valH1 - intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += intrhoz*r11*r32*valH1 - intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrho*r11*r21*valH1 + intrho*r12*r22*valH1 + intrho*r13*r23*valH1
                k += 1
                Mv[k] += intrho*r21**2*valH1 + intrho*r22**2*valH1 + intrho*r23**2*valH1
                k += 1
                Mv[k] += intrho*r21*r31*valH1 + intrho*r22*r32*valH1 + intrho*r23*r33*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r22*valH1 + intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += intrhoz*r21*r32*valH1 - intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrho*r11*r21*valH1 + intrho*r12*r22*valH1 + intrho*r13*r23*valH1
                k += 1
                Mv[k] += intrho*r21**2*valH1 + intrho*r22**2*valH1 + intrho*r23**2*valH1
                k += 1
                Mv[k] += intrho*r21*r31*valH1 + intrho*r22*r32*valH1 + intrho*r23*r33*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r22*valH1 + intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += intrhoz*r21*r32*valH1 - intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrho*r11*r21*valH1 + intrho*r12*r22*valH1 + intrho*r13*r23*valH1
                k += 1
                Mv[k] += intrho*r21**2*valH1 + intrho*r22**2*valH1 + intrho*r23**2*valH1
                k += 1
                Mv[k] += intrho*r21*r31*valH1 + intrho*r22*r32*valH1 + intrho*r23*r33*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r22*valH1 + intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += intrhoz*r21*r32*valH1 - intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrho*r11*r21*valH1 + intrho*r12*r22*valH1 + intrho*r13*r23*valH1
                k += 1
                Mv[k] += intrho*r21**2*valH1 + intrho*r22**2*valH1 + intrho*r23**2*valH1
                k += 1
                Mv[k] += intrho*r21*r31*valH1 + intrho*r22*r32*valH1 + intrho*r23*r33*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r22*valH1 + intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += intrhoz*r21*r32*valH1 - intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrho*r11*r31*valH1 + intrho*r12*r32*valH1 + intrho*r13*r33*valH1
                k += 1
                Mv[k] += intrho*r21*r31*valH1 + intrho*r22*r32*valH1 + intrho*r23*r33*valH1
                k += 1
                Mv[k] += intrho*r31**2*valH1 + intrho*r32**2*valH1 + intrho*r33**2*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r32*valH1 + intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += -intrhoz*r21*r32*valH1 + intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrho*r11*r31*valH1 + intrho*r12*r32*valH1 + intrho*r13*r33*valH1
                k += 1
                Mv[k] += intrho*r21*r31*valH1 + intrho*r22*r32*valH1 + intrho*r23*r33*valH1
                k += 1
                Mv[k] += intrho*r31**2*valH1 + intrho*r32**2*valH1 + intrho*r33**2*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r32*valH1 + intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += -intrhoz*r21*r32*valH1 + intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrho*r11*r31*valH1 + intrho*r12*r32*valH1 + intrho*r13*r33*valH1
                k += 1
                Mv[k] += intrho*r21*r31*valH1 + intrho*r22*r32*valH1 + intrho*r23*r33*valH1
                k += 1
                Mv[k] += intrho*r31**2*valH1 + intrho*r32**2*valH1 + intrho*r33**2*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r32*valH1 + intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += -intrhoz*r21*r32*valH1 + intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrho*r11*r31*valH1 + intrho*r12*r32*valH1 + intrho*r13*r33*valH1
                k += 1
                Mv[k] += intrho*r21*r31*valH1 + intrho*r22*r32*valH1 + intrho*r23*r33*valH1
                k += 1
                Mv[k] += intrho*r31**2*valH1 + intrho*r32**2*valH1 + intrho*r33**2*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r32*valH1 + intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += -intrhoz*r21*r32*valH1 + intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r22*valH1 + intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r32*valH1 + intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11**2*valH1 + intrhoz2*r12**2*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r21*valH1 + intrhoz2*r12*r22*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r31*valH1 + intrhoz2*r12*r32*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r22*valH1 + intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r32*valH1 + intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11**2*valH1 + intrhoz2*r12**2*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r21*valH1 + intrhoz2*r12*r22*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r31*valH1 + intrhoz2*r12*r32*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r22*valH1 + intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r32*valH1 + intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11**2*valH1 + intrhoz2*r12**2*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r21*valH1 + intrhoz2*r12*r22*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r31*valH1 + intrhoz2*r12*r32*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r22*valH1 + intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += -intrhoz*r11*r32*valH1 + intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11**2*valH1 + intrhoz2*r12**2*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r21*valH1 + intrhoz2*r12*r22*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r31*valH1 + intrhoz2*r12*r32*valH1
                k += 1
                Mv[k] += intrhoz*r11*r22*valH1 - intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += -intrhoz*r21*r32*valH1 + intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r21*valH1 + intrhoz2*r12*r22*valH1
                k += 1
                Mv[k] += intrhoz2*r21**2*valH1 + intrhoz2*r22**2*valH1
                k += 1
                Mv[k] += intrhoz2*r21*r31*valH1 + intrhoz2*r22*r32*valH1
                k += 1
                Mv[k] += intrhoz*r11*r22*valH1 - intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += -intrhoz*r21*r32*valH1 + intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r21*valH1 + intrhoz2*r12*r22*valH1
                k += 1
                Mv[k] += intrhoz2*r21**2*valH1 + intrhoz2*r22**2*valH1
                k += 1
                Mv[k] += intrhoz2*r21*r31*valH1 + intrhoz2*r22*r32*valH1
                k += 1
                Mv[k] += intrhoz*r11*r22*valH1 - intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += -intrhoz*r21*r32*valH1 + intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r21*valH1 + intrhoz2*r12*r22*valH1
                k += 1
                Mv[k] += intrhoz2*r21**2*valH1 + intrhoz2*r22**2*valH1
                k += 1
                Mv[k] += intrhoz2*r21*r31*valH1 + intrhoz2*r22*r32*valH1
                k += 1
                Mv[k] += intrhoz*r11*r22*valH1 - intrhoz*r12*r21*valH1
                k += 1
                Mv[k] += -intrhoz*r21*r32*valH1 + intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r21*valH1 + intrhoz2*r12*r22*valH1
                k += 1
                Mv[k] += intrhoz2*r21**2*valH1 + intrhoz2*r22**2*valH1
                k += 1
                Mv[k] += intrhoz2*r21*r31*valH1 + intrhoz2*r22*r32*valH1
                k += 1
                Mv[k] += intrhoz*r11*r32*valH1 - intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrhoz*r21*r32*valH1 - intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r31*valH1 + intrhoz2*r12*r32*valH1
                k += 1
                Mv[k] += intrhoz2*r21*r31*valH1 + intrhoz2*r22*r32*valH1
                k += 1
                Mv[k] += intrhoz2*r31**2*valH1 + intrhoz2*r32**2*valH1
                k += 1
                Mv[k] += intrhoz*r11*r32*valH1 - intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrhoz*r21*r32*valH1 - intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r31*valH1 + intrhoz2*r12*r32*valH1
                k += 1
                Mv[k] += intrhoz2*r21*r31*valH1 + intrhoz2*r22*r32*valH1
                k += 1
                Mv[k] += intrhoz2*r31**2*valH1 + intrhoz2*r32**2*valH1
                k += 1
                Mv[k] += intrhoz*r11*r32*valH1 - intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrhoz*r21*r32*valH1 - intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r31*valH1 + intrhoz2*r12*r32*valH1
                k += 1
                Mv[k] += intrhoz2*r21*r31*valH1 + intrhoz2*r22*r32*valH1
                k += 1
                Mv[k] += intrhoz2*r31**2*valH1 + intrhoz2*r32**2*valH1
                k += 1
                Mv[k] += intrhoz*r11*r32*valH1 - intrhoz*r12*r31*valH1
                k += 1
                Mv[k] += intrhoz*r21*r32*valH1 - intrhoz*r22*r31*valH1
                k += 1
                Mv[k] += intrhoz2*r11*r31*valH1 + intrhoz2*r12*r32*valH1
                k += 1
                Mv[k] += intrhoz2*r21*r31*valH1 + intrhoz2*r22*r32*valH1
                k += 1
                Mv[k] += intrhoz2*r31**2*valH1 + intrhoz2*r32**2*valH1

            elif mtype == 2: # M_lump lumped mass matrix using two-point Gauss-Lobatto quadrature
                k = self.init_k_M
                Mr[k] = 0+c1
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 0+c1
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 1+c1
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 2+c1
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 3+c1
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 4+c1
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 5+c1
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 0+c2
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 1+c2
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 2+c2
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 3+c2
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 4+c2
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 5+c2
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 0+c3
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 1+c3
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 2+c3
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 3+c3
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 4+c3
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 5+c3
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 0+c4
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 1+c4
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 0+c1
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 1+c1
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 2+c1
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 0+c2
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 1+c2
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 2+c2
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 0+c3
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 1+c3
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 2+c3
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 0+c4
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 1+c4
                k += 1
                Mr[k] = 2+c4
                Mc[k] = 2+c4
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 3+c4
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 4+c4
                Mc[k] = 5+c4
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 3+c1
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 4+c1
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 5+c1
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 3+c2
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 4+c2
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 5+c2
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 3+c3
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 4+c3
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 5+c3
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 3+c4
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 4+c4
                k += 1
                Mr[k] = 5+c4
                Mc[k] = 5+c4

                wij = 1.
                #NOTE two-point Gauss-Lobatto quadrature
                points[0] = -1.
                points[1] = +1.
                h11 = 0.
                h12 = 0.
                h13 = 0.
                h14 = 0.
                h22 = 0.
                h23 = 0.
                h24 = 0.
                h33 = 0.
                h34 = 0.
                h44 = 0.
                for i in range(2):
                    xi = points[i]
                    for j in range(2):
                        eta = points[j]
                        detJ = (-2*x1 + 2*x2 + (eta + 1)*(x1 - x2 + x3 - x4))*(-2*y1 + 2*y4 + (xi + 1)*(y1 - y2) + (xi + 1)*(y3 - y4))/16. - (-2*y1 + 2*y2 + (eta + 1)*(y1 - y2 + y3 - y4))*(-2*x1 + 2*x4 + (x1 - x2)*(xi + 1) + (x3 - x4)*(xi + 1))/16.
                        N1 = eta*xi/4. - eta/4. - xi/4. + 1/4.
                        N2 = -eta*xi/4. - eta/4. + xi/4. + 1/4.
                        N3 = eta*xi/4. + eta/4. + xi/4. + 1/4.
                        N4 = -eta*xi/4. + eta/4. - xi/4. + 1/4.
                        h11 += N1**2*detJ*wij
                        h12 += N1*N2*detJ*wij
                        h13 += N1*N3*detJ*wij
                        h14 += N1*N4*detJ*wij
                        h22 += N2**2*detJ*wij
                        h23 += N2*N3*detJ*wij
                        h24 += N2*N4*detJ*wij
                        h33 += N3**2*detJ*wij
                        h34 += N3*N4*detJ*wij
                        h44 += N4**2*detJ*wij

                k = self.init_k_M
                Mv[k] += h11*intrho*r11**2 + h11*intrho*r12**2 + h11*intrho*r13**2
                k += 1
                Mv[k] += h11*intrho*r11*r21 + h11*intrho*r12*r22 + h11*intrho*r13*r23
                k += 1
                Mv[k] += h11*intrho*r11*r31 + h11*intrho*r12*r32 + h11*intrho*r13*r33
                k += 1
                Mv[k] += h12*intrho*r11**2 + h12*intrho*r12**2 + h12*intrho*r13**2
                k += 1
                Mv[k] += h12*intrho*r11*r21 + h12*intrho*r12*r22 + h12*intrho*r13*r23
                k += 1
                Mv[k] += h12*intrho*r11*r31 + h12*intrho*r12*r32 + h12*intrho*r13*r33
                k += 1
                Mv[k] += h13*intrho*r11**2 + h13*intrho*r12**2 + h13*intrho*r13**2
                k += 1
                Mv[k] += h13*intrho*r11*r21 + h13*intrho*r12*r22 + h13*intrho*r13*r23
                k += 1
                Mv[k] += h13*intrho*r11*r31 + h13*intrho*r12*r32 + h13*intrho*r13*r33
                k += 1
                Mv[k] += h14*intrho*r11**2 + h14*intrho*r12**2 + h14*intrho*r13**2
                k += 1
                Mv[k] += h14*intrho*r11*r21 + h14*intrho*r12*r22 + h14*intrho*r13*r23
                k += 1
                Mv[k] += h14*intrho*r11*r31 + h14*intrho*r12*r32 + h14*intrho*r13*r33
                k += 1
                Mv[k] += h11*intrho*r11*r21 + h11*intrho*r12*r22 + h11*intrho*r13*r23
                k += 1
                Mv[k] += h11*intrho*r21**2 + h11*intrho*r22**2 + h11*intrho*r23**2
                k += 1
                Mv[k] += h11*intrho*r21*r31 + h11*intrho*r22*r32 + h11*intrho*r23*r33
                k += 1
                Mv[k] += h12*intrho*r11*r21 + h12*intrho*r12*r22 + h12*intrho*r13*r23
                k += 1
                Mv[k] += h12*intrho*r21**2 + h12*intrho*r22**2 + h12*intrho*r23**2
                k += 1
                Mv[k] += h12*intrho*r21*r31 + h12*intrho*r22*r32 + h12*intrho*r23*r33
                k += 1
                Mv[k] += h13*intrho*r11*r21 + h13*intrho*r12*r22 + h13*intrho*r13*r23
                k += 1
                Mv[k] += h13*intrho*r21**2 + h13*intrho*r22**2 + h13*intrho*r23**2
                k += 1
                Mv[k] += h13*intrho*r21*r31 + h13*intrho*r22*r32 + h13*intrho*r23*r33
                k += 1
                Mv[k] += h14*intrho*r11*r21 + h14*intrho*r12*r22 + h14*intrho*r13*r23
                k += 1
                Mv[k] += h14*intrho*r21**2 + h14*intrho*r22**2 + h14*intrho*r23**2
                k += 1
                Mv[k] += h14*intrho*r21*r31 + h14*intrho*r22*r32 + h14*intrho*r23*r33
                k += 1
                Mv[k] += h11*intrho*r11*r31 + h11*intrho*r12*r32 + h11*intrho*r13*r33
                k += 1
                Mv[k] += h11*intrho*r21*r31 + h11*intrho*r22*r32 + h11*intrho*r23*r33
                k += 1
                Mv[k] += h11*intrho*r31**2 + h11*intrho*r32**2 + h11*intrho*r33**2
                k += 1
                Mv[k] += h12*intrho*r11*r31 + h12*intrho*r12*r32 + h12*intrho*r13*r33
                k += 1
                Mv[k] += h12*intrho*r21*r31 + h12*intrho*r22*r32 + h12*intrho*r23*r33
                k += 1
                Mv[k] += h12*intrho*r31**2 + h12*intrho*r32**2 + h12*intrho*r33**2
                k += 1
                Mv[k] += h13*intrho*r11*r31 + h13*intrho*r12*r32 + h13*intrho*r13*r33
                k += 1
                Mv[k] += h13*intrho*r21*r31 + h13*intrho*r22*r32 + h13*intrho*r23*r33
                k += 1
                Mv[k] += h13*intrho*r31**2 + h13*intrho*r32**2 + h13*intrho*r33**2
                k += 1
                Mv[k] += h14*intrho*r11*r31 + h14*intrho*r12*r32 + h14*intrho*r13*r33
                k += 1
                Mv[k] += h14*intrho*r21*r31 + h14*intrho*r22*r32 + h14*intrho*r23*r33
                k += 1
                Mv[k] += h14*intrho*r31**2 + h14*intrho*r32**2 + h14*intrho*r33**2
                k += 1
                Mv[k] += h11*intrhoz2*r11**2 + h11*intrhoz2*r12**2
                k += 1
                Mv[k] += h11*intrhoz2*r11*r21 + h11*intrhoz2*r12*r22
                k += 1
                Mv[k] += h11*intrhoz2*r11*r31 + h11*intrhoz2*r12*r32
                k += 1
                Mv[k] += h12*intrhoz2*r11**2 + h12*intrhoz2*r12**2
                k += 1
                Mv[k] += h12*intrhoz2*r11*r21 + h12*intrhoz2*r12*r22
                k += 1
                Mv[k] += h12*intrhoz2*r11*r31 + h12*intrhoz2*r12*r32
                k += 1
                Mv[k] += h13*intrhoz2*r11**2 + h13*intrhoz2*r12**2
                k += 1
                Mv[k] += h13*intrhoz2*r11*r21 + h13*intrhoz2*r12*r22
                k += 1
                Mv[k] += h13*intrhoz2*r11*r31 + h13*intrhoz2*r12*r32
                k += 1
                Mv[k] += h14*intrhoz2*r11**2 + h14*intrhoz2*r12**2
                k += 1
                Mv[k] += h14*intrhoz2*r11*r21 + h14*intrhoz2*r12*r22
                k += 1
                Mv[k] += h14*intrhoz2*r11*r31 + h14*intrhoz2*r12*r32
                k += 1
                Mv[k] += h11*intrhoz2*r11*r21 + h11*intrhoz2*r12*r22
                k += 1
                Mv[k] += h11*intrhoz2*r21**2 + h11*intrhoz2*r22**2
                k += 1
                Mv[k] += h11*intrhoz2*r21*r31 + h11*intrhoz2*r22*r32
                k += 1
                Mv[k] += h12*intrhoz2*r11*r21 + h12*intrhoz2*r12*r22
                k += 1
                Mv[k] += h12*intrhoz2*r21**2 + h12*intrhoz2*r22**2
                k += 1
                Mv[k] += h12*intrhoz2*r21*r31 + h12*intrhoz2*r22*r32
                k += 1
                Mv[k] += h13*intrhoz2*r11*r21 + h13*intrhoz2*r12*r22
                k += 1
                Mv[k] += h13*intrhoz2*r21**2 + h13*intrhoz2*r22**2
                k += 1
                Mv[k] += h13*intrhoz2*r21*r31 + h13*intrhoz2*r22*r32
                k += 1
                Mv[k] += h14*intrhoz2*r11*r21 + h14*intrhoz2*r12*r22
                k += 1
                Mv[k] += h14*intrhoz2*r21**2 + h14*intrhoz2*r22**2
                k += 1
                Mv[k] += h14*intrhoz2*r21*r31 + h14*intrhoz2*r22*r32
                k += 1
                Mv[k] += h11*intrhoz2*r11*r31 + h11*intrhoz2*r12*r32
                k += 1
                Mv[k] += h11*intrhoz2*r21*r31 + h11*intrhoz2*r22*r32
                k += 1
                Mv[k] += h11*intrhoz2*r31**2 + h11*intrhoz2*r32**2
                k += 1
                Mv[k] += h12*intrhoz2*r11*r31 + h12*intrhoz2*r12*r32
                k += 1
                Mv[k] += h12*intrhoz2*r21*r31 + h12*intrhoz2*r22*r32
                k += 1
                Mv[k] += h12*intrhoz2*r31**2 + h12*intrhoz2*r32**2
                k += 1
                Mv[k] += h13*intrhoz2*r11*r31 + h13*intrhoz2*r12*r32
                k += 1
                Mv[k] += h13*intrhoz2*r21*r31 + h13*intrhoz2*r22*r32
                k += 1
                Mv[k] += h13*intrhoz2*r31**2 + h13*intrhoz2*r32**2
                k += 1
                Mv[k] += h14*intrhoz2*r11*r31 + h14*intrhoz2*r12*r32
                k += 1
                Mv[k] += h14*intrhoz2*r21*r31 + h14*intrhoz2*r22*r32
                k += 1
                Mv[k] += h14*intrhoz2*r31**2 + h14*intrhoz2*r32**2
                k += 1
                Mv[k] += h12*intrho*r11**2 + h12*intrho*r12**2 + h12*intrho*r13**2
                k += 1
                Mv[k] += h12*intrho*r11*r21 + h12*intrho*r12*r22 + h12*intrho*r13*r23
                k += 1
                Mv[k] += h12*intrho*r11*r31 + h12*intrho*r12*r32 + h12*intrho*r13*r33
                k += 1
                Mv[k] += h22*intrho*r11**2 + h22*intrho*r12**2 + h22*intrho*r13**2
                k += 1
                Mv[k] += h22*intrho*r11*r21 + h22*intrho*r12*r22 + h22*intrho*r13*r23
                k += 1
                Mv[k] += h22*intrho*r11*r31 + h22*intrho*r12*r32 + h22*intrho*r13*r33
                k += 1
                Mv[k] += h23*intrho*r11**2 + h23*intrho*r12**2 + h23*intrho*r13**2
                k += 1
                Mv[k] += h23*intrho*r11*r21 + h23*intrho*r12*r22 + h23*intrho*r13*r23
                k += 1
                Mv[k] += h23*intrho*r11*r31 + h23*intrho*r12*r32 + h23*intrho*r13*r33
                k += 1
                Mv[k] += h24*intrho*r11**2 + h24*intrho*r12**2 + h24*intrho*r13**2
                k += 1
                Mv[k] += h24*intrho*r11*r21 + h24*intrho*r12*r22 + h24*intrho*r13*r23
                k += 1
                Mv[k] += h24*intrho*r11*r31 + h24*intrho*r12*r32 + h24*intrho*r13*r33
                k += 1
                Mv[k] += h12*intrho*r11*r21 + h12*intrho*r12*r22 + h12*intrho*r13*r23
                k += 1
                Mv[k] += h12*intrho*r21**2 + h12*intrho*r22**2 + h12*intrho*r23**2
                k += 1
                Mv[k] += h12*intrho*r21*r31 + h12*intrho*r22*r32 + h12*intrho*r23*r33
                k += 1
                Mv[k] += h22*intrho*r11*r21 + h22*intrho*r12*r22 + h22*intrho*r13*r23
                k += 1
                Mv[k] += h22*intrho*r21**2 + h22*intrho*r22**2 + h22*intrho*r23**2
                k += 1
                Mv[k] += h22*intrho*r21*r31 + h22*intrho*r22*r32 + h22*intrho*r23*r33
                k += 1
                Mv[k] += h23*intrho*r11*r21 + h23*intrho*r12*r22 + h23*intrho*r13*r23
                k += 1
                Mv[k] += h23*intrho*r21**2 + h23*intrho*r22**2 + h23*intrho*r23**2
                k += 1
                Mv[k] += h23*intrho*r21*r31 + h23*intrho*r22*r32 + h23*intrho*r23*r33
                k += 1
                Mv[k] += h24*intrho*r11*r21 + h24*intrho*r12*r22 + h24*intrho*r13*r23
                k += 1
                Mv[k] += h24*intrho*r21**2 + h24*intrho*r22**2 + h24*intrho*r23**2
                k += 1
                Mv[k] += h24*intrho*r21*r31 + h24*intrho*r22*r32 + h24*intrho*r23*r33
                k += 1
                Mv[k] += h12*intrho*r11*r31 + h12*intrho*r12*r32 + h12*intrho*r13*r33
                k += 1
                Mv[k] += h12*intrho*r21*r31 + h12*intrho*r22*r32 + h12*intrho*r23*r33
                k += 1
                Mv[k] += h12*intrho*r31**2 + h12*intrho*r32**2 + h12*intrho*r33**2
                k += 1
                Mv[k] += h22*intrho*r11*r31 + h22*intrho*r12*r32 + h22*intrho*r13*r33
                k += 1
                Mv[k] += h22*intrho*r21*r31 + h22*intrho*r22*r32 + h22*intrho*r23*r33
                k += 1
                Mv[k] += h22*intrho*r31**2 + h22*intrho*r32**2 + h22*intrho*r33**2
                k += 1
                Mv[k] += h23*intrho*r11*r31 + h23*intrho*r12*r32 + h23*intrho*r13*r33
                k += 1
                Mv[k] += h23*intrho*r21*r31 + h23*intrho*r22*r32 + h23*intrho*r23*r33
                k += 1
                Mv[k] += h23*intrho*r31**2 + h23*intrho*r32**2 + h23*intrho*r33**2
                k += 1
                Mv[k] += h24*intrho*r11*r31 + h24*intrho*r12*r32 + h24*intrho*r13*r33
                k += 1
                Mv[k] += h24*intrho*r21*r31 + h24*intrho*r22*r32 + h24*intrho*r23*r33
                k += 1
                Mv[k] += h24*intrho*r31**2 + h24*intrho*r32**2 + h24*intrho*r33**2
                k += 1
                Mv[k] += h12*intrhoz2*r11**2 + h12*intrhoz2*r12**2
                k += 1
                Mv[k] += h12*intrhoz2*r11*r21 + h12*intrhoz2*r12*r22
                k += 1
                Mv[k] += h12*intrhoz2*r11*r31 + h12*intrhoz2*r12*r32
                k += 1
                Mv[k] += h22*intrhoz2*r11**2 + h22*intrhoz2*r12**2
                k += 1
                Mv[k] += h22*intrhoz2*r11*r21 + h22*intrhoz2*r12*r22
                k += 1
                Mv[k] += h22*intrhoz2*r11*r31 + h22*intrhoz2*r12*r32
                k += 1
                Mv[k] += h23*intrhoz2*r11**2 + h23*intrhoz2*r12**2
                k += 1
                Mv[k] += h23*intrhoz2*r11*r21 + h23*intrhoz2*r12*r22
                k += 1
                Mv[k] += h23*intrhoz2*r11*r31 + h23*intrhoz2*r12*r32
                k += 1
                Mv[k] += h24*intrhoz2*r11**2 + h24*intrhoz2*r12**2
                k += 1
                Mv[k] += h24*intrhoz2*r11*r21 + h24*intrhoz2*r12*r22
                k += 1
                Mv[k] += h24*intrhoz2*r11*r31 + h24*intrhoz2*r12*r32
                k += 1
                Mv[k] += h12*intrhoz2*r11*r21 + h12*intrhoz2*r12*r22
                k += 1
                Mv[k] += h12*intrhoz2*r21**2 + h12*intrhoz2*r22**2
                k += 1
                Mv[k] += h12*intrhoz2*r21*r31 + h12*intrhoz2*r22*r32
                k += 1
                Mv[k] += h22*intrhoz2*r11*r21 + h22*intrhoz2*r12*r22
                k += 1
                Mv[k] += h22*intrhoz2*r21**2 + h22*intrhoz2*r22**2
                k += 1
                Mv[k] += h22*intrhoz2*r21*r31 + h22*intrhoz2*r22*r32
                k += 1
                Mv[k] += h23*intrhoz2*r11*r21 + h23*intrhoz2*r12*r22
                k += 1
                Mv[k] += h23*intrhoz2*r21**2 + h23*intrhoz2*r22**2
                k += 1
                Mv[k] += h23*intrhoz2*r21*r31 + h23*intrhoz2*r22*r32
                k += 1
                Mv[k] += h24*intrhoz2*r11*r21 + h24*intrhoz2*r12*r22
                k += 1
                Mv[k] += h24*intrhoz2*r21**2 + h24*intrhoz2*r22**2
                k += 1
                Mv[k] += h24*intrhoz2*r21*r31 + h24*intrhoz2*r22*r32
                k += 1
                Mv[k] += h12*intrhoz2*r11*r31 + h12*intrhoz2*r12*r32
                k += 1
                Mv[k] += h12*intrhoz2*r21*r31 + h12*intrhoz2*r22*r32
                k += 1
                Mv[k] += h12*intrhoz2*r31**2 + h12*intrhoz2*r32**2
                k += 1
                Mv[k] += h22*intrhoz2*r11*r31 + h22*intrhoz2*r12*r32
                k += 1
                Mv[k] += h22*intrhoz2*r21*r31 + h22*intrhoz2*r22*r32
                k += 1
                Mv[k] += h22*intrhoz2*r31**2 + h22*intrhoz2*r32**2
                k += 1
                Mv[k] += h23*intrhoz2*r11*r31 + h23*intrhoz2*r12*r32
                k += 1
                Mv[k] += h23*intrhoz2*r21*r31 + h23*intrhoz2*r22*r32
                k += 1
                Mv[k] += h23*intrhoz2*r31**2 + h23*intrhoz2*r32**2
                k += 1
                Mv[k] += h24*intrhoz2*r11*r31 + h24*intrhoz2*r12*r32
                k += 1
                Mv[k] += h24*intrhoz2*r21*r31 + h24*intrhoz2*r22*r32
                k += 1
                Mv[k] += h24*intrhoz2*r31**2 + h24*intrhoz2*r32**2
                k += 1
                Mv[k] += h13*intrho*r11**2 + h13*intrho*r12**2 + h13*intrho*r13**2
                k += 1
                Mv[k] += h13*intrho*r11*r21 + h13*intrho*r12*r22 + h13*intrho*r13*r23
                k += 1
                Mv[k] += h13*intrho*r11*r31 + h13*intrho*r12*r32 + h13*intrho*r13*r33
                k += 1
                Mv[k] += h23*intrho*r11**2 + h23*intrho*r12**2 + h23*intrho*r13**2
                k += 1
                Mv[k] += h23*intrho*r11*r21 + h23*intrho*r12*r22 + h23*intrho*r13*r23
                k += 1
                Mv[k] += h23*intrho*r11*r31 + h23*intrho*r12*r32 + h23*intrho*r13*r33
                k += 1
                Mv[k] += h33*intrho*r11**2 + h33*intrho*r12**2 + h33*intrho*r13**2
                k += 1
                Mv[k] += h33*intrho*r11*r21 + h33*intrho*r12*r22 + h33*intrho*r13*r23
                k += 1
                Mv[k] += h33*intrho*r11*r31 + h33*intrho*r12*r32 + h33*intrho*r13*r33
                k += 1
                Mv[k] += h34*intrho*r11**2 + h34*intrho*r12**2 + h34*intrho*r13**2
                k += 1
                Mv[k] += h34*intrho*r11*r21 + h34*intrho*r12*r22 + h34*intrho*r13*r23
                k += 1
                Mv[k] += h34*intrho*r11*r31 + h34*intrho*r12*r32 + h34*intrho*r13*r33
                k += 1
                Mv[k] += h13*intrho*r11*r21 + h13*intrho*r12*r22 + h13*intrho*r13*r23
                k += 1
                Mv[k] += h13*intrho*r21**2 + h13*intrho*r22**2 + h13*intrho*r23**2
                k += 1
                Mv[k] += h13*intrho*r21*r31 + h13*intrho*r22*r32 + h13*intrho*r23*r33
                k += 1
                Mv[k] += h23*intrho*r11*r21 + h23*intrho*r12*r22 + h23*intrho*r13*r23
                k += 1
                Mv[k] += h23*intrho*r21**2 + h23*intrho*r22**2 + h23*intrho*r23**2
                k += 1
                Mv[k] += h23*intrho*r21*r31 + h23*intrho*r22*r32 + h23*intrho*r23*r33
                k += 1
                Mv[k] += h33*intrho*r11*r21 + h33*intrho*r12*r22 + h33*intrho*r13*r23
                k += 1
                Mv[k] += h33*intrho*r21**2 + h33*intrho*r22**2 + h33*intrho*r23**2
                k += 1
                Mv[k] += h33*intrho*r21*r31 + h33*intrho*r22*r32 + h33*intrho*r23*r33
                k += 1
                Mv[k] += h34*intrho*r11*r21 + h34*intrho*r12*r22 + h34*intrho*r13*r23
                k += 1
                Mv[k] += h34*intrho*r21**2 + h34*intrho*r22**2 + h34*intrho*r23**2
                k += 1
                Mv[k] += h34*intrho*r21*r31 + h34*intrho*r22*r32 + h34*intrho*r23*r33
                k += 1
                Mv[k] += h13*intrho*r11*r31 + h13*intrho*r12*r32 + h13*intrho*r13*r33
                k += 1
                Mv[k] += h13*intrho*r21*r31 + h13*intrho*r22*r32 + h13*intrho*r23*r33
                k += 1
                Mv[k] += h13*intrho*r31**2 + h13*intrho*r32**2 + h13*intrho*r33**2
                k += 1
                Mv[k] += h23*intrho*r11*r31 + h23*intrho*r12*r32 + h23*intrho*r13*r33
                k += 1
                Mv[k] += h23*intrho*r21*r31 + h23*intrho*r22*r32 + h23*intrho*r23*r33
                k += 1
                Mv[k] += h23*intrho*r31**2 + h23*intrho*r32**2 + h23*intrho*r33**2
                k += 1
                Mv[k] += h33*intrho*r11*r31 + h33*intrho*r12*r32 + h33*intrho*r13*r33
                k += 1
                Mv[k] += h33*intrho*r21*r31 + h33*intrho*r22*r32 + h33*intrho*r23*r33
                k += 1
                Mv[k] += h33*intrho*r31**2 + h33*intrho*r32**2 + h33*intrho*r33**2
                k += 1
                Mv[k] += h34*intrho*r11*r31 + h34*intrho*r12*r32 + h34*intrho*r13*r33
                k += 1
                Mv[k] += h34*intrho*r21*r31 + h34*intrho*r22*r32 + h34*intrho*r23*r33
                k += 1
                Mv[k] += h34*intrho*r31**2 + h34*intrho*r32**2 + h34*intrho*r33**2
                k += 1
                Mv[k] += h13*intrhoz2*r11**2 + h13*intrhoz2*r12**2
                k += 1
                Mv[k] += h13*intrhoz2*r11*r21 + h13*intrhoz2*r12*r22
                k += 1
                Mv[k] += h13*intrhoz2*r11*r31 + h13*intrhoz2*r12*r32
                k += 1
                Mv[k] += h23*intrhoz2*r11**2 + h23*intrhoz2*r12**2
                k += 1
                Mv[k] += h23*intrhoz2*r11*r21 + h23*intrhoz2*r12*r22
                k += 1
                Mv[k] += h23*intrhoz2*r11*r31 + h23*intrhoz2*r12*r32
                k += 1
                Mv[k] += h33*intrhoz2*r11**2 + h33*intrhoz2*r12**2
                k += 1
                Mv[k] += h33*intrhoz2*r11*r21 + h33*intrhoz2*r12*r22
                k += 1
                Mv[k] += h33*intrhoz2*r11*r31 + h33*intrhoz2*r12*r32
                k += 1
                Mv[k] += h34*intrhoz2*r11**2 + h34*intrhoz2*r12**2
                k += 1
                Mv[k] += h34*intrhoz2*r11*r21 + h34*intrhoz2*r12*r22
                k += 1
                Mv[k] += h34*intrhoz2*r11*r31 + h34*intrhoz2*r12*r32
                k += 1
                Mv[k] += h13*intrhoz2*r11*r21 + h13*intrhoz2*r12*r22
                k += 1
                Mv[k] += h13*intrhoz2*r21**2 + h13*intrhoz2*r22**2
                k += 1
                Mv[k] += h13*intrhoz2*r21*r31 + h13*intrhoz2*r22*r32
                k += 1
                Mv[k] += h23*intrhoz2*r11*r21 + h23*intrhoz2*r12*r22
                k += 1
                Mv[k] += h23*intrhoz2*r21**2 + h23*intrhoz2*r22**2
                k += 1
                Mv[k] += h23*intrhoz2*r21*r31 + h23*intrhoz2*r22*r32
                k += 1
                Mv[k] += h33*intrhoz2*r11*r21 + h33*intrhoz2*r12*r22
                k += 1
                Mv[k] += h33*intrhoz2*r21**2 + h33*intrhoz2*r22**2
                k += 1
                Mv[k] += h33*intrhoz2*r21*r31 + h33*intrhoz2*r22*r32
                k += 1
                Mv[k] += h34*intrhoz2*r11*r21 + h34*intrhoz2*r12*r22
                k += 1
                Mv[k] += h34*intrhoz2*r21**2 + h34*intrhoz2*r22**2
                k += 1
                Mv[k] += h34*intrhoz2*r21*r31 + h34*intrhoz2*r22*r32
                k += 1
                Mv[k] += h13*intrhoz2*r11*r31 + h13*intrhoz2*r12*r32
                k += 1
                Mv[k] += h13*intrhoz2*r21*r31 + h13*intrhoz2*r22*r32
                k += 1
                Mv[k] += h13*intrhoz2*r31**2 + h13*intrhoz2*r32**2
                k += 1
                Mv[k] += h23*intrhoz2*r11*r31 + h23*intrhoz2*r12*r32
                k += 1
                Mv[k] += h23*intrhoz2*r21*r31 + h23*intrhoz2*r22*r32
                k += 1
                Mv[k] += h23*intrhoz2*r31**2 + h23*intrhoz2*r32**2
                k += 1
                Mv[k] += h33*intrhoz2*r11*r31 + h33*intrhoz2*r12*r32
                k += 1
                Mv[k] += h33*intrhoz2*r21*r31 + h33*intrhoz2*r22*r32
                k += 1
                Mv[k] += h33*intrhoz2*r31**2 + h33*intrhoz2*r32**2
                k += 1
                Mv[k] += h34*intrhoz2*r11*r31 + h34*intrhoz2*r12*r32
                k += 1
                Mv[k] += h34*intrhoz2*r21*r31 + h34*intrhoz2*r22*r32
                k += 1
                Mv[k] += h34*intrhoz2*r31**2 + h34*intrhoz2*r32**2
                k += 1
                Mv[k] += h14*intrho*r11**2 + h14*intrho*r12**2 + h14*intrho*r13**2
                k += 1
                Mv[k] += h14*intrho*r11*r21 + h14*intrho*r12*r22 + h14*intrho*r13*r23
                k += 1
                Mv[k] += h14*intrho*r11*r31 + h14*intrho*r12*r32 + h14*intrho*r13*r33
                k += 1
                Mv[k] += h24*intrho*r11**2 + h24*intrho*r12**2 + h24*intrho*r13**2
                k += 1
                Mv[k] += h24*intrho*r11*r21 + h24*intrho*r12*r22 + h24*intrho*r13*r23
                k += 1
                Mv[k] += h24*intrho*r11*r31 + h24*intrho*r12*r32 + h24*intrho*r13*r33
                k += 1
                Mv[k] += h34*intrho*r11**2 + h34*intrho*r12**2 + h34*intrho*r13**2
                k += 1
                Mv[k] += h34*intrho*r11*r21 + h34*intrho*r12*r22 + h34*intrho*r13*r23
                k += 1
                Mv[k] += h34*intrho*r11*r31 + h34*intrho*r12*r32 + h34*intrho*r13*r33
                k += 1
                Mv[k] += h44*intrho*r11**2 + h44*intrho*r12**2 + h44*intrho*r13**2
                k += 1
                Mv[k] += h44*intrho*r11*r21 + h44*intrho*r12*r22 + h44*intrho*r13*r23
                k += 1
                Mv[k] += h44*intrho*r11*r31 + h44*intrho*r12*r32 + h44*intrho*r13*r33
                k += 1
                Mv[k] += h14*intrho*r11*r21 + h14*intrho*r12*r22 + h14*intrho*r13*r23
                k += 1
                Mv[k] += h14*intrho*r21**2 + h14*intrho*r22**2 + h14*intrho*r23**2
                k += 1
                Mv[k] += h14*intrho*r21*r31 + h14*intrho*r22*r32 + h14*intrho*r23*r33
                k += 1
                Mv[k] += h24*intrho*r11*r21 + h24*intrho*r12*r22 + h24*intrho*r13*r23
                k += 1
                Mv[k] += h24*intrho*r21**2 + h24*intrho*r22**2 + h24*intrho*r23**2
                k += 1
                Mv[k] += h24*intrho*r21*r31 + h24*intrho*r22*r32 + h24*intrho*r23*r33
                k += 1
                Mv[k] += h34*intrho*r11*r21 + h34*intrho*r12*r22 + h34*intrho*r13*r23
                k += 1
                Mv[k] += h34*intrho*r21**2 + h34*intrho*r22**2 + h34*intrho*r23**2
                k += 1
                Mv[k] += h34*intrho*r21*r31 + h34*intrho*r22*r32 + h34*intrho*r23*r33
                k += 1
                Mv[k] += h44*intrho*r11*r21 + h44*intrho*r12*r22 + h44*intrho*r13*r23
                k += 1
                Mv[k] += h44*intrho*r21**2 + h44*intrho*r22**2 + h44*intrho*r23**2
                k += 1
                Mv[k] += h44*intrho*r21*r31 + h44*intrho*r22*r32 + h44*intrho*r23*r33
                k += 1
                Mv[k] += h14*intrho*r11*r31 + h14*intrho*r12*r32 + h14*intrho*r13*r33
                k += 1
                Mv[k] += h14*intrho*r21*r31 + h14*intrho*r22*r32 + h14*intrho*r23*r33
                k += 1
                Mv[k] += h14*intrho*r31**2 + h14*intrho*r32**2 + h14*intrho*r33**2
                k += 1
                Mv[k] += h24*intrho*r11*r31 + h24*intrho*r12*r32 + h24*intrho*r13*r33
                k += 1
                Mv[k] += h24*intrho*r21*r31 + h24*intrho*r22*r32 + h24*intrho*r23*r33
                k += 1
                Mv[k] += h24*intrho*r31**2 + h24*intrho*r32**2 + h24*intrho*r33**2
                k += 1
                Mv[k] += h34*intrho*r11*r31 + h34*intrho*r12*r32 + h34*intrho*r13*r33
                k += 1
                Mv[k] += h34*intrho*r21*r31 + h34*intrho*r22*r32 + h34*intrho*r23*r33
                k += 1
                Mv[k] += h34*intrho*r31**2 + h34*intrho*r32**2 + h34*intrho*r33**2
                k += 1
                Mv[k] += h44*intrho*r11*r31 + h44*intrho*r12*r32 + h44*intrho*r13*r33
                k += 1
                Mv[k] += h44*intrho*r21*r31 + h44*intrho*r22*r32 + h44*intrho*r23*r33
                k += 1
                Mv[k] += h44*intrho*r31**2 + h44*intrho*r32**2 + h44*intrho*r33**2
                k += 1
                Mv[k] += h14*intrhoz2*r11**2 + h14*intrhoz2*r12**2
                k += 1
                Mv[k] += h14*intrhoz2*r11*r21 + h14*intrhoz2*r12*r22
                k += 1
                Mv[k] += h14*intrhoz2*r11*r31 + h14*intrhoz2*r12*r32
                k += 1
                Mv[k] += h24*intrhoz2*r11**2 + h24*intrhoz2*r12**2
                k += 1
                Mv[k] += h24*intrhoz2*r11*r21 + h24*intrhoz2*r12*r22
                k += 1
                Mv[k] += h24*intrhoz2*r11*r31 + h24*intrhoz2*r12*r32
                k += 1
                Mv[k] += h34*intrhoz2*r11**2 + h34*intrhoz2*r12**2
                k += 1
                Mv[k] += h34*intrhoz2*r11*r21 + h34*intrhoz2*r12*r22
                k += 1
                Mv[k] += h34*intrhoz2*r11*r31 + h34*intrhoz2*r12*r32
                k += 1
                Mv[k] += h44*intrhoz2*r11**2 + h44*intrhoz2*r12**2
                k += 1
                Mv[k] += h44*intrhoz2*r11*r21 + h44*intrhoz2*r12*r22
                k += 1
                Mv[k] += h44*intrhoz2*r11*r31 + h44*intrhoz2*r12*r32
                k += 1
                Mv[k] += h14*intrhoz2*r11*r21 + h14*intrhoz2*r12*r22
                k += 1
                Mv[k] += h14*intrhoz2*r21**2 + h14*intrhoz2*r22**2
                k += 1
                Mv[k] += h14*intrhoz2*r21*r31 + h14*intrhoz2*r22*r32
                k += 1
                Mv[k] += h24*intrhoz2*r11*r21 + h24*intrhoz2*r12*r22
                k += 1
                Mv[k] += h24*intrhoz2*r21**2 + h24*intrhoz2*r22**2
                k += 1
                Mv[k] += h24*intrhoz2*r21*r31 + h24*intrhoz2*r22*r32
                k += 1
                Mv[k] += h34*intrhoz2*r11*r21 + h34*intrhoz2*r12*r22
                k += 1
                Mv[k] += h34*intrhoz2*r21**2 + h34*intrhoz2*r22**2
                k += 1
                Mv[k] += h34*intrhoz2*r21*r31 + h34*intrhoz2*r22*r32
                k += 1
                Mv[k] += h44*intrhoz2*r11*r21 + h44*intrhoz2*r12*r22
                k += 1
                Mv[k] += h44*intrhoz2*r21**2 + h44*intrhoz2*r22**2
                k += 1
                Mv[k] += h44*intrhoz2*r21*r31 + h44*intrhoz2*r22*r32
                k += 1
                Mv[k] += h14*intrhoz2*r11*r31 + h14*intrhoz2*r12*r32
                k += 1
                Mv[k] += h14*intrhoz2*r21*r31 + h14*intrhoz2*r22*r32
                k += 1
                Mv[k] += h14*intrhoz2*r31**2 + h14*intrhoz2*r32**2
                k += 1
                Mv[k] += h24*intrhoz2*r11*r31 + h24*intrhoz2*r12*r32
                k += 1
                Mv[k] += h24*intrhoz2*r21*r31 + h24*intrhoz2*r22*r32
                k += 1
                Mv[k] += h24*intrhoz2*r31**2 + h24*intrhoz2*r32**2
                k += 1
                Mv[k] += h34*intrhoz2*r11*r31 + h34*intrhoz2*r12*r32
                k += 1
                Mv[k] += h34*intrhoz2*r21*r31 + h34*intrhoz2*r22*r32
                k += 1
                Mv[k] += h34*intrhoz2*r31**2 + h34*intrhoz2*r32**2
                k += 1
                Mv[k] += h44*intrhoz2*r11*r31 + h44*intrhoz2*r12*r32
                k += 1
                Mv[k] += h44*intrhoz2*r21*r31 + h44*intrhoz2*r22*r32
                k += 1
                Mv[k] += h44*intrhoz2*r31**2 + h44*intrhoz2*r32**2

